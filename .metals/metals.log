2024.06.09 02:18:45 INFO  Started: Metals version 1.3.1 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.0.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@6942d6fb]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@2e5e059d]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@6942d6fb]
2024.06.09 02:18:46 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.09 02:18:47 INFO  Attempting to connect to the build server...
2024.06.09 02:18:47 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.09 02:18:47 INFO  Attempting to connect to the build server...
2024.06.09 02:18:47 INFO  Attempting to connect to the build server...
2024.06.09 02:18:47 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.09 02:18:48 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.09 02:18:47 INFO  time: Connected to build server in 0.65s
2024.06.09 02:18:47 INFO  Connected to Build server: Bloop v1.5.17
2024.06.09 02:18:47 INFO  time: Imported build in 0.23s
2024.06.09 02:19:16 INFO  running 'C:\Program Files\Amazon Corretto\jdk11.0.3_7\bin\java.exe -Djline.terminal=jline.UnsupportedTerminal -Dsbt.log.noformat=true -Dfile.encoding=UTF-8 -jar C:\Users\sakai\AppData\Local\Temp\metals10743365578172667582\sbt-launch.jar -Dbloop.export-jar-classifiers=sources bloopInstall'
2024.06.09 02:19:19 INFO  [info] welcome to sbt 1.10.0 (Amazon.com Inc. Java 11.0.3)
2024.06.09 02:19:20 INFO  [info] loading settings for project exam-manager-build-build-build from metals.sbt ...
2024.06.09 02:19:21 INFO  [info] loading project definition from C:\Users\sakai\Developments\exam-manager\project\project\project
2024.06.09 02:19:22 INFO  [info] loading settings for project exam-manager-build-build from metals.sbt ...
2024.06.09 02:19:22 INFO  [info] loading project definition from C:\Users\sakai\Developments\exam-manager\project\project
2024.06.09 02:19:26 INFO  [success] Generated .bloop\exam-manager-build-build.json
2024.06.09 02:19:26 INFO  [success] Total time: 4 s, completed 2024/06/09 2:19:26
2024.06.09 02:19:26 INFO  [info] loading settings for project exam-manager-build from metals.sbt,plugins.sbt ...
2024.06.09 02:19:26 INFO  [info] loading project definition from C:\Users\sakai\Developments\exam-manager\project
2024.06.09 02:19:28 INFO  [success] Generated .bloop\exam-manager-build.json
2024.06.09 02:19:28 INFO  [success] Total time: 2 s, completed 2024/06/09 2:19:29
2024.06.09 02:19:30 INFO  [info] loading settings for project root from build.sbt ...
2024.06.09 02:19:30 INFO  [info]   __              __
2024.06.09 02:19:30 INFO  [info]   \ \     ____   / /____ _ __  __
2024.06.09 02:19:30 INFO  [info]    \ \   / __ \ / // __ `// / / /
2024.06.09 02:19:30 INFO  [info]    / /  / /_/ // // /_/ // /_/ /
2024.06.09 02:19:30 INFO  [info]   /_/  / .___//_/ \__,_/ \__, /
2024.06.09 02:19:30 INFO  [info]       /_/               /____/
2024.06.09 02:19:30 INFO  [info] 
2024.06.09 02:19:30 INFO  [info] Version 3.0.3 running Java 11.0.3
2024.06.09 02:19:30 INFO  [info] 
2024.06.09 02:19:30 INFO  [info] Play is run entirely by the community. Please consider contributing and/or donating:
2024.06.09 02:19:30 INFO  [info] https://www.playframework.com/sponsors
2024.06.09 02:19:30 INFO  [info] 
2024.06.09 02:19:39 INFO  [success] Generated .bloop\root.json
2024.06.09 02:19:39 INFO  [success] Generated .bloop\root-test.json
2024.06.09 02:19:39 INFO  [success] Total time: 9 s, completed 2024/06/09 2:19:39
2024.06.09 02:19:39 INFO  time: ran 'sbt bloopInstall' in 23s
2024.06.09 02:19:39 INFO  Disconnecting from Bloop session...
2024.06.09 02:19:39 INFO  Shut down connection with build server.
2024.06.09 02:19:39 INFO  Shut down connection with build server.
2024.06.09 02:19:39 INFO  Shut down connection with build server.
2024.06.09 02:19:39 INFO  Attempting to connect to the build server...
2024.06.09 02:19:39 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.09 02:19:39 INFO  Attempting to connect to the build server...
2024.06.09 02:19:39 INFO  Attempting to connect to the build server...
2024.06.09 02:19:39 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.09 02:19:39 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.09 02:19:39 INFO  time: Connected to build server in 0.16s
2024.06.09 02:19:39 INFO  Connected to Build server: Bloop v1.5.17
2024.06.09 02:19:40 INFO  time: Imported build in 0.18s
6åé 09, 2024 2:19:44 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7
6åé 09, 2024 2:19:44 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 10
2024.06.09 02:19:45 INFO  time: indexed workspace in 57s
2024.06.09 02:19:47 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 02:19:53 INFO  time: compiled root in 5.98s
2024.06.09 02:19:53 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 02:19:55 INFO  time: compiled root in 2.56s
6åé 09, 2024 2:19:56 åﬂëO scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
èÓïÒ: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
6åé 09, 2024 2:20:05 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 77
2024.06.09 02:20:08 WARN  Using indexes to guess the definition of dbConfig
2024.06.09 02:20:09 WARN  Using indexes to guess the definition of dbConfig
6åé 09, 2024 2:20:09 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 100
2024.06.09 02:21:19 INFO  time: indexed workspace in 1m39s
2024.06.09 02:26:08 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 02:26:09 INFO  time: compiled root in 1.51s
6åé 09, 2024 2:29:25 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 135
2024.06.09 02:30:51 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 02:30:51 INFO  time: compiled root in 0.99s
2024.06.09 02:31:16 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 02:31:18 INFO  time: compiled root in 1.43s
2024.06.09 02:31:18 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 02:31:18 INFO  time: compiled root in 0.69s
6åé 09, 2024 2:32:45 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 191
2024.06.09 15:46:10 INFO  Started: Metals version 1.3.1 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.0.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@28c554d]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@3326f833]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@28c554d]
2024.06.09 15:46:14 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.09 15:46:16 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\test\infrastructrue\db\repository\ExamResultRepositoryImplSpec.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.09 15:46:16 INFO  Attempting to connect to the build server...
2024.06.09 15:46:23 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\test\infrastructrue\db\repository\ExamResultRepositoryImplSpec.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.09 15:46:23 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\test\infrastructrue\db\repository\ExamResultRepositoryImplSpec.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.09 15:46:23 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\test\infrastructrue\db\repository\ExamResultRepositoryImplSpec.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.09 15:46:23 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\test\infrastructrue\db\repository\ExamResultRepositoryImplSpec.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.09 15:46:23 WARN  no build target for: C:\Users\sakai\Developments\exam-manager\test\infrastructrue\db\repository\ExamResultRepositoryImplSpec.scala
2024.06.09 15:46:23 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\test\infrastructrue\db\repository\ExamResultRepositoryImplSpec.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.09 15:46:26 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.09 15:46:26 INFO  Attempting to connect to the build server...
2024.06.09 15:46:26 INFO  Attempting to connect to the build server...
2024.06.09 15:46:26 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.09 15:46:27 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.09 15:46:26 INFO  time: Connected to build server in 11s
2024.06.09 15:46:26 INFO  Connected to Build server: Bloop v1.5.17
2024.06.09 15:46:27 INFO  time: Imported build in 0.51s
2024.06.09 15:48:23 INFO  time: indexed workspace in 1m55s
2024.06.09 15:52:02 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 15:52:07 INFO  time: compiled root in 4.72s
2024.06.09 15:52:07 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 15:52:09 INFO  time: compiled root in 1.75s
2024.06.09 15:52:09 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 15:52:10 INFO  time: compiled root in 1.25s
2024.06.09 15:52:17 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 15:52:18 INFO  time: compiled root in 1.52s
6åé 09, 2024 3:53:49 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 88
2024.06.09 15:54:29 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 15:54:29 INFO  time: compiled root in 0.91s
6åé 09, 2024 3:54:51 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 197
2024.06.09 15:55:33 WARN  Using indexes to guess the definition of saveExamResult
2024.06.09 15:55:33 WARN  Using indexes to guess the definition of saveExamResult
2024.06.09 15:55:34 WARN  Using indexes to guess the definition of ExamResultUsecase
2024.06.09 15:56:00 WARN  Using indexes to guess the definition of saveExamResult
2024.06.09 15:56:00 WARN  Using indexes to guess the definition of saveExamResult
6åé 09, 2024 3:56:00 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 306
2024.06.09 15:56:26 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 15:56:27 INFO  time: compiled root in 1.04s
6åé 09, 2024 3:56:28 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 360
2024.06.09 15:56:32 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 15:56:32 INFO  time: compiled root in 0.76s
6åé 09, 2024 3:56:54 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 405
2024.06.09 15:57:21 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 15:57:21 INFO  time: compiled root in 0.68s
2024.06.09 15:57:26 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 15:57:26 INFO  time: compiled root in 0.71s
6åé 09, 2024 3:57:38 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 508
2024.06.09 15:57:38 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 15:57:38 INFO  time: compiled root in 0.78s
2024.06.09 15:57:49 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 15:57:49 INFO  time: compiled root in 0.79s
2024.06.09 15:57:56 WARN  Using indexes to guess the definition of dbConfig
6åé 09, 2024 3:58:09 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 555
2024.06.09 15:58:09 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 15:58:09 INFO  time: compiled root in 0.8s
6åé 09, 2024 3:58:18 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 565
2024.06.09 15:58:18 INFO  compiling root (17 scala sources and 1 java source)
6åé 09, 2024 3:58:18 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 572
2024.06.09 15:58:18 INFO  time: compiled root in 0.75s
2024.06.09 15:58:26 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 15:58:26 INFO  time: compiled root in 0.95s
6åé 09, 2024 3:59:02 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 634
6åé 09, 2024 3:59:11 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 684
6åé 09, 2024 4:01:43 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1514
2024.06.09 16:02:06 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\test\infrastructrue\db\repository\ExamResultRepositoryImplSpec.scala
scala.meta.tokenizers.TokenizeException: <input>:69: error: unclosed character literal
    val saveFuture = brokenRepository.save'()
                                          ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchSingleQuote$1(LegacyScanner.scala:414)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:419)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.09 16:02:08 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\test\infrastructrue\db\repository\ExamResultRepositoryImplSpec.scala
scala.meta.tokenizers.TokenizeException: <input>:69: error: unclosed character literal
    val saveFuture = brokenRepository.save('')
                                           ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchSingleQuote$1(LegacyScanner.scala:414)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:419)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 09, 2024 4:03:04 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2061
2024.06.09 16:04:06 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\test\infrastructrue\db\repository\ExamResultRepositoryImplSpec.scala
scala.meta.tokenizers.TokenizeException: <input>:88: error: unclosed quoted identifier
  "fail to find an exam result if it does not exists" in `
                                                         ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:496)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:344)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.09 16:04:06 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\test\infrastructrue\db\repository\ExamResultRepositoryImplSpec.scala
scala.meta.tokenizers.TokenizeException: <input>:88: error: unclosed quoted identifier
  "fail to find an exam result if it does not exists" in `
                                                         ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:496)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:344)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.09 16:04:51 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\test\infrastructrue\db\repository\ExamResultRepositoryImplSpec.scala
scala.meta.tokenizers.TokenizeException: <input>:90: error: unclosed character literal
    whenReady('')
              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchSingleQuote$1(LegacyScanner.scala:414)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:419)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.09 16:04:59 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\test\infrastructrue\db\repository\ExamResultRepositoryImplSpec.scala
scala.meta.tokenizers.TokenizeException: <input>:90: error: unclosed quoted identifier
    whenReady(findFuture) `
                          ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:496)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:344)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.09 16:05:37 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:05:37 INFO  time: compiled root in 0.59s
2024.06.09 16:05:49 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:05:49 INFO  time: compiled root in 0.62s
6åé 09, 2024 4:07:51 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2735
6åé 09, 2024 4:08:07 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2748
2024.06.09 16:13:40 WARN  Using indexes to guess the definition of ExamResultTable
2024.06.09 16:13:50 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.09 16:13:50 INFO  no build target found for /scala/concurrent/ExecutionContext.scala. Using presentation compiler with project's scala-library version: 3.3.3
6åé 09, 2024 4:14:22 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2806
2024.06.09 16:15:18 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:15:18 INFO  time: compiled root in 0.52s
6åé 09, 2024 4:19:51 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2859
6åé 09, 2024 4:19:54 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2867
2024.06.09 16:20:34 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:20:34 INFO  time: compiled root in 0.43s
6åé 09, 2024 4:21:24 åﬂå„ scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
èÓïÒ: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
2024.06.09 16:21:37 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:21:37 INFO  time: compiled root in 0.47s
6åé 09, 2024 4:21:40 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2981
2024.06.09 16:22:42 WARN  Using indexes to guess the definition of ExamResult
2024.06.09 16:22:59 INFO  no build target found for /slick/lifted/Shape.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.09 16:24:16 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:24:16 INFO  time: compiled root in 0.44s
2024.06.09 16:25:45 WARN  Using indexes to guess the definition of profile
2024.06.09 16:25:45 WARN  Using indexes to guess the definition of profile
6åé 09, 2024 4:25:45 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3126
2024.06.09 16:25:46 WARN  Using indexes to guess the definition of profile
2024.06.09 16:25:46 INFO  no build target found for /slick/jdbc/JdbcProfile.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.09 16:25:48 INFO  no build target found for /slick/basic/DatabaseConfig.scala. Using presentation compiler with project's scala-library version: 3.3.3
6åé 09, 2024 4:25:57 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3192
2024.06.09 16:27:05 INFO  no build target found for /scala/Predef.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.09 16:28:21 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:28:21 INFO  time: compiled root in 0.47s
2024.06.09 16:28:27 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:28:27 INFO  time: compiled root in 0.47s
6åé 09, 2024 4:28:42 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3267
6åé 09, 2024 4:28:51 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3282
2024.06.09 16:29:59 WARN  Using indexes to guess the definition of profile
2024.06.09 16:30:00 WARN  Using indexes to guess the definition of profile
6åé 09, 2024 4:30:00 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3348
6åé 09, 2024 4:30:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3356
2024.06.09 16:30:04 WARN  Using indexes to guess the definition of profile
2024.06.09 16:30:29 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:30:29 INFO  time: compiled root in 0.53s
2024.06.09 16:30:52 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:30:52 INFO  time: compiled root in 0.44s
2024.06.09 16:30:56 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:30:56 INFO  time: compiled root in 0.38s
6åé 09, 2024 4:34:17 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3457
6åé 09, 2024 4:34:48 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3476
6åé 09, 2024 4:34:56 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3488
6åé 09, 2024 4:35:53 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3511
2024.06.09 16:35:54 WARN  Using indexes to guess the definition of ExamResult
2024.06.09 16:35:54 WARN  Using indexes to guess the definition of ExamResult
2024.06.09 16:38:23 INFO  no build target found for /slick/sql/SqlProfile.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.09 16:38:23 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:38:23 INFO  time: compiled root in 0.52s
2024.06.09 16:38:34 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:38:34 INFO  time: compiled root in 0.36s
6åé 09, 2024 4:43:05 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3655
2024.06.09 16:43:37 INFO  compiling root (11 scala sources)
2024.06.09 16:43:37 INFO  time: compiled root in 0.46s
2024.06.09 16:43:37 INFO  compiling root (11 scala sources)
2024.06.09 16:43:37 INFO  time: compiled root in 0.33s
2024.06.09 16:44:13 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:44:13 INFO  time: compiled root in 0.5s
2024.06.09 16:44:29 INFO  time: code lens generation in 3.26s
2024.06.09 16:44:33 INFO  time: code lens generation in 1.33s
6åé 09, 2024 4:44:47 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3682
2024.06.09 16:44:47 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:44:47 INFO  time: compiled root in 0.41s
6åé 09, 2024 4:44:52 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3695
2024.06.09 16:47:55 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 16:47:55 INFO  time: compiled root in 0.76s
2024.06.09 17:00:26 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 17:00:26 INFO  time: compiled root in 0.45s
2024.06.09 17:01:25 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 17:01:25 INFO  time: compiled root in 0.53s
2024.06.09 17:03:00 WARN  Using indexes to guess the definition of UlidGenerator
6åé 09, 2024 5:04:32 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3991
6åé 09, 2024 5:04:33 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3999
2024.06.09 17:04:40 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 17:04:40 INFO  time: compiled root in 0.47s
6åé 09, 2024 5:05:00 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4052
6åé 09, 2024 5:06:59 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4070
2024.06.09 17:07:15 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 17:07:18 INFO  time: compiled root in 2.88s
6åé 09, 2024 5:07:39 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4150
2024.06.09 17:07:57 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 17:07:57 INFO  time: compiled root in 0.58s
2024.06.09 17:08:05 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 17:08:07 INFO  time: compiled root in 1.89s
6åé 09, 2024 5:08:15 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4247
6åé 09, 2024 5:08:29 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4257
6åé 09, 2024 5:10:16 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4271
6åé 09, 2024 5:10:50 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4289
6åé 09, 2024 5:10:55 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4305
6åé 09, 2024 5:11:01 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4312
6åé 09, 2024 5:12:56 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4402
6åé 09, 2024 5:13:52 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4435
6åé 09, 2024 5:13:55 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4443
6åé 09, 2024 5:14:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4460
6åé 09, 2024 5:14:24 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4478
6åé 09, 2024 5:15:11 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4549
6åé 09, 2024 5:15:46 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4647
2024.06.09 17:17:29 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 17:17:29 INFO  time: compiled root in 0.52s
2024.06.09 17:18:06 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 17:18:09 INFO  time: compiled root in 2.11s
2024.06.09 17:20:19 WARN  Using indexes to guess the definition of ExamResultRepository
2024.06.09 17:20:19 WARN  Using indexes to guess the definition of dbConfig
6åé 09, 2024 5:22:11 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4810
6åé 09, 2024 5:22:33 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4822
6åé 09, 2024 5:22:59 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4846
6åé 09, 2024 5:23:01 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4854
6åé 09, 2024 5:23:02 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4863
2024.06.09 17:26:21 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 17:26:21 INFO  time: compiled root in 0.47s
6åé 09, 2024 5:26:23 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4976
2024.06.09 17:26:26 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 17:26:26 INFO  time: compiled root in 0.43s
2024.06.09 17:26:41 INFO  compiling root (17 scala sources and 1 java source)
2024.06.09 17:26:48 WARN  Unexpected javac output: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.sourcegraph.shaded.com.sourcegraph.semanticdb_javac.SemanticdbJavacOptions (file:/C:/Users/sakai/AppData/Local/bloop/cache/semanticdb/com.sourcegraph.semanticdb-javac.0.9.10/semanticdb-javac-0.9.10.jar) to method com.sun.tools.javac.api.BasicJavacTask.getContext()
WARNING: Please consider reporting this to the maintainers of com.sourcegraph.shaded.com.sourcegraph.semanticdb_javac.SemanticdbJavacOptions
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release.
2024.06.09 17:26:49 INFO  time: compiled root in 7.72s
2024.06.09 17:26:53 INFO  compiling root (1 scala source)
2024.06.09 17:26:53 WARN  Using indexes to guess the definition of ExamResult
2024.06.09 17:26:55 INFO  time: compiled root in 1.34s
6åé 09, 2024 5:26:55 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5093
2024.06.09 17:26:59 INFO  compiling root (1 scala source)
2024.06.09 17:27:01 INFO  time: compiled root in 1.3s
6åé 09, 2024 5:28:20 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5123
2024.06.09 17:28:22 INFO  compiling root-test (7 scala sources)
2024.06.09 17:28:22 INFO  time: compiled root-test in 0.85s
2024.06.09 17:28:22 INFO  compiling root-test (7 scala sources)
2024.06.09 17:28:24 INFO  time: compiled root-test in 0.88s
6åé 09, 2024 5:28:26 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5140
2024.06.09 17:28:26 INFO  compiling root-test (7 scala sources)
2024.06.09 17:28:27 INFO  time: compiled root-test in 1.05s
6åé 09, 2024 5:28:31 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5152
6åé 09, 2024 5:29:27 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5163
6åé 09, 2024 5:48:02 åﬂå„ org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
èÓïÒ: Unsupported notification method: $/setTrace
2024.06.10 03:58:59 INFO  Started: Metals version 1.3.1 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.0.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@28c554d]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@3326f833]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@28c554d]
2024.06.10 03:59:03 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.10 03:59:05 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\tables\ExamResultTable.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.10 03:59:05 INFO  Attempting to connect to the build server...
2024.06.10 03:59:18 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.10 03:59:18 INFO  Attempting to connect to the build server...
2024.06.10 03:59:18 INFO  Attempting to connect to the build server...
2024.06.10 03:59:18 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.10 03:59:18 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.10 03:59:18 INFO  time: Connected to build server in 13s
2024.06.10 03:59:18 INFO  Connected to Build server: Bloop v1.5.17
2024.06.10 03:59:19 INFO  time: Imported build in 0.38s
2024.06.10 04:01:10 INFO  time: indexed workspace in 1m51s
2024.06.10 04:18:25 INFO  compiling root-test (7 scala sources)
2024.06.10 04:18:29 INFO  time: compiled root-test in 4.7s
2024.06.15 14:21:52 INFO  Started: Metals version 1.3.1 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.0.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@9c3d7df]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@6707ae13]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@9c3d7df]
2024.06.15 14:21:56 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.15 14:21:58 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\tables\ExamResultTable.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.15 14:21:58 INFO  Attempting to connect to the build server...
2024.06.15 14:22:08 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.15 14:22:08 INFO  Attempting to connect to the build server...
2024.06.15 14:22:08 INFO  Attempting to connect to the build server...
2024.06.15 14:22:08 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.15 14:22:09 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.15 14:22:08 INFO  time: Connected to build server in 10s
2024.06.15 14:22:08 INFO  Connected to Build server: Bloop v1.5.17
2024.06.15 14:22:09 INFO  time: Imported build in 0.49s
2024.06.15 14:24:06 INFO  time: indexed workspace in 1m56s
2024.06.15 15:03:13 INFO  compiling root-test (7 scala sources)
2024.06.15 15:03:17 INFO  time: compiled root-test in 4.14s
2024.06.15 16:21:35 INFO  compiling root (1 scala source)
2024.06.15 16:21:37 INFO  time: compiled root in 1.27s
6åé 15, 2024 4:22:38 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 439
2024.06.15 16:22:52 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
scala.meta.tokenizers.TokenizeException: <input>:11: error: unclosed character literal
    def fromExamResult('')
                       ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchSingleQuote$1(LegacyScanner.scala:414)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:419)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.15 16:23:12 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
scala.meta.tokenizers.TokenizeException: <input>:13: error: unclosed quoted identifier
    def fromExamResult(examResult: ExamResult): ExamResultDto = `
                                                                ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:496)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:344)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.15 16:24:23 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
scala.meta.tokenizers.TokenizeException: <input>:22: error: unclosed quoted identifier
    def toExamResult(dto: ExamResultDto): ExamResult = `
                                                       ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:496)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:344)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.15 16:24:24 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
scala.meta.tokenizers.TokenizeException: <input>:22: error: unclosed quoted identifier
    def toExamResult(dto: ExamResultDto): ExamResult = {`}
                                                        ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:496)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:344)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.15 16:25:13 INFO  compiling root (1 scala source)
2024.06.15 16:25:15 INFO  time: compiled root in 1.98s
2024.06.15 16:25:42 INFO  compiling root (1 scala source)
2024.06.15 16:25:44 INFO  time: compiled root in 1.29s
2024.06.15 16:27:00 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.15 16:27:00 INFO  no build target found for /slick/sql/SqlProfile.scala. Using presentation compiler with project's scala-library version: 3.3.3
6åé 15, 2024 4:27:00 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1846
6åé 15, 2024 4:27:00 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1847
2024.06.15 16:27:00 INFO  compiling root (1 scala source)
2024.06.15 16:27:02 INFO  time: compiled root in 1.86s
2024.06.15 16:27:02 INFO  compiling root (1 scala source)
2024.06.15 16:27:02 INFO  time: compiled root in 0.42s
6åé 15, 2024 4:27:16 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1857
6åé 15, 2024 4:27:41 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1925
2024.06.15 16:29:21 INFO  compiling root (2 scala sources)
2024.06.15 16:29:23 INFO  time: compiled root in 1.63s
2024.06.15 16:33:13 INFO  compiling root (1 scala source)
2024.06.15 16:33:14 INFO  time: compiled root in 1.28s
6åé 15, 2024 6:34:48 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2647
2024.06.15 18:59:46 INFO  compiling root (5 scala sources)
2024.06.15 18:59:51 INFO  time: compiled root in 5.03s
2024.06.15 18:59:53 INFO  compiling root (1 scala source)
2024.06.15 18:59:53 INFO  time: compiled root in 0.26s
2024.06.15 18:59:54 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 18:59:57 INFO  compiling root (5 scala sources)
2024.06.15 18:59:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 18:59:57 INFO  time: compiled root in 0.56s
2024.06.15 18:59:57 INFO  compiling root (5 scala sources)
2024.06.15 18:59:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 18:59:58 INFO  time: compiled root in 0.41s
2024.06.15 18:59:59 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:10 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:12 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:13 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:14 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:15 INFO  compiling root (5 scala sources)
2024.06.15 19:00:15 INFO  time: compiled root in 0.32s
2024.06.15 19:00:15 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:25 INFO  compiling root (1 scala source)
2024.06.15 19:00:25 INFO  time: compiled root in 0.24s
2024.06.15 19:00:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:39 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:39 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:40 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:41 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:41 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:42 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:00:45 INFO  compiling root (1 scala source)
2024.06.15 19:00:45 INFO  time: compiled root in 0.18s
2024.06.15 19:00:46 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
6åé 15, 2024 7:00:47 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2817
2024.06.15 19:00:51 INFO  compiling root (2 scala sources)
2024.06.15 19:00:51 INFO  time: compiled root in 0.21s
2024.06.15 19:01:07 INFO  compiling root (3 scala sources)
2024.06.15 19:01:07 INFO  time: compiled root in 0.24s
2024.06.15 19:01:09 INFO  compiling root (4 scala sources)
2024.06.15 19:01:09 INFO  no build target found for /scala/concurrent/Future.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.15 19:01:09 INFO  time: compiled root in 0.43s
2024.06.15 19:01:11 INFO  compiling root (5 scala sources)
2024.06.15 19:01:11 INFO  time: compiled root in 0.31s
6åé 15, 2024 7:01:19 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2872
2024.06.15 19:01:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
6åé 15, 2024 7:01:35 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2890
6åé 15, 2024 7:01:39 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2897
2024.06.15 19:01:39 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:01:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:01:49 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:01:51 INFO  compiling root (5 scala sources)
2024.06.15 19:01:51 INFO  time: compiled root in 0.28s
2024.06.15 19:01:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:01:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:01:58 INFO  compiling root (5 scala sources)
2024.06.15 19:01:58 INFO  time: compiled root in 0.29s
2024.06.15 19:01:59 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
6åé 15, 2024 7:02:11 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2953
6åé 15, 2024 7:02:12 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2960
6åé 15, 2024 7:02:16 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2970
2024.06.15 19:02:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:02:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:02:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:02:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:02:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:02:20 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
2024.06.15 19:02:20 INFO  compiling root (5 scala sources)
2024.06.15 19:02:22 INFO  time: compiled root in 1.47s
2024.06.15 19:02:55 INFO  compiling root (1 scala source)
2024.06.15 19:02:55 INFO  time: compiled root in 0.41s
2024.06.15 19:03:05 INFO  compiling root (1 scala source)
2024.06.15 19:03:05 INFO  time: compiled root in 0.34s
2024.06.15 19:03:20 INFO  compiling root (1 scala source)
2024.06.15 19:03:20 INFO  time: compiled root in 0.35s
2024.06.15 19:03:36 INFO  compiling root (1 scala source)
2024.06.15 19:03:36 INFO  time: compiled root in 0.36s
2024.06.15 19:05:40 INFO  compiling root (1 scala source)
2024.06.15 19:05:40 INFO  time: compiled root in 0.65s
2024.06.15 19:06:08 INFO  compiling root (1 scala source)
2024.06.15 19:06:08 INFO  time: compiled root in 0.69s
2024.06.15 19:06:44 INFO  compiling root (1 scala source)
2024.06.15 19:06:44 INFO  time: compiled root in 0.87s
6åé 15, 2024 7:06:55 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3585
2024.06.15 19:07:10 INFO  compiling root (1 scala source)
2024.06.15 19:07:10 INFO  time: compiled root in 0.65s
2024.06.15 19:08:03 INFO  compiling root (1 scala source)
2024.06.15 19:08:03 INFO  time: compiled root in 0.7s
2024.06.15 19:08:03 INFO  compiling root (4 scala sources)
2024.06.15 19:08:03 INFO  time: compiled root in 0.28s
2024.06.15 19:08:05 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
6åé 15, 2024 7:10:06 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3944
6åé 16, 2024 12:11:03 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4036
6åé 16, 2024 12:11:41 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4117
2024.06.16 00:12:03 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.16 16:19:47 INFO  Started: Metals version 1.3.1 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.0.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@28c554d]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@3326f833]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@28c554d]
2024.06.16 16:19:52 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.16 16:19:53 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.16 16:19:54 INFO  Attempting to connect to the build server...
2024.06.16 16:20:07 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.16 16:20:07 INFO  Attempting to connect to the build server...
2024.06.16 16:20:07 INFO  Attempting to connect to the build server...
2024.06.16 16:20:07 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.16 16:20:08 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.16 16:20:08 INFO  time: Connected to build server in 13s
2024.06.16 16:20:08 INFO  Connected to Build server: Bloop v1.5.17
2024.06.16 16:20:08 INFO  time: Imported build in 0.53s
2024.06.16 16:21:04 INFO  compiling root (4 scala sources)
2024.06.16 16:21:09 INFO  time: compiled root in 5.49s
2024.06.16 16:21:09 INFO  compiling root (4 scala sources)
2024.06.16 16:21:11 INFO  time: compiled root in 1.57s
2024.06.16 16:22:18 INFO  time: indexed workspace in 2m9s
2024.06.16 16:22:18 INFO  compiling root (4 scala sources)
2024.06.16 16:22:19 INFO  time: compiled root in 1.21s
2024.06.16 16:22:19 INFO  compiling root (4 scala sources)
2024.06.16 16:22:21 INFO  time: compiled root in 1.05s
2024.06.16 16:22:21 INFO  compiling root (4 scala sources)
2024.06.16 16:22:21 INFO  time: compiled root in 0.68s
6åé 16, 2024 4:29:48 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 38
6åé 16, 2024 4:29:56 åﬂå„ scala.meta.internal.mtags.SymbolIndexBucket addMtagsSourceFile
åxçê: Error indexing C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
java.nio.file.NoSuchFileException: C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:236)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3288)
	at scala.meta.internal.io.PlatformFileIO$.slurp(PlatformFileIO.scala:45)
	at scala.meta.internal.io.FileIO$.slurp(FileIO.scala:24)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionAbsolutePath.toInput(ScalametaCommonEnrichments.scala:410)
	at scala.meta.internal.mtags.Mtags.index(Mtags.scala:96)
	at scala.meta.internal.mtags.Mtags.allSymbols(Mtags.scala:21)
	at scala.meta.internal.mtags.SymbolIndexBucket.allSymbols(SymbolIndexBucket.scala:279)
	at scala.meta.internal.mtags.SymbolIndexBucket.addMtagsSourceFile(SymbolIndexBucket.scala:290)
	at scala.meta.internal.mtags.SymbolIndexBucket.$anonfun$query0$1(SymbolIndexBucket.scala:205)
	at scala.meta.internal.mtags.SymbolIndexBucket.$anonfun$query0$1$adapted(SymbolIndexBucket.scala:205)
	at scala.collection.immutable.Set$Set2.foreach(Set.scala:210)
	at scala.meta.internal.mtags.SymbolIndexBucket.query0(SymbolIndexBucket.scala:205)
	at scala.meta.internal.mtags.SymbolIndexBucket.query(SymbolIndexBucket.scala:178)
	at scala.meta.internal.mtags.OnDemandSymbolIndex.$anonfun$findSymbolDefinition$1(OnDemandSymbolIndex.scala:159)
	at scala.collection.immutable.List.flatMap(List.scala:294)
	at scala.meta.internal.mtags.OnDemandSymbolIndex.findSymbolDefinition(OnDemandSymbolIndex.scala:159)
	at scala.meta.internal.mtags.OnDemandSymbolIndex.definition(OnDemandSymbolIndex.scala:48)
	at scala.meta.internal.metals.Docstrings.indexSymbol(Docstrings.scala:129)
	at scala.meta.internal.metals.Docstrings.documentation(Docstrings.scala:49)
	at scala.meta.internal.metals.MetalsSymbolSearch.documentation(MetalsSymbolSearch.scala:51)
	at scala.meta.internal.pc.MetalsGlobal.symbolDocumentation(MetalsGlobal.scala:250)
	at scala.meta.internal.pc.Signatures$SignaturePrinter.<init>(Signatures.scala:295)
	at scala.meta.internal.pc.HoverProvider.toHover(HoverProvider.scala:274)
	at scala.meta.internal.pc.HoverProvider.hoverOffset(HoverProvider.scala:109)
	at scala.meta.internal.pc.HoverProvider.hover(HoverProvider.scala:27)
	at scala.meta.internal.pc.ScalaPresentationCompiler.$anonfun$hover$1(ScalaPresentationCompiler.scala:342)
	at scala.meta.internal.pc.CompilerAccess.withSharedCompiler(CompilerAccess.scala:156)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$withNonInterruptableCompiler$1(CompilerAccess.scala:142)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:245)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

6åé 16, 2024 4:29:56 åﬂå„ scala.meta.internal.mtags.SymbolIndexBucket addMtagsSourceFile
åxçê: Error indexing C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
java.nio.file.NoSuchFileException: C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:236)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3288)
	at scala.meta.internal.io.PlatformFileIO$.slurp(PlatformFileIO.scala:45)
	at scala.meta.internal.io.FileIO$.slurp(FileIO.scala:24)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionAbsolutePath.toInput(ScalametaCommonEnrichments.scala:410)
	at scala.meta.internal.mtags.Mtags.index(Mtags.scala:96)
	at scala.meta.internal.mtags.Mtags.allSymbols(Mtags.scala:21)
	at scala.meta.internal.mtags.SymbolIndexBucket.allSymbols(SymbolIndexBucket.scala:279)
	at scala.meta.internal.mtags.SymbolIndexBucket.addMtagsSourceFile(SymbolIndexBucket.scala:290)
	at scala.meta.internal.mtags.SymbolIndexBucket.addMtagsSourceFile(SymbolIndexBucket.scala:301)
	at scala.meta.internal.mtags.SymbolIndexBucket.$anonfun$query0$1(SymbolIndexBucket.scala:205)
	at scala.meta.internal.mtags.SymbolIndexBucket.$anonfun$query0$1$adapted(SymbolIndexBucket.scala:205)
	at scala.collection.immutable.Set$Set2.foreach(Set.scala:210)
	at scala.meta.internal.mtags.SymbolIndexBucket.query0(SymbolIndexBucket.scala:205)
	at scala.meta.internal.mtags.SymbolIndexBucket.query(SymbolIndexBucket.scala:178)
	at scala.meta.internal.mtags.OnDemandSymbolIndex.$anonfun$findSymbolDefinition$1(OnDemandSymbolIndex.scala:159)
	at scala.collection.immutable.List.flatMap(List.scala:294)
	at scala.meta.internal.mtags.OnDemandSymbolIndex.findSymbolDefinition(OnDemandSymbolIndex.scala:159)
	at scala.meta.internal.mtags.OnDemandSymbolIndex.definition(OnDemandSymbolIndex.scala:48)
	at scala.meta.internal.metals.Docstrings.indexSymbol(Docstrings.scala:129)
	at scala.meta.internal.metals.Docstrings.documentation(Docstrings.scala:49)
	at scala.meta.internal.metals.MetalsSymbolSearch.documentation(MetalsSymbolSearch.scala:51)
	at scala.meta.internal.pc.MetalsGlobal.symbolDocumentation(MetalsGlobal.scala:250)
	at scala.meta.internal.pc.Signatures$SignaturePrinter.<init>(Signatures.scala:295)
	at scala.meta.internal.pc.HoverProvider.toHover(HoverProvider.scala:274)
	at scala.meta.internal.pc.HoverProvider.hoverOffset(HoverProvider.scala:109)
	at scala.meta.internal.pc.HoverProvider.hover(HoverProvider.scala:27)
	at scala.meta.internal.pc.ScalaPresentationCompiler.$anonfun$hover$1(ScalaPresentationCompiler.scala:342)
	at scala.meta.internal.pc.CompilerAccess.withSharedCompiler(CompilerAccess.scala:156)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$withNonInterruptableCompiler$1(CompilerAccess.scala:142)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:245)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

6åé 16, 2024 4:29:56 åﬂå„ scala.meta.internal.mtags.SymbolIndexBucket addMtagsSourceFile
åxçê: Error indexing C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
java.nio.file.NoSuchFileException: C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:236)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3288)
	at scala.meta.internal.io.PlatformFileIO$.slurp(PlatformFileIO.scala:45)
	at scala.meta.internal.io.FileIO$.slurp(FileIO.scala:24)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionAbsolutePath.toInput(ScalametaCommonEnrichments.scala:410)
	at scala.meta.internal.mtags.Mtags.index(Mtags.scala:96)
	at scala.meta.internal.mtags.Mtags.allSymbols(Mtags.scala:21)
	at scala.meta.internal.mtags.SymbolIndexBucket.allSymbols(SymbolIndexBucket.scala:279)
	at scala.meta.internal.mtags.SymbolIndexBucket.addMtagsSourceFile(SymbolIndexBucket.scala:290)
	at scala.meta.internal.mtags.SymbolIndexBucket.$anonfun$query0$7(SymbolIndexBucket.scala:221)
	at scala.meta.internal.mtags.SymbolIndexBucket.$anonfun$query0$7$adapted(SymbolIndexBucket.scala:216)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.collection.IterableOps$WithFilter.foreach(Iterable.scala:905)
	at scala.meta.internal.mtags.SymbolIndexBucket.query0(SymbolIndexBucket.scala:216)
	at scala.meta.internal.mtags.SymbolIndexBucket.$anonfun$query0$8(SymbolIndexBucket.scala:228)
	at scala.collection.immutable.List.flatMap(List.scala:294)
	at scala.meta.internal.mtags.SymbolIndexBucket.query0(SymbolIndexBucket.scala:228)
	at scala.meta.internal.mtags.SymbolIndexBucket.query(SymbolIndexBucket.scala:178)
	at scala.meta.internal.mtags.OnDemandSymbolIndex.$anonfun$findSymbolDefinition$1(OnDemandSymbolIndex.scala:159)
	at scala.collection.immutable.List.flatMap(List.scala:294)
	at scala.meta.internal.mtags.OnDemandSymbolIndex.findSymbolDefinition(OnDemandSymbolIndex.scala:159)
	at scala.meta.internal.mtags.OnDemandSymbolIndex.definition(OnDemandSymbolIndex.scala:48)
	at scala.meta.internal.metals.Docstrings.indexSymbol(Docstrings.scala:129)
	at scala.meta.internal.metals.Docstrings.documentation(Docstrings.scala:49)
	at scala.meta.internal.metals.MetalsSymbolSearch.documentation(MetalsSymbolSearch.scala:51)
	at scala.meta.internal.pc.MetalsGlobal.symbolDocumentation(MetalsGlobal.scala:250)
	at scala.meta.internal.pc.Signatures$SignaturePrinter.<init>(Signatures.scala:295)
	at scala.meta.internal.pc.HoverProvider.toHover(HoverProvider.scala:274)
	at scala.meta.internal.pc.HoverProvider.hoverOffset(HoverProvider.scala:109)
	at scala.meta.internal.pc.HoverProvider.hover(HoverProvider.scala:27)
	at scala.meta.internal.pc.ScalaPresentationCompiler.$anonfun$hover$1(ScalaPresentationCompiler.scala:342)
	at scala.meta.internal.pc.CompilerAccess.withSharedCompiler(CompilerAccess.scala:156)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$withNonInterruptableCompiler$1(CompilerAccess.scala:142)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:245)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

6åé 16, 2024 4:29:56 åﬂå„ scala.meta.internal.mtags.SymbolIndexBucket addMtagsSourceFile
åxçê: Error indexing C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
java.nio.file.NoSuchFileException: C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\ExamResultDto.scala
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:236)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3288)
	at scala.meta.internal.io.PlatformFileIO$.slurp(PlatformFileIO.scala:45)
	at scala.meta.internal.io.FileIO$.slurp(FileIO.scala:24)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionAbsolutePath.toInput(ScalametaCommonEnrichments.scala:410)
	at scala.meta.internal.mtags.Mtags.index(Mtags.scala:96)
	at scala.meta.internal.mtags.Mtags.allSymbols(Mtags.scala:21)
	at scala.meta.internal.mtags.SymbolIndexBucket.allSymbols(SymbolIndexBucket.scala:279)
	at scala.meta.internal.mtags.SymbolIndexBucket.addMtagsSourceFile(SymbolIndexBucket.scala:290)
	at scala.meta.internal.mtags.SymbolIndexBucket.addMtagsSourceFile(SymbolIndexBucket.scala:301)
	at scala.meta.internal.mtags.SymbolIndexBucket.$anonfun$query0$7(SymbolIndexBucket.scala:221)
	at scala.meta.internal.mtags.SymbolIndexBucket.$anonfun$query0$7$adapted(SymbolIndexBucket.scala:216)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.collection.IterableOps$WithFilter.foreach(Iterable.scala:905)
	at scala.meta.internal.mtags.SymbolIndexBucket.query0(SymbolIndexBucket.scala:216)
	at scala.meta.internal.mtags.SymbolIndexBucket.$anonfun$query0$8(SymbolIndexBucket.scala:228)
	at scala.collection.immutable.List.flatMap(List.scala:294)
	at scala.meta.internal.mtags.SymbolIndexBucket.query0(SymbolIndexBucket.scala:228)
	at scala.meta.internal.mtags.SymbolIndexBucket.query(SymbolIndexBucket.scala:178)
	at scala.meta.internal.mtags.OnDemandSymbolIndex.$anonfun$findSymbolDefinition$1(OnDemandSymbolIndex.scala:159)
	at scala.collection.immutable.List.flatMap(List.scala:294)
	at scala.meta.internal.mtags.OnDemandSymbolIndex.findSymbolDefinition(OnDemandSymbolIndex.scala:159)
	at scala.meta.internal.mtags.OnDemandSymbolIndex.definition(OnDemandSymbolIndex.scala:48)
	at scala.meta.internal.metals.Docstrings.indexSymbol(Docstrings.scala:129)
	at scala.meta.internal.metals.Docstrings.documentation(Docstrings.scala:49)
	at scala.meta.internal.metals.MetalsSymbolSearch.documentation(MetalsSymbolSearch.scala:51)
	at scala.meta.internal.pc.MetalsGlobal.symbolDocumentation(MetalsGlobal.scala:250)
	at scala.meta.internal.pc.Signatures$SignaturePrinter.<init>(Signatures.scala:295)
	at scala.meta.internal.pc.HoverProvider.toHover(HoverProvider.scala:274)
	at scala.meta.internal.pc.HoverProvider.hoverOffset(HoverProvider.scala:109)
	at scala.meta.internal.pc.HoverProvider.hover(HoverProvider.scala:27)
	at scala.meta.internal.pc.ScalaPresentationCompiler.$anonfun$hover$1(ScalaPresentationCompiler.scala:342)
	at scala.meta.internal.pc.CompilerAccess.withSharedCompiler(CompilerAccess.scala:156)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$withNonInterruptableCompiler$1(CompilerAccess.scala:142)
	at scala.meta.internal.pc.CompilerAccess.$anonfun$onCompilerJobQueue$1(CompilerAccess.scala:245)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:152)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

2024.06.16 16:35:33 INFO  compiling root (5 scala sources)
2024.06.16 16:35:33 INFO  time: compiled root in 0.87s
2024.06.16 16:42:05 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\examResult\valueObject\ExamIdDto.scala
scala.meta.tokenizers.TokenizeException: <input>:5: error: unclosed quoted identifier
object ExamIdDto `
                 ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:496)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:344)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.16 16:42:15 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\examResult\valueObject\ExamIdDto.scala
scala.meta.tokenizers.TokenizeException: <input>:6: error: unclosed character literal
    def fromDomain'
                  ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchSingleQuote$1(LegacyScanner.scala:414)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:419)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.16 16:43:42 INFO  compiling root (5 scala sources)
2024.06.16 16:43:42 INFO  time: compiled root in 0.71s
2024.06.16 16:44:06 INFO  compiling root (6 scala sources)
2024.06.16 16:44:06 INFO  time: compiled root in 0.84s
2024.06.16 16:44:29 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\examResult\valueObject\SubjectIdDto.scala
scala.meta.tokenizers.TokenizeException: <input>:5: error: unclosed quoted identifier
object SubjectIdDto `
                    ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:496)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:344)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.16 16:44:29 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\examResult\valueObject\SubjectIdDto.scala
scala.meta.tokenizers.TokenizeException: <input>:5: error: unclosed quoted identifier
object SubjectIdDto `
                    ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:496)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:344)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.16 16:45:23 INFO  compiling root (6 scala sources)
2024.06.16 16:45:23 INFO  time: compiled root in 0.59s
2024.06.16 16:45:23 INFO  compiling root (6 scala sources)
2024.06.16 16:45:24 INFO  time: compiled root in 0.49s
2024.06.16 16:45:31 INFO  compiling root (6 scala sources)
2024.06.16 16:45:31 INFO  time: compiled root in 0.51s
2024.06.16 16:48:05 INFO  compiling root (6 scala sources)
2024.06.16 16:48:05 INFO  time: compiled root in 0.54s
2024.06.16 16:48:12 INFO  compiling root (6 scala sources)
2024.06.16 16:48:12 INFO  time: compiled root in 0.48s
2024.06.16 16:48:32 INFO  compiling root (7 scala sources)
2024.06.16 16:48:32 INFO  time: compiled root in 0.59s
6åé 16, 2024 4:49:11 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1997
2024.06.16 16:49:17 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\examResult\valueObject\ScoreDto.scala
scala.meta.tokenizers.TokenizeException: <input>:5: error: unclosed quoted identifier
object ScoreDto `{}
                ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:496)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:344)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.16 16:49:18 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\examResult\valueObject\ScoreDto.scala
scala.meta.tokenizers.TokenizeException: <input>:5: error: unclosed quoted identifier
object ScoreDto `
                ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:496)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:344)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.16 16:50:27 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\examResult\valueObject\ScoreDto.scala
scala.meta.tokenizers.TokenizeException: <input>:8: error: unclosed character literal
    def fromDomain(score: Score): ScoreDto = ScoreDto('')
                                                      ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchSingleQuote$1(LegacyScanner.scala:414)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:419)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.16 16:50:48 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\examResult\valueObject\ScoreDto.scala
scala.meta.tokenizers.TokenizeException: <input>:9: error: unclosed character literal
    def toDomain('')
                 ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchSingleQuote$1(LegacyScanner.scala:414)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:419)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.16 16:51:26 INFO  compiling root (7 scala sources)
2024.06.16 16:51:26 INFO  time: compiled root in 0.58s
2024.06.16 16:51:42 INFO  compiling root (8 scala sources)
2024.06.16 16:51:42 INFO  time: compiled root in 0.46s
2024.06.16 16:53:22 INFO  compiling root (8 scala sources)
2024.06.16 16:53:22 INFO  time: compiled root in 0.5s
2024.06.16 16:53:22 INFO  compiling root (8 scala sources)
2024.06.16 16:53:23 INFO  time: compiled root in 0.45s
2024.06.16 16:55:39 INFO  compiling root (8 scala sources)
2024.06.16 16:55:39 INFO  time: compiled root in 0.48s
6åé 16, 2024 4:56:13 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3757
6åé 16, 2024 4:56:46 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3773
6åé 16, 2024 4:57:17 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3849
6åé 16, 2024 4:59:29 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4325
2024.06.16 17:00:13 INFO  compiling root (8 scala sources)
2024.06.16 17:00:13 INFO  time: compiled root in 0.47s
6åé 16, 2024 5:00:33 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4412
6åé 16, 2024 5:00:36 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4420
2024.06.16 17:00:36 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.16 17:00:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.16 17:01:06 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.16 17:01:49 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
6åé 16, 2024 5:04:27 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4764
6åé 16, 2024 5:05:18 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5036
6åé 16, 2024 5:05:57 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5149
6åé 16, 2024 5:07:54 åﬂå„ scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
èÓïÒ: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
6åé 16, 2024 5:07:55 åﬂå„ scala.meta.internal.pc.CompilerAccess handleError
èdëÂ: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\sakai\Developments\exam-manager\.metals\.reports\metals-full\2024-06-16\r_compiler-error_(root)_17-07-55-263.md
6åé 16, 2024 5:07:57 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5890
6åé 16, 2024 5:09:40 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 6527
6åé 16, 2024 5:09:43 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 6535
6åé 16, 2024 5:10:24 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 6572
6åé 16, 2024 5:10:27 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 6580
6åé 16, 2024 5:11:18 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 6942
2024.06.16 17:11:32 INFO  compiling root (8 scala sources)
2024.06.16 17:11:32 INFO  time: compiled root in 0.42s
2024.06.16 17:12:38 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.16 17:13:53 WARN  Using indexes to guess the definition of ExamIdDto
2024.06.16 17:13:53 WARN  Using indexes to guess the definition of studentId
2024.06.16 17:14:01 WARN  Using indexes to guess the definition of ExamResultDto
2024.06.16 17:14:09 WARN  Using indexes to guess the definition of ExamIdDto
2024.06.16 17:14:09 WARN  Using indexes to guess the definition of subejct
2024.06.16 17:14:16 WARN  Using indexes to guess the definition of ExamIdDto
2024.06.16 17:14:16 WARN  Using indexes to guess the definition of subejct
2024.06.16 17:14:23 WARN  Using indexes to guess the definition of SubjectDto
2024.06.16 17:14:23 WARN  Using indexes to guess the definition of ScoreDto
2024.06.16 17:14:23 WARN  Using indexes to guess the definition of studentId
2024.06.16 17:14:29 WARN  Using indexes to guess the definition of ScoreDto
2024.06.16 17:14:29 WARN  Using indexes to guess the definition of StudentId
2024.06.16 17:14:37 WARN  Using indexes to guess the definition of StudentId
6åé 16, 2024 5:29:16 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7272
6åé 16, 2024 5:29:22 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7280
6åé 16, 2024 5:29:24 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7289
2024.06.16 17:29:52 INFO  compiling root (8 scala sources)
2024.06.16 17:29:52 INFO  time: compiled root in 0.53s
2024.06.16 17:31:39 INFO  compiling root (8 scala sources)
2024.06.16 17:31:39 INFO  time: compiled root in 0.4s
6åé 16, 2024 5:31:44 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7554
2024.06.16 17:32:04 INFO  compiling root (8 scala sources)
2024.06.16 17:32:04 INFO  time: compiled root in 0.63s
2024.06.16 17:32:09 INFO  compiling root (8 scala sources)
2024.06.16 17:32:09 INFO  time: compiled root in 0.42s
2024.06.16 21:54:59 INFO  compiling root (9 scala sources)
2024.06.16 21:55:03 INFO  time: compiled root in 4.42s
6åé 16, 2024 9:56:06 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 8119
2024.06.16 21:57:59 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\entity\ExamResultRequestConverter.scala
scala.meta.tokenizers.TokenizeException: <input>:9: error: unclosed quoted identifier
    ): Either[String, ExamResult] = {`}
                                     ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:496)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:344)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.16 22:04:20 INFO  compiling root (10 scala sources)
2024.06.16 22:04:20 INFO  time: compiled root in 0.54s
2024.06.16 22:04:50 INFO  compiling root (11 scala sources)
2024.06.16 22:04:50 INFO  time: compiled root in 0.68s
2024.06.16 22:05:13 INFO  compiling root (12 scala sources)
2024.06.16 22:05:13 INFO  time: compiled root in 0.49s
2024.06.16 22:05:29 INFO  compiling root (13 scala sources)
2024.06.16 22:05:29 INFO  time: compiled root in 0.46s
6åé 16, 2024 10:06:11 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 8560
2024.06.16 22:08:19 INFO  compiling root (13 scala sources)
2024.06.16 22:08:19 INFO  time: compiled root in 0.45s
6åé 16, 2024 10:41:34 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 9783
6åé 16, 2024 10:41:51 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 9888
6åé 16, 2024 10:48:44 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 10035
6åé 16, 2024 10:49:38 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 10491
2024.06.16 22:49:55 INFO  compiling root (13 scala sources)
2024.06.16 22:49:55 INFO  time: compiled root in 0.44s
2024.06.16 22:50:00 ERROR scalafmt: C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\entity\ExamResultRequestConverter.scala:12: error: [dialect scala213] identifier expected but } found
        }
        ^
2024.06.16 22:50:01 INFO  compiling root (13 scala sources)
2024.06.16 22:50:01 INFO  time: compiled root in 0.22s
6åé 16, 2024 10:56:36 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 11139
2024.06.16 22:56:45 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\valueObject\ScoreRequestConverter.scala
scala.meta.tokenizers.TokenizeException: <input>:7: error: unclosed string interpolation
    if(value.nonEmpty) Left(Score cannot be empty")
                                                  ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:666)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:364)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:383)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.16 22:56:48 INFO  compiling root (13 scala sources)
2024.06.16 22:56:48 INFO  time: compiled root in 0.21s
2024.06.16 22:58:11 INFO  compiling root (13 scala sources)
2024.06.16 22:58:11 INFO  time: compiled root in 0.18s
2024.06.16 22:58:55 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\valueObject\ScoreRequestConverter.scala
scala.meta.tokenizers.TokenizeException: <input>:10: error: unclosed character literal
    Try'
       ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchSingleQuote$1(LegacyScanner.scala:414)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:419)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.16 22:58:57 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\valueObject\ScoreRequestConverter.scala
scala.meta.tokenizers.TokenizeException: <input>:10: error: unclosed character literal
    Try'
       ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchSingleQuote$1(LegacyScanner.scala:414)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:419)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.16 22:58:59 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\valueObject\ScoreRequestConverter.scala
scala.meta.tokenizers.TokenizeException: <input>:10: error: unclosed character literal
    Try('')
        ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchSingleQuote$1(LegacyScanner.scala:414)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:419)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 16, 2024 10:59:08 åﬂå„ scala.meta.internal.pc.CompilerAccess handleError
èdëÂ: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\sakai\Developments\exam-manager\.metals\.reports\metals-full\2024-06-16\r_compiler-error_(root)_22-59-08-732.md
2024.06.16 23:01:03 INFO  compiling root (13 scala sources)
2024.06.16 23:01:03 INFO  time: compiled root in 0.19s
2024.06.16 23:01:27 INFO  compiling root (13 scala sources)
2024.06.16 23:01:27 INFO  time: compiled root in 0.16s
6åé 16, 2024 11:04:22 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 12262
6åé 16, 2024 11:04:25 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 12270
2024.06.16 23:04:32 INFO  compiling root (13 scala sources)
2024.06.16 23:04:32 INFO  time: compiled root in 0.17s
2024.06.16 23:12:22 INFO  compiling root (13 scala sources)
2024.06.16 23:12:22 INFO  time: compiled root in 0.17s
2024.06.16 23:15:37 INFO  compiling root (13 scala sources)
2024.06.16 23:15:37 INFO  time: compiled root in 0.19s
2024.06.16 23:17:18 INFO  compiling root (13 scala sources)
2024.06.16 23:17:18 INFO  time: compiled root in 0.17s
2024.06.16 23:19:20 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.16 23:19:20 INFO  no build target found for /scala/util/Either.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.16 23:19:21 WARN  Using indexes to guess the definition of ExamId
2024.06.16 23:19:21 WARN  Using indexes to guess the definition of Right
2024.06.16 23:19:24 WARN  Using indexes to guess the definition of Left
2024.06.16 23:19:24 WARN  Using indexes to guess the definition of Right
6åé 16, 2024 11:19:24 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 12678
2024.06.16 23:19:24 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/String.java

Uri: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/String.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:741)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:738)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:724)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:296)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:749)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

6åé 16, 2024 11:19:24 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
åxçê: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/String.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2018, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\n\npackage java.lang;\n\nimport java.io.ObjectStreamField;\nimport java.io.UnsupportedEncodingException;\nimport java.lang.annotation.Native;\nimport java.nio.charset.Charset;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.Formatter;\nimport java.util.Locale;\nimport java.util.Objects;\nimport java.util.Spliterator;\nimport java.util.StringJoiner;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.util.regex.PatternSyntaxException;\nimport java.util.stream.IntStream;\nimport java.util.stream.Stream;\nimport java.util.stream.StreamSupport;\nimport jdk.internal.HotSpotIntrinsicCandidate;\nimport jdk.internal.vm.annotation.Stable;\n\n/**\n * The {@code String} class represents character strings. All\n * string literals in Java programs, such as {@code \"abc\"}, are\n * implemented as instances of this class.\n * \u003cp\u003e\n * Strings are constant; their values cannot be changed after they\n * are created. String buffers support mutable strings.\n * Because String objects are immutable they can be shared. For example:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     String str \u003d \"abc\";\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003cp\u003e\n * is equivalent to:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     char data[] \u003d {\u0027a\u0027, \u0027b\u0027, \u0027c\u0027};\n *     String str \u003d new String(data);\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003cp\u003e\n * Here are some more examples of how strings can be used:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     System.out.println(\"abc\");\n *     String cde \u003d \"cde\";\n *     System.out.println(\"abc\" + cde);\n *     String c \u003d \"abc\".substring(2,3);\n *     String d \u003d cde.substring(1, 2);\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The class {@code String} includes methods for examining\n * individual characters of the sequence, for comparing strings, for\n * searching strings, for extracting substrings, and for creating a\n * copy of a string with all characters translated to uppercase or to\n * lowercase. Case mapping is based on the Unicode Standard version\n * specified by the {@link java.lang.Character Character} class.\n * \u003cp\u003e\n * The Java language provides special support for the string\n * concatenation operator (\u0026nbsp;+\u0026nbsp;), and for conversion of\n * other objects to strings. For additional information on string\n * concatenation and conversion, see \u003ci\u003eThe Java\u0026trade; Language Specification\u003c/i\u003e.\n *\n * \u003cp\u003e Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * \u003cp\u003eA {@code String} represents a string in the UTF-16 format\n * in which \u003cem\u003esupplementary characters\u003c/em\u003e are represented by \u003cem\u003esurrogate\n * pairs\u003c/em\u003e (see the section \u003ca href\u003d\"Character.html#unicode\"\u003eUnicode\n * Character Representations\u003c/a\u003e in the {@code Character} class for\n * more information).\n * Index values refer to {@code char} code units, so a supplementary\n * character uses two positions in a {@code String}.\n * \u003cp\u003eThe {@code String} class provides methods for dealing with\n * Unicode code points (i.e., characters), in addition to those for\n * dealing with Unicode code units (i.e., {@code char} values).\n *\n * \u003cp\u003eUnless otherwise noted, methods for comparing Strings do not take locale\n * into account.  The {@link java.text.Collator} class provides methods for\n * finer-grain, locale-sensitive String comparison.\n *\n * @implNote The implementation of the string concatenation operator is left to\n * the discretion of a Java compiler, as long as the compiler ultimately conforms\n * to \u003ci\u003eThe Java\u0026trade; Language Specification\u003c/i\u003e. For example, the {@code javac} compiler\n * may implement the operator with {@code StringBuffer}, {@code StringBuilder},\n * or {@code java.lang.invoke.StringConcatFactory} depending on the JDK version. The\n * implementation of string conversion is typically through the method {@code toString},\n * defined by {@code Object} and inherited by all classes in Java.\n *\n * @author  Lee Boynton\n * @author  Arthur van Hoff\n * @author  Martin Buchholz\n * @author  Ulf Zibis\n * @see     java.lang.Object#toString()\n * @see     java.lang.StringBuffer\n * @see     java.lang.StringBuilder\n * @see     java.nio.charset.Charset\n * @since   1.0\n * @jls     15.18.1 String Concatenation Operator +\n */\n\npublic final class String\n    implements java.io.Serializable, Comparable\u003cString\u003e, CharSequence {\n\n    /**\n     * The value is used for character storage.\n     *\n     * @implNote This field is trusted by the VM, and is a subject to\n     * constant folding if String instance is constant. Overwriting this\n     * field after construction will cause problems.\n     *\n     * Additionally, it is marked with {@link Stable} to trust the contents\n     * of the array. No other facility in JDK provides this functionality (yet).\n     * {@link Stable} is safe here, because value is never null.\n     */\n    @Stable\n    private final byte[] value;\n\n    /**\n     * The identifier of the encoding used to encode the bytes in\n     * {@code value}. The supported values in this implementation are\n     *\n     * LATIN1\n     * UTF16\n     *\n     * @implNote This field is trusted by the VM, and is a subject to\n     * constant folding if String instance is constant. Overwriting this\n     * field after construction will cause problems.\n     */\n    private final byte coder;\n\n    /** Cache the hash code for the string */\n    private int hash; // Default to 0\n\n    /** use serialVersionUID from JDK 1.0.2 for interoperability */\n    private static final long serialVersionUID \u003d -6849794470754667710L;\n\n    /**\n     * If String compaction is disabled, the bytes in {@code value} are\n     * always encoded in UTF16.\n     *\n     * For methods with several possible implementation paths, when String\n     * compaction is disabled, only one code path is taken.\n     *\n     * The instance field value is generally opaque to optimizing JIT\n     * compilers. Therefore, in performance-sensitive place, an explicit\n     * check of the static boolean {@code COMPACT_STRINGS} is done first\n     * before checking the {@code coder} field since the static boolean\n     * {@code COMPACT_STRINGS} would be constant folded away by an\n     * optimizing JIT compiler. The idioms for these cases are as follows.\n     *\n     * For code such as:\n     *\n     *    if (coder \u003d\u003d LATIN1) { ... }\n     *\n     * can be written more optimally as\n     *\n     *    if (coder() \u003d\u003d LATIN1) { ... }\n     *\n     * or:\n     *\n     *    if (COMPACT_STRINGS \u0026\u0026 coder \u003d\u003d LATIN1) { ... }\n     *\n     * An optimizing JIT compiler can fold the above conditional as:\n     *\n     *    COMPACT_STRINGS \u003d\u003d true  \u003d\u003e if (coder \u003d\u003d LATIN1) { ... }\n     *    COMPACT_STRINGS \u003d\u003d false \u003d\u003e if (false)           { ... }\n     *\n     * @implNote\n     * The actual value for this field is injected by JVM. The static\n     * initialization block is used to set the value here to communicate\n     * that this static final field is not statically foldable, and to\n     * avoid any possible circular dependency during vm initialization.\n     */\n    static final boolean COMPACT_STRINGS;\n\n    static {\n        COMPACT_STRINGS \u003d true;\n    }\n\n    /**\n     * Class String is special cased within the Serialization Stream Protocol.\n     *\n     * A String instance is written into an ObjectOutputStream according to\n     * \u003ca href\u003d\"{@docRoot}/../specs/serialization/protocol.html#stream-elements\"\u003e\n     * Object Serialization Specification, Section 6.2, \"Stream Elements\"\u003c/a\u003e\n     */\n    private static final ObjectStreamField[] serialPersistentFields \u003d\n        new ObjectStreamField[0];\n\n    /**\n     * Initializes a newly created {@code String} object so that it represents\n     * an empty character sequence.  Note that use of this constructor is\n     * unnecessary since Strings are immutable.\n     */\n    public String() {\n        this.value \u003d \"\".value;\n        this.coder \u003d \"\".coder;\n    }\n\n    /**\n     * Initializes a newly created {@code String} object so that it represents\n     * the same sequence of characters as the argument; in other words, the\n     * newly created string is a copy of the argument string. Unless an\n     * explicit copy of {@code original} is needed, use of this constructor is\n     * unnecessary since Strings are immutable.\n     *\n     * @param  original\n     *         A {@code String}\n     */\n    @HotSpotIntrinsicCandidate\n    public String(String original) {\n        this.value \u003d original.value;\n        this.coder \u003d original.coder;\n        this.hash \u003d original.hash;\n    }\n\n    /**\n     * Allocates a new {@code String} so that it represents the sequence of\n     * characters currently contained in the character array argument. The\n     * contents of the character array are copied; subsequent modification of\n     * the character array does not affect the newly created string.\n     *\n     * @param  value\n     *         The initial value of the string\n     */\n    public String(char value[]) {\n        this(value, 0, value.length, null);\n    }\n\n    /**\n     * Allocates a new {@code String} that contains characters from a subarray\n     * of the character array argument. The {@code offset} argument is the\n     * index of the first character of the subarray and the {@code count}\n     * argument specifies the length of the subarray. The contents of the\n     * subarray are copied; subsequent modification of the character array does\n     * not affect the newly created string.\n     *\n     * @param  value\n     *         Array that is the source of characters\n     *\n     * @param  offset\n     *         The initial offset\n     *\n     * @param  count\n     *         The length\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If {@code offset} is negative, {@code count} is negative, or\n     *          {@code offset} is greater than {@code value.length - count}\n     */\n    public String(char value[], int offset, int count) {\n        this(value, offset, count, rangeCheck(value, offset, count));\n    }\n\n    private static Void rangeCheck(char[] value, int offset, int count) {\n        checkBoundsOffCount(offset, count, value.length);\n        return null;\n    }\n\n    /**\n     * Allocates a new {@code String} that contains characters from a subarray\n     * of the \u003ca href\u003d\"Character.html#unicode\"\u003eUnicode code point\u003c/a\u003e array\n     * argument.  The {@code offset} argument is the index of the first code\n     * point of the subarray and the {@code count} argument specifies the\n     * length of the subarray.  The contents of the subarray are converted to\n     * {@code char}s; subsequent modification of the {@code int} array does not\n     * affect the newly created string.\n     *\n     * @param  codePoints\n     *         Array that is the source of Unicode code points\n     *\n     * @param  offset\n     *         The initial offset\n     *\n     * @param  count\n     *         The length\n     *\n     * @throws  IllegalArgumentException\n     *          If any invalid Unicode code point is found in {@code\n     *          codePoints}\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If {@code offset} is negative, {@code count} is negative, or\n     *          {@code offset} is greater than {@code codePoints.length - count}\n     *\n     * @since  1.5\n     */\n    public String(int[] codePoints, int offset, int count) {\n        checkBoundsOffCount(offset, count, codePoints.length);\n        if (count \u003d\u003d 0) {\n            this.value \u003d \"\".value;\n            this.coder \u003d \"\".coder;\n            return;\n        }\n        if (COMPACT_STRINGS) {\n            byte[] val \u003d StringLatin1.toBytes(codePoints, offset, count);\n            if (val !\u003d null) {\n                this.coder \u003d LATIN1;\n                this.value \u003d val;\n                return;\n            }\n        }\n        this.coder \u003d UTF16;\n        this.value \u003d StringUTF16.toBytes(codePoints, offset, count);\n    }\n\n    /**\n     * Allocates a new {@code String} constructed from a subarray of an array\n     * of 8-bit integer values.\n     *\n     * \u003cp\u003e The {@code offset} argument is the index of the first byte of the\n     * subarray, and the {@code count} argument specifies the length of the\n     * subarray.\n     *\n     * \u003cp\u003e Each {@code byte} in the subarray is converted to a {@code char} as\n     * specified in the {@link #String(byte[],int) String(byte[],int)} constructor.\n     *\n     * @deprecated This method does not properly convert bytes into characters.\n     * As of JDK\u0026nbsp;1.1, the preferred way to do this is via the\n     * {@code String} constructors that take a {@link\n     * java.nio.charset.Charset}, charset name, or that use the platform\u0027s\n     * default charset.\n     *\n     * @param  ascii\n     *         The bytes to be converted to characters\n     *\n     * @param  hibyte\n     *         The top 8 bits of each 16-bit Unicode code unit\n     *\n     * @param  offset\n     *         The initial offset\n     * @param  count\n     *         The length\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If {@code offset} is negative, {@code count} is negative, or\n     *          {@code offset} is greater than {@code ascii.length - count}\n     *\n     * @see  #String(byte[], int)\n     * @see  #String(byte[], int, int, java.lang.String)\n     * @see  #String(byte[], int, int, java.nio.charset.Charset)\n     * @see  #String(byte[], int, int)\n     * @see  #String(byte[], java.lang.String)\n     * @see  #String(byte[], java.nio.charset.Charset)\n     * @see  #String(byte[])\n     */\n    @Deprecated(since\u003d\"1.1\")\n    public String(byte ascii[], int hibyte, int offset, int count) {\n        checkBoundsOffCount(offset, count, ascii.length);\n        if (count \u003d\u003d 0) {\n            this.value \u003d \"\".value;\n            this.coder \u003d \"\".coder;\n            return;\n        }\n        if (COMPACT_STRINGS \u0026\u0026 (byte)hibyte \u003d\u003d 0) {\n            this.value \u003d Arrays.copyOfRange(ascii, offset, offset + count);\n            this.coder \u003d LATIN1;\n        } else {\n            hibyte \u003c\u003c\u003d 8;\n            byte[] val \u003d StringUTF16.newBytesFor(count);\n            for (int i \u003d 0; i \u003c count; i++) {\n                StringUTF16.putChar(val, i, hibyte | (ascii[offset++] \u0026 0xff));\n            }\n            this.value \u003d val;\n            this.coder \u003d UTF16;\n        }\n    }\n\n    /**\n     * Allocates a new {@code String} containing characters constructed from\n     * an array of 8-bit integer values. Each character \u003ci\u003ec\u003c/i\u003e in the\n     * resulting string is constructed from the corresponding component\n     * \u003ci\u003eb\u003c/i\u003e in the byte array such that:\n     *\n     * \u003cblockquote\u003e\u003cpre\u003e\n     *     \u003cb\u003e\u003ci\u003ec\u003c/i\u003e\u003c/b\u003e \u003d\u003d (char)(((hibyte \u0026amp; 0xff) \u0026lt;\u0026lt; 8)\n     *                         | (\u003cb\u003e\u003ci\u003eb\u003c/i\u003e\u003c/b\u003e \u0026amp; 0xff))\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @deprecated  This method does not properly convert bytes into\n     * characters.  As of JDK\u0026nbsp;1.1, the preferred way to do this is via the\n     * {@code String} constructors that take a {@link\n     * java.nio.charset.Charset}, charset name, or that use the platform\u0027s\n     * default charset.\n     *\n     * @param  ascii\n     *         The bytes to be converted to characters\n     *\n     * @param  hibyte\n     *         The top 8 bits of each 16-bit Unicode code unit\n     *\n     * @see  #String(byte[], int, int, java.lang.String)\n     * @see  #String(byte[], int, int, java.nio.charset.Charset)\n     * @see  #String(byte[], int, int)\n     * @see  #String(byte[], java.lang.String)\n     * @see  #String(byte[], java.nio.charset.Charset)\n     * @see  #String(byte[])\n     */\n    @Deprecated(since\u003d\"1.1\")\n    public String(byte ascii[], int hibyte) {\n        this(ascii, hibyte, 0, ascii.length);\n    }\n\n    /**\n     * Constructs a new {@code String} by decoding the specified subarray of\n     * bytes using the specified charset.  The length of the new {@code String}\n     * is a function of the charset, and hence may not be equal to the length\n     * of the subarray.\n     *\n     * \u003cp\u003e The behavior of this constructor when the given bytes are not valid\n     * in the given charset is unspecified.  The {@link\n     * java.nio.charset.CharsetDecoder} class should be used when more control\n     * over the decoding process is required.\n     *\n     * @param  bytes\n     *         The bytes to be decoded into characters\n     *\n     * @param  offset\n     *         The index of the first byte to decode\n     *\n     * @param  length\n     *         The number of bytes to decode\n\n     * @param  charsetName\n     *         The name of a supported {@linkplain java.nio.charset.Charset\n     *         charset}\n     *\n     * @throws  UnsupportedEncodingException\n     *          If the named charset is not supported\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If {@code offset} is negative, {@code length} is negative, or\n     *          {@code offset} is greater than {@code bytes.length - length}\n     *\n     * @since  1.1\n     */\n    public String(byte bytes[], int offset, int length, String charsetName)\n            throws UnsupportedEncodingException {\n        if (charsetName \u003d\u003d null)\n            throw new NullPointerException(\"charsetName\");\n        checkBoundsOffCount(offset, length, bytes.length);\n        StringCoding.Result ret \u003d\n            StringCoding.decode(charsetName, bytes, offset, length);\n        this.value \u003d ret.value;\n        this.coder \u003d ret.coder;\n    }\n\n    /**\n     * Constructs a new {@code String} by decoding the specified subarray of\n     * bytes using the specified {@linkplain java.nio.charset.Charset charset}.\n     * The length of the new {@code String} is a function of the charset, and\n     * hence may not be equal to the length of the subarray.\n     *\n     * \u003cp\u003e This method always replaces malformed-input and unmappable-character\n     * sequences with this charset\u0027s default replacement string.  The {@link\n     * java.nio.charset.CharsetDecoder} class should be used when more control\n     * over the decoding process is required.\n     *\n     * @param  bytes\n     *         The bytes to be decoded into characters\n     *\n     * @param  offset\n     *         The index of the first byte to decode\n     *\n     * @param  length\n     *         The number of bytes to decode\n     *\n     * @param  charset\n     *         The {@linkplain java.nio.charset.Charset charset} to be used to\n     *         decode the {@code bytes}\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If {@code offset} is negative, {@code length} is negative, or\n     *          {@code offset} is greater than {@code bytes.length - length}\n     *\n     * @since  1.6\n     */\n    public String(byte bytes[], int offset, int length, Charset charset) {\n        if (charset \u003d\u003d null)\n            throw new NullPointerException(\"charset\");\n        checkBoundsOffCount(offset, length, bytes.length);\n        StringCoding.Result ret \u003d\n            StringCoding.decode(charset, bytes, offset, length);\n        this.value \u003d ret.value;\n        this.coder \u003d ret.coder;\n    }\n\n    /**\n     * Constructs a new {@code String} by decoding the specified array of bytes\n     * using the specified {@linkplain java.nio.charset.Charset charset}.  The\n     * length of the new {@code String} is a function of the charset, and hence\n     * may not be equal to the length of the byte array.\n     *\n     * \u003cp\u003e The behavior of this constructor when the given bytes are not valid\n     * in the given charset is unspecified.  The {@link\n     * java.nio.charset.CharsetDecoder} class should be used when more control\n     * over the decoding process is required.\n     *\n     * @param  bytes\n     *         The bytes to be decoded into characters\n     *\n     * @param  charsetName\n     *         The name of a supported {@linkplain java.nio.charset.Charset\n     *         charset}\n     *\n     * @throws  UnsupportedEncodingException\n     *          If the named charset is not supported\n     *\n     * @since  1.1\n     */\n    public String(byte bytes[], String charsetName)\n            throws UnsupportedEncodingException {\n        this(bytes, 0, bytes.length, charsetName);\n    }\n\n    /**\n     * Constructs a new {@code String} by decoding the specified array of\n     * bytes using the specified {@linkplain java.nio.charset.Charset charset}.\n     * The length of the new {@code String} is a function of the charset, and\n     * hence may not be equal to the length of the byte array.\n     *\n     * \u003cp\u003e This method always replaces malformed-input and unmappable-character\n     * sequences with this charset\u0027s default replacement string.  The {@link\n     * java.nio.charset.CharsetDecoder} class should be used when more control\n     * over the decoding process is required.\n     *\n     * @param  bytes\n     *         The bytes to be decoded into characters\n     *\n     * @param  charset\n     *         The {@linkplain java.nio.charset.Charset charset} to be used to\n     *         decode the {@code bytes}\n     *\n     * @since  1.6\n     */\n    public String(byte bytes[], Charset charset) {\n        this(bytes, 0, bytes.length, charset);\n    }\n\n    /**\n     * Constructs a new {@code String} by decoding the specified subarray of\n     * bytes using the platform\u0027s default charset.  The length of the new\n     * {@code String} is a function of the charset, and hence may not be equal\n     * to the length of the subarray.\n     *\n     * \u003cp\u003e The behavior of this constructor when the given bytes are not valid\n     * in the default charset is unspecified.  The {@link\n     * java.nio.charset.CharsetDecoder} class should be used when more control\n     * over the decoding process is required.\n     *\n     * @param  bytes\n     *         The bytes to be decoded into characters\n     *\n     * @param  offset\n     *         The index of the first byte to decode\n     *\n     * @param  length\n     *         The number of bytes to decode\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If {@code offset} is negative, {@code length} is negative, or\n     *          {@code offset} is greater than {@code bytes.length - length}\n     *\n     * @since  1.1\n     */\n    public String(byte bytes[], int offset, int length) {\n        checkBoundsOffCount(offset, length, bytes.length);\n        StringCoding.Result ret \u003d StringCoding.decode(bytes, offset, length);\n        this.value \u003d ret.value;\n        this.coder \u003d ret.coder;\n    }\n\n    /**\n     * Constructs a new {@code String} by decoding the specified array of bytes\n     * using the platform\u0027s default charset.  The length of the new {@code\n     * String} is a function of the charset, and hence may not be equal to the\n     * length of the byte array.\n     *\n     * \u003cp\u003e The behavior of this constructor when the given bytes are not valid\n     * in the default charset is unspecified.  The {@link\n     * java.nio.charset.CharsetDecoder} class should be used when more control\n     * over the decoding process is required.\n     *\n     * @param  bytes\n     *         The bytes to be decoded into characters\n     *\n     * @since  1.1\n     */\n    public String(byte[] bytes) {\n        this(bytes, 0, bytes.length);\n    }\n\n    /**\n     * Allocates a new string that contains the sequence of characters\n     * currently contained in the string buffer argument. The contents of the\n     * string buffer are copied; subsequent modification of the string buffer\n     * does not affect the newly created string.\n     *\n     * @param  buffer\n     *         A {@code StringBuffer}\n     */\n    public String(StringBuffer buffer) {\n        this(buffer.toString());\n    }\n\n    /**\n     * Allocates a new string that contains the sequence of characters\n     * currently contained in the string builder argument. The contents of the\n     * string builder are copied; subsequent modification of the string builder\n     * does not affect the newly created string.\n     *\n     * \u003cp\u003e This constructor is provided to ease migration to {@code\n     * StringBuilder}. Obtaining a string from a string builder via the {@code\n     * toString} method is likely to run faster and is generally preferred.\n     *\n     * @param   builder\n     *          A {@code StringBuilder}\n     *\n     * @since  1.5\n     */\n    public String(StringBuilder builder) {\n        this(builder, null);\n    }\n\n    /**\n     * Returns the length of this string.\n     * The length is equal to the number of \u003ca href\u003d\"Character.html#unicode\"\u003eUnicode\n     * code units\u003c/a\u003e in the string.\n     *\n     * @return  the length of the sequence of characters represented by this\n     *          object.\n     */\n    public int length() {\n        return value.length \u003e\u003e coder();\n    }\n\n    /**\n     * Returns {@code true} if, and only if, {@link #length()} is {@code 0}.\n     *\n     * @return {@code true} if {@link #length()} is {@code 0}, otherwise\n     * {@code false}\n     *\n     * @since 1.6\n     */\n    public boolean isEmpty() {\n        return value.length \u003d\u003d 0;\n    }\n\n    /**\n     * Returns the {@code char} value at the\n     * specified index. An index ranges from {@code 0} to\n     * {@code length() - 1}. The first {@code char} value of the sequence\n     * is at index {@code 0}, the next at index {@code 1},\n     * and so on, as for array indexing.\n     *\n     * \u003cp\u003eIf the {@code char} value specified by the index is a\n     * \u003ca href\u003d\"Character.html#unicode\"\u003esurrogate\u003c/a\u003e, the surrogate\n     * value is returned.\n     *\n     * @param      index   the index of the {@code char} value.\n     * @return     the {@code char} value at the specified index of this string.\n     *             The first {@code char} value is at index {@code 0}.\n     * @exception  IndexOutOfBoundsException  if the {@code index}\n     *             argument is negative or not less than the length of this\n     *             string.\n     */\n    public char charAt(int index) {\n        if (isLatin1()) {\n            return StringLatin1.charAt(value, index);\n        } else {\n            return StringUTF16.charAt(value, index);\n        }\n    }\n\n    /**\n     * Returns the character (Unicode code point) at the specified\n     * index. The index refers to {@code char} values\n     * (Unicode code units) and ranges from {@code 0} to\n     * {@link #length()}{@code  - 1}.\n     *\n     * \u003cp\u003e If the {@code char} value specified at the given index\n     * is in the high-surrogate range, the following index is less\n     * than the length of this {@code String}, and the\n     * {@code char} value at the following index is in the\n     * low-surrogate range, then the supplementary code point\n     * corresponding to this surrogate pair is returned. Otherwise,\n     * the {@code char} value at the given index is returned.\n     *\n     * @param      index the index to the {@code char} values\n     * @return     the code point value of the character at the\n     *             {@code index}\n     * @exception  IndexOutOfBoundsException  if the {@code index}\n     *             argument is negative or not less than the length of this\n     *             string.\n     * @since      1.5\n     */\n    public int codePointAt(int index) {\n        if (isLatin1()) {\n            checkIndex(index, value.length);\n            return value[index] \u0026 0xff;\n        }\n        int length \u003d value.length \u003e\u003e 1;\n        checkIndex(index, length);\n        return StringUTF16.codePointAt(value, index, length);\n    }\n\n    /**\n     * Returns the character (Unicode code point) before the specified\n     * index. The index refers to {@code char} values\n     * (Unicode code units) and ranges from {@code 1} to {@link\n     * CharSequence#length() length}.\n     *\n     * \u003cp\u003e If the {@code char} value at {@code (index - 1)}\n     * is in the low-surrogate range, {@code (index - 2)} is not\n     * negative, and the {@code char} value at {@code (index -\n     * 2)} is in the high-surrogate range, then the\n     * supplementary code point value of the surrogate pair is\n     * returned. If the {@code char} value at {@code index -\n     * 1} is an unpaired low-surrogate or a high-surrogate, the\n     * surrogate value is returned.\n     *\n     * @param     index the index following the code point that should be returned\n     * @return    the Unicode code point value before the given index.\n     * @exception IndexOutOfBoundsException if the {@code index}\n     *            argument is less than 1 or greater than the length\n     *            of this string.\n     * @since     1.5\n     */\n    public int codePointBefore(int index) {\n        int i \u003d index - 1;\n        if (i \u003c 0 || i \u003e\u003d length()) {\n            throw new StringIndexOutOfBoundsException(index);\n        }\n        if (isLatin1()) {\n            return (value[i] \u0026 0xff);\n        }\n        return StringUTF16.codePointBefore(value, index);\n    }\n\n    /**\n     * Returns the number of Unicode code points in the specified text\n     * range of this {@code String}. The text range begins at the\n     * specified {@code beginIndex} and extends to the\n     * {@code char} at index {@code endIndex - 1}. Thus the\n     * length (in {@code char}s) of the text range is\n     * {@code endIndex-beginIndex}. Unpaired surrogates within\n     * the text range count as one code point each.\n     *\n     * @param beginIndex the index to the first {@code char} of\n     * the text range.\n     * @param endIndex the index after the last {@code char} of\n     * the text range.\n     * @return the number of Unicode code points in the specified text\n     * range\n     * @exception IndexOutOfBoundsException if the\n     * {@code beginIndex} is negative, or {@code endIndex}\n     * is larger than the length of this {@code String}, or\n     * {@code beginIndex} is larger than {@code endIndex}.\n     * @since  1.5\n     */\n    public int codePointCount(int beginIndex, int endIndex) {\n        if (beginIndex \u003c 0 || beginIndex \u003e endIndex ||\n            endIndex \u003e length()) {\n            throw new IndexOutOfBoundsException();\n        }\n        if (isLatin1()) {\n            return endIndex - beginIndex;\n        }\n        return StringUTF16.codePointCount(value, beginIndex, endIndex);\n    }\n\n    /**\n     * Returns the index within this {@code String} that is\n     * offset from the given {@code index} by\n     * {@code codePointOffset} code points. Unpaired surrogates\n     * within the text range given by {@code index} and\n     * {@code codePointOffset} count as one code point each.\n     *\n     * @param index the index to be offset\n     * @param codePointOffset the offset in code points\n     * @return the index within this {@code String}\n     * @exception IndexOutOfBoundsException if {@code index}\n     *   is negative or larger then the length of this\n     *   {@code String}, or if {@code codePointOffset} is positive\n     *   and the substring starting with {@code index} has fewer\n     *   than {@code codePointOffset} code points,\n     *   or if {@code codePointOffset} is negative and the substring\n     *   before {@code index} has fewer than the absolute value\n     *   of {@code codePointOffset} code points.\n     * @since 1.5\n     */\n    public int offsetByCodePoints(int index, int codePointOffset) {\n        if (index \u003c 0 || index \u003e length()) {\n            throw new IndexOutOfBoundsException();\n        }\n        return Character.offsetByCodePoints(this, index, codePointOffset);\n    }\n\n    /**\n     * Copies characters from this string into the destination character\n     * array.\n     * \u003cp\u003e\n     * The first character to be copied is at index {@code srcBegin};\n     * the last character to be copied is at index {@code srcEnd-1}\n     * (thus the total number of characters to be copied is\n     * {@code srcEnd-srcBegin}). The characters are copied into the\n     * subarray of {@code dst} starting at index {@code dstBegin}\n     * and ending at index:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     *     dstBegin + (srcEnd-srcBegin) - 1\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @param      srcBegin   index of the first character in the string\n     *                        to copy.\n     * @param      srcEnd     index after the last character in the string\n     *                        to copy.\n     * @param      dst        the destination array.\n     * @param      dstBegin   the start offset in the destination array.\n     * @exception IndexOutOfBoundsException If any of the following\n     *            is true:\n     *            \u003cul\u003e\u003cli\u003e{@code srcBegin} is negative.\n     *            \u003cli\u003e{@code srcBegin} is greater than {@code srcEnd}\n     *            \u003cli\u003e{@code srcEnd} is greater than the length of this\n     *                string\n     *            \u003cli\u003e{@code dstBegin} is negative\n     *            \u003cli\u003e{@code dstBegin+(srcEnd-srcBegin)} is larger than\n     *                {@code dst.length}\u003c/ul\u003e\n     */\n    public void getChars(int srcBegin, int srcEnd, char dst[], int dstBegin) {\n        checkBoundsBeginEnd(srcBegin, srcEnd, length());\n        checkBoundsOffCount(dstBegin, srcEnd - srcBegin, dst.length);\n        if (isLatin1()) {\n            StringLatin1.getChars(value, srcBegin, srcEnd, dst, dstBegin);\n        } else {\n            StringUTF16.getChars(value, srcBegin, srcEnd, dst, dstBegin);\n        }\n    }\n\n    /**\n     * Copies characters from this string into the destination byte array. Each\n     * byte receives the 8 low-order bits of the corresponding character. The\n     * eight high-order bits of each character are not copied and do not\n     * participate in the transfer in any way.\n     *\n     * \u003cp\u003e The first character to be copied is at index {@code srcBegin}; the\n     * last character to be copied is at index {@code srcEnd-1}.  The total\n     * number of characters to be copied is {@code srcEnd-srcBegin}. The\n     * characters, converted to bytes, are copied into the subarray of {@code\n     * dst} starting at index {@code dstBegin} and ending at index:\n     *\n     * \u003cblockquote\u003e\u003cpre\u003e\n     *     dstBegin + (srcEnd-srcBegin) - 1\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @deprecated  This method does not properly convert characters into\n     * bytes.  As of JDK\u0026nbsp;1.1, the preferred way to do this is via the\n     * {@link #getBytes()} method, which uses the platform\u0027s default charset.\n     *\n     * @param  srcBegin\n     *         Index of the first character in the string to copy\n     *\n     * @param  srcEnd\n     *         Index after the last character in the string to copy\n     *\n     * @param  dst\n     *         The destination array\n     *\n     * @param  dstBegin\n     *         The start offset in the destination array\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If any of the following is true:\n     *          \u003cul\u003e\n     *            \u003cli\u003e {@code srcBegin} is negative\n     *            \u003cli\u003e {@code srcBegin} is greater than {@code srcEnd}\n     *            \u003cli\u003e {@code srcEnd} is greater than the length of this String\n     *            \u003cli\u003e {@code dstBegin} is negative\n     *            \u003cli\u003e {@code dstBegin+(srcEnd-srcBegin)} is larger than {@code\n     *                 dst.length}\n     *          \u003c/ul\u003e\n     */\n    @Deprecated(since\u003d\"1.1\")\n    public void getBytes(int srcBegin, int srcEnd, byte dst[], int dstBegin) {\n        checkBoundsBeginEnd(srcBegin, srcEnd, length());\n        Objects.requireNonNull(dst);\n        checkBoundsOffCount(dstBegin, srcEnd - srcBegin, dst.length);\n        if (isLatin1()) {\n            StringLatin1.getBytes(value, srcBegin, srcEnd, dst, dstBegin);\n        } else {\n            StringUTF16.getBytes(value, srcBegin, srcEnd, dst, dstBegin);\n        }\n    }\n\n    /**\n     * Encodes this {@code String} into a sequence of bytes using the named\n     * charset, storing the result into a new byte array.\n     *\n     * \u003cp\u003e The behavior of this method when this string cannot be encoded in\n     * the given charset is unspecified.  The {@link\n     * java.nio.charset.CharsetEncoder} class should be used when more control\n     * over the encoding process is required.\n     *\n     * @param  charsetName\n     *         The name of a supported {@linkplain java.nio.charset.Charset\n     *         charset}\n     *\n     * @return  The resultant byte array\n     *\n     * @throws  UnsupportedEncodingException\n     *          If the named charset is not supported\n     *\n     * @since  1.1\n     */\n    public byte[] getBytes(String charsetName)\n            throws UnsupportedEncodingException {\n        if (charsetName \u003d\u003d null) throw new NullPointerException();\n        return StringCoding.encode(charsetName, coder(), value);\n    }\n\n    /**\n     * Encodes this {@code String} into a sequence of bytes using the given\n     * {@linkplain java.nio.charset.Charset charset}, storing the result into a\n     * new byte array.\n     *\n     * \u003cp\u003e This method always replaces malformed-input and unmappable-character\n     * sequences with this charset\u0027s default replacement byte array.  The\n     * {@link java.nio.charset.CharsetEncoder} class should be used when more\n     * control over the encoding process is required.\n     *\n     * @param  charset\n     *         The {@linkplain java.nio.charset.Charset} to be used to encode\n     *         the {@code String}\n     *\n     * @return  The resultant byte array\n     *\n     * @since  1.6\n     */\n    public byte[] getBytes(Charset charset) {\n        if (charset \u003d\u003d null) throw new NullPointerException();\n        return StringCoding.encode(charset, coder(), value);\n     }\n\n    /**\n     * Encodes this {@code String} into a sequence of bytes using the\n     * platform\u0027s default charset, storing the result into a new byte array.\n     *\n     * \u003cp\u003e The behavior of this method when this string cannot be encoded in\n     * the default charset is unspecified.  The {@link\n     * java.nio.charset.CharsetEncoder} class should be used when more control\n     * over the encoding process is required.\n     *\n     * @return  The resultant byte array\n     *\n     * @since      1.1\n     */\n    public byte[] getBytes() {\n        return StringCoding.encode(coder(), value);\n    }\n\n    /**\n     * Compares this string to the specified object.  The result is {@code\n     * true} if and only if the argument is not {@code null} and is a {@code\n     * String} object that represents the same sequence of characters as this\n     * object.\n     *\n     * \u003cp\u003eFor finer-grained String comparison, refer to\n     * {@link java.text.Collator}.\n     *\n     * @param  anObject\n     *         The object to compare this {@code String} against\n     *\n     * @return  {@code true} if the given object represents a {@code String}\n     *          equivalent to this string, {@code false} otherwise\n     *\n     * @see  #compareTo(String)\n     * @see  #equalsIgnoreCase(String)\n     */\n    public boolean equals(Object anObject) {\n        if (this \u003d\u003d anObject) {\n            return true;\n        }\n        if (anObject instanceof String) {\n            String aString \u003d (String)anObject;\n            if (coder() \u003d\u003d aString.coder()) {\n                return isLatin1() ? StringLatin1.equals(value, aString.value)\n                                  : StringUTF16.equals(value, aString.value);\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Compares this string to the specified {@code StringBuffer}.  The result\n     * is {@code true} if and only if this {@code String} represents the same\n     * sequence of characters as the specified {@code StringBuffer}. This method\n     * synchronizes on the {@code StringBuffer}.\n     *\n     * \u003cp\u003eFor finer-grained String comparison, refer to\n     * {@link java.text.Collator}.\n     *\n     * @param  sb\n     *         The {@code StringBuffer} to compare this {@code String} against\n     *\n     * @return  {@code true} if this {@code String} represents the same\n     *          sequence of characters as the specified {@code StringBuffer},\n     *          {@code false} otherwise\n     *\n     * @since  1.4\n     */\n    public boolean contentEquals(StringBuffer sb) {\n        return contentEquals((CharSequence)sb);\n    }\n\n    private boolean nonSyncContentEquals(AbstractStringBuilder sb) {\n        int len \u003d length();\n        if (len !\u003d sb.length()) {\n            return false;\n        }\n        byte v1[] \u003d value;\n        byte v2[] \u003d sb.getValue();\n        if (coder() \u003d\u003d sb.getCoder()) {\n            int n \u003d v1.length;\n            for (int i \u003d 0; i \u003c n; i++) {\n                if (v1[i] !\u003d v2[i]) {\n                    return false;\n                }\n            }\n        } else {\n            if (!isLatin1()) {  // utf16 str and latin1 abs can never be \"equal\"\n                return false;\n            }\n            return StringUTF16.contentEquals(v1, v2, len);\n        }\n        return true;\n    }\n\n    /**\n     * Compares this string to the specified {@code CharSequence}.  The\n     * result is {@code true} if and only if this {@code String} represents the\n     * same sequence of char values as the specified sequence. Note that if the\n     * {@code CharSequence} is a {@code StringBuffer} then the method\n     * synchronizes on it.\n     *\n     * \u003cp\u003eFor finer-grained String comparison, refer to\n     * {@link java.text.Collator}.\n     *\n     * @param  cs\n     *         The sequence to compare this {@code String} against\n     *\n     * @return  {@code true} if this {@code String} represents the same\n     *          sequence of char values as the specified sequence, {@code\n     *          false} otherwise\n     *\n     * @since  1.5\n     */\n    public boolean contentEquals(CharSequence cs) {\n        // Argument is a StringBuffer, StringBuilder\n        if (cs instanceof AbstractStringBuilder) {\n            if (cs instanceof StringBuffer) {\n                synchronized(cs) {\n                   return nonSyncContentEquals((AbstractStringBuilder)cs);\n                }\n            } else {\n                return nonSyncContentEquals((AbstractStringBuilder)cs);\n            }\n        }\n        // Argument is a String\n        if (cs instanceof String) {\n            return equals(cs);\n        }\n        // Argument is a generic CharSequence\n        int n \u003d cs.length();\n        if (n !\u003d length()) {\n            return false;\n        }\n        byte[] val \u003d this.value;\n        if (isLatin1()) {\n            for (int i \u003d 0; i \u003c n; i++) {\n                if ((val[i] \u0026 0xff) !\u003d cs.charAt(i)) {\n                    return false;\n                }\n            }\n        } else {\n            if (!StringUTF16.contentEquals(val, cs, n)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Compares this {@code String} to another {@code String}, ignoring case\n     * considerations.  Two strings are considered equal ignoring case if they\n     * are of the same length and corresponding characters in the two strings\n     * are equal ignoring case.\n     *\n     * \u003cp\u003e Two characters {@code c1} and {@code c2} are considered the same\n     * ignoring case if at least one of the following is true:\n     * \u003cul\u003e\n     *   \u003cli\u003e The two characters are the same (as compared by the\n     *        {@code \u003d\u003d} operator)\n     *   \u003cli\u003e Calling {@code Character.toLowerCase(Character.toUpperCase(char))}\n     *        on each character produces the same result\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003eNote that this method does \u003cem\u003enot\u003c/em\u003e take locale into account, and\n     * will result in unsatisfactory results for certain locales.  The\n     * {@link java.text.Collator} class provides locale-sensitive comparison.\n     *\n     * @param  anotherString\n     *         The {@code String} to compare this {@code String} against\n     *\n     * @return  {@code true} if the argument is not {@code null} and it\n     *          represents an equivalent {@code String} ignoring case; {@code\n     *          false} otherwise\n     *\n     * @see  #equals(Object)\n     */\n    public boolean equalsIgnoreCase(String anotherString) {\n        return (this \u003d\u003d anotherString) ? true\n                : (anotherString !\u003d null)\n                \u0026\u0026 (anotherString.length() \u003d\u003d length())\n                \u0026\u0026 regionMatches(true, 0, anotherString, 0, length());\n    }\n\n    /**\n     * Compares two strings lexicographically.\n     * The comparison is based on the Unicode value of each character in\n     * the strings. The character sequence represented by this\n     * {@code String} object is compared lexicographically to the\n     * character sequence represented by the argument string. The result is\n     * a negative integer if this {@code String} object\n     * lexicographically precedes the argument string. The result is a\n     * positive integer if this {@code String} object lexicographically\n     * follows the argument string. The result is zero if the strings\n     * are equal; {@code compareTo} returns {@code 0} exactly when\n     * the {@link #equals(Object)} method would return {@code true}.\n     * \u003cp\u003e\n     * This is the definition of lexicographic ordering. If two strings are\n     * different, then either they have different characters at some index\n     * that is a valid index for both strings, or their lengths are different,\n     * or both. If they have different characters at one or more index\n     * positions, let \u003ci\u003ek\u003c/i\u003e be the smallest such index; then the string\n     * whose character at position \u003ci\u003ek\u003c/i\u003e has the smaller value, as\n     * determined by using the {@code \u003c} operator, lexicographically precedes the\n     * other string. In this case, {@code compareTo} returns the\n     * difference of the two character values at position {@code k} in\n     * the two string -- that is, the value:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * this.charAt(k)-anotherString.charAt(k)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * If there is no index position at which they differ, then the shorter\n     * string lexicographically precedes the longer string. In this case,\n     * {@code compareTo} returns the difference of the lengths of the\n     * strings -- that is, the value:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * this.length()-anotherString.length()\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * \u003cp\u003eFor finer-grained String comparison, refer to\n     * {@link java.text.Collator}.\n     *\n     * @param   anotherString   the {@code String} to be compared.\n     * @return  the value {@code 0} if the argument string is equal to\n     *          this string; a value less than {@code 0} if this string\n     *          is lexicographically less than the string argument; and a\n     *          value greater than {@code 0} if this string is\n     *          lexicographically greater than the string argument.\n     */\n    public int compareTo(String anotherString) {\n        byte v1[] \u003d value;\n        byte v2[] \u003d anotherString.value;\n        if (coder() \u003d\u003d anotherString.coder()) {\n            return isLatin1() ? StringLatin1.compareTo(v1, v2)\n                              : StringUTF16.compareTo(v1, v2);\n        }\n        return isLatin1() ? StringLatin1.compareToUTF16(v1, v2)\n                          : StringUTF16.compareToLatin1(v1, v2);\n     }\n\n    /**\n     * A Comparator that orders {@code String} objects as by\n     * {@code compareToIgnoreCase}. This comparator is serializable.\n     * \u003cp\u003e\n     * Note that this Comparator does \u003cem\u003enot\u003c/em\u003e take locale into account,\n     * and will result in an unsatisfactory ordering for certain locales.\n     * The {@link java.text.Collator} class provides locale-sensitive comparison.\n     *\n     * @see     java.text.Collator\n     * @since   1.2\n     */\n    public static final Comparator\u003cString\u003e CASE_INSENSITIVE_ORDER\n                                         \u003d new CaseInsensitiveComparator();\n    private static class CaseInsensitiveComparator\n            implements Comparator\u003cString\u003e, java.io.Serializable {\n        // use serialVersionUID from JDK 1.2.2 for interoperability\n        private static final long serialVersionUID \u003d 8575799808933029326L;\n\n        public int compare(String s1, String s2) {\n            byte v1[] \u003d s1.value;\n            byte v2[] \u003d s2.value;\n            if (s1.coder() \u003d\u003d s2.coder()) {\n                return s1.isLatin1() ? StringLatin1.compareToCI(v1, v2)\n                                     : StringUTF16.compareToCI(v1, v2);\n            }\n            return s1.isLatin1() ? StringLatin1.compareToCI_UTF16(v1, v2)\n                                 : StringUTF16.compareToCI_Latin1(v1, v2);\n        }\n\n        /** Replaces the de-serialized object. */\n        private Object readResolve() { return CASE_INSENSITIVE_ORDER; }\n    }\n\n    /**\n     * Compares two strings lexicographically, ignoring case\n     * differences. This method returns an integer whose sign is that of\n     * calling {@code compareTo} with normalized versions of the strings\n     * where case differences have been eliminated by calling\n     * {@code Character.toLowerCase(Character.toUpperCase(character))} on\n     * each character.\n     * \u003cp\u003e\n     * Note that this method does \u003cem\u003enot\u003c/em\u003e take locale into account,\n     * and will result in an unsatisfactory ordering for certain locales.\n     * The {@link java.text.Collator} class provides locale-sensitive comparison.\n     *\n     * @param   str   the {@code String} to be compared.\n     * @return  a negative integer, zero, or a positive integer as the\n     *          specified String is greater than, equal to, or less\n     *          than this String, ignoring case considerations.\n     * @see     java.text.Collator\n     * @since   1.2\n     */\n    public int compareToIgnoreCase(String str) {\n        return CASE_INSENSITIVE_ORDER.compare(this, str);\n    }\n\n    /**\n     * Tests if two string regions are equal.\n     * \u003cp\u003e\n     * A substring of this {@code String} object is compared to a substring\n     * of the argument other. The result is true if these substrings\n     * represent identical character sequences. The substring of this\n     * {@code String} object to be compared begins at index {@code toffset}\n     * and has length {@code len}. The substring of other to be compared\n     * begins at index {@code ooffset} and has length {@code len}. The\n     * result is {@code false} if and only if at least one of the following\n     * is true:\n     * \u003cul\u003e\u003cli\u003e{@code toffset} is negative.\n     * \u003cli\u003e{@code ooffset} is negative.\n     * \u003cli\u003e{@code toffset+len} is greater than the length of this\n     * {@code String} object.\n     * \u003cli\u003e{@code ooffset+len} is greater than the length of the other\n     * argument.\n     * \u003cli\u003eThere is some nonnegative integer \u003ci\u003ek\u003c/i\u003e less than {@code len}\n     * such that:\n     * {@code this.charAt(toffset + }\u003ci\u003ek\u003c/i\u003e{@code ) !\u003d other.charAt(ooffset + }\n     * \u003ci\u003ek\u003c/i\u003e{@code )}\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003eNote that this method does \u003cem\u003enot\u003c/em\u003e take locale into account.  The\n     * {@link java.text.Collator} class provides locale-sensitive comparison.\n     *\n     * @param   toffset   the starting offset of the subregion in this string.\n     * @param   other     the string argument.\n     * @param   ooffset   the starting offset of the subregion in the string\n     *                    argument.\n     * @param   len       the number of characters to compare.\n     * @return  {@code true} if the specified subregion of this string\n     *          exactly matches the specified subregion of the string argument;\n     *          {@code false} otherwise.\n     */\n    public boolean regionMatches(int toffset, String other, int ooffset, int len) {\n        byte tv[] \u003d value;\n        byte ov[] \u003d other.value;\n        // Note: toffset, ooffset, or len might be near -1\u003e\u003e\u003e1.\n        if ((ooffset \u003c 0) || (toffset \u003c 0) ||\n             (toffset \u003e (long)length() - len) ||\n             (ooffset \u003e (long)other.length() - len)) {\n            return false;\n        }\n        if (coder() \u003d\u003d other.coder()) {\n            if (!isLatin1() \u0026\u0026 (len \u003e 0)) {\n                toffset \u003d toffset \u003c\u003c 1;\n                ooffset \u003d ooffset \u003c\u003c 1;\n                len \u003d len \u003c\u003c 1;\n            }\n            while (len-- \u003e 0) {\n                if (tv[toffset++] !\u003d ov[ooffset++]) {\n                    return false;\n                }\n            }\n        } else {\n            if (coder() \u003d\u003d LATIN1) {\n                while (len-- \u003e 0) {\n                    if (StringLatin1.getChar(tv, toffset++) !\u003d\n                        StringUTF16.getChar(ov, ooffset++)) {\n                        return false;\n                    }\n                }\n            } else {\n                while (len-- \u003e 0) {\n                    if (StringUTF16.getChar(tv, toffset++) !\u003d\n                        StringLatin1.getChar(ov, ooffset++)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Tests if two string regions are equal.\n     * \u003cp\u003e\n     * A substring of this {@code String} object is compared to a substring\n     * of the argument {@code other}. The result is {@code true} if these\n     * substrings represent character sequences that are the same, ignoring\n     * case if and only if {@code ignoreCase} is true. The substring of\n     * this {@code String} object to be compared begins at index\n     * {@code toffset} and has length {@code len}. The substring of\n     * {@code other} to be compared begins at index {@code ooffset} and\n     * has length {@code len}. The result is {@code false} if and only if\n     * at least one of the following is true:\n     * \u003cul\u003e\u003cli\u003e{@code toffset} is negative.\n     * \u003cli\u003e{@code ooffset} is negative.\n     * \u003cli\u003e{@code toffset+len} is greater than the length of this\n     * {@code String} object.\n     * \u003cli\u003e{@code ooffset+len} is greater than the length of the other\n     * argument.\n     * \u003cli\u003e{@code ignoreCase} is {@code false} and there is some nonnegative\n     * integer \u003ci\u003ek\u003c/i\u003e less than {@code len} such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * this.charAt(toffset+k) !\u003d other.charAt(ooffset+k)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * \u003cli\u003e{@code ignoreCase} is {@code true} and there is some nonnegative\n     * integer \u003ci\u003ek\u003c/i\u003e less than {@code len} such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * Character.toLowerCase(Character.toUpperCase(this.charAt(toffset+k))) !\u003d\n     Character.toLowerCase(Character.toUpperCase(other.charAt(ooffset+k)))\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003eNote that this method does \u003cem\u003enot\u003c/em\u003e take locale into account,\n     * and will result in unsatisfactory results for certain locales when\n     * {@code ignoreCase} is {@code true}.  The {@link java.text.Collator} class\n     * provides locale-sensitive comparison.\n     *\n     * @param   ignoreCase   if {@code true}, ignore case when comparing\n     *                       characters.\n     * @param   toffset      the starting offset of the subregion in this\n     *                       string.\n     * @param   other        the string argument.\n     * @param   ooffset      the starting offset of the subregion in the string\n     *                       argument.\n     * @param   len          the number of characters to compare.\n     * @return  {@code true} if the specified subregion of this string\n     *          matches the specified subregion of the string argument;\n     *          {@code false} otherwise. Whether the matching is exact\n     *          or case insensitive depends on the {@code ignoreCase}\n     *          argument.\n     */\n    public boolean regionMatches(boolean ignoreCase, int toffset,\n            String other, int ooffset, int len) {\n        if (!ignoreCase) {\n            return regionMatches(toffset, other, ooffset, len);\n        }\n        // Note: toffset, ooffset, or len might be near -1\u003e\u003e\u003e1.\n        if ((ooffset \u003c 0) || (toffset \u003c 0)\n                || (toffset \u003e (long)length() - len)\n                || (ooffset \u003e (long)other.length() - len)) {\n            return false;\n        }\n        byte tv[] \u003d value;\n        byte ov[] \u003d other.value;\n        if (coder() \u003d\u003d other.coder()) {\n            return isLatin1()\n              ? StringLatin1.regionMatchesCI(tv, toffset, ov, ooffset, len)\n              : StringUTF16.regionMatchesCI(tv, toffset, ov, ooffset, len);\n        }\n        return isLatin1()\n              ? StringLatin1.regionMatchesCI_UTF16(tv, toffset, ov, ooffset, len)\n              : StringUTF16.regionMatchesCI_Latin1(tv, toffset, ov, ooffset, len);\n    }\n\n    /**\n     * Tests if the substring of this string beginning at the\n     * specified index starts with the specified prefix.\n     *\n     * @param   prefix    the prefix.\n     * @param   toffset   where to begin looking in this string.\n     * @return  {@code true} if the character sequence represented by the\n     *          argument is a prefix of the substring of this object starting\n     *          at index {@code toffset}; {@code false} otherwise.\n     *          The result is {@code false} if {@code toffset} is\n     *          negative or greater than the length of this\n     *          {@code String} object; otherwise the result is the same\n     *          as the result of the expression\n     *          \u003cpre\u003e\n     *          this.substring(toffset).startsWith(prefix)\n     *          \u003c/pre\u003e\n     */\n    public boolean startsWith(String prefix, int toffset) {\n        // Note: toffset might be near -1\u003e\u003e\u003e1.\n        if (toffset \u003c 0 || toffset \u003e length() - prefix.length()) {\n            return false;\n        }\n        byte ta[] \u003d value;\n        byte pa[] \u003d prefix.value;\n        int po \u003d 0;\n        int pc \u003d pa.length;\n        if (coder() \u003d\u003d prefix.coder()) {\n            int to \u003d isLatin1() ? toffset : toffset \u003c\u003c 1;\n            while (po \u003c pc) {\n                if (ta[to++] !\u003d pa[po++]) {\n                    return false;\n                }\n            }\n        } else {\n            if (isLatin1()) {  // \u0026\u0026 pcoder \u003d\u003d UTF16\n                return false;\n            }\n            // coder \u003d\u003d UTF16 \u0026\u0026 pcoder \u003d\u003d LATIN1)\n            while (po \u003c pc) {\n                if (StringUTF16.getChar(ta, toffset++) !\u003d (pa[po++] \u0026 0xff)) {\n                    return false;\n               }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Tests if this string starts with the specified prefix.\n     *\n     * @param   prefix   the prefix.\n     * @return  {@code true} if the character sequence represented by the\n     *          argument is a prefix of the character sequence represented by\n     *          this string; {@code false} otherwise.\n     *          Note also that {@code true} will be returned if the\n     *          argument is an empty string or is equal to this\n     *          {@code String} object as determined by the\n     *          {@link #equals(Object)} method.\n     * @since   1.0\n     */\n    public boolean startsWith(String prefix) {\n        return startsWith(prefix, 0);\n    }\n\n    /**\n     * Tests if this string ends with the specified suffix.\n     *\n     * @param   suffix   the suffix.\n     * @return  {@code true} if the character sequence represented by the\n     *          argument is a suffix of the character sequence represented by\n     *          this object; {@code false} otherwise. Note that the\n     *          result will be {@code true} if the argument is the\n     *          empty string or is equal to this {@code String} object\n     *          as determined by the {@link #equals(Object)} method.\n     */\n    public boolean endsWith(String suffix) {\n        return startsWith(suffix, length() - suffix.length());\n    }\n\n    /**\n     * Returns a hash code for this string. The hash code for a\n     * {@code String} object is computed as\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * using {@code int} arithmetic, where {@code s[i]} is the\n     * \u003ci\u003ei\u003c/i\u003eth character of the string, {@code n} is the length of\n     * the string, and {@code ^} indicates exponentiation.\n     * (The hash value of the empty string is zero.)\n     *\n     * @return  a hash code value for this object.\n     */\n    public int hashCode() {\n        int h \u003d hash;\n        if (h \u003d\u003d 0 \u0026\u0026 value.length \u003e 0) {\n            hash \u003d h \u003d isLatin1() ? StringLatin1.hashCode(value)\n                                  : StringUTF16.hashCode(value);\n        }\n        return h;\n    }\n\n    /**\n     * Returns the index within this string of the first occurrence of\n     * the specified character. If a character with value\n     * {@code ch} occurs in the character sequence represented by\n     * this {@code String} object, then the index (in Unicode\n     * code units) of the first such occurrence is returned. For\n     * values of {@code ch} in the range from 0 to 0xFFFF\n     * (inclusive), this is the smallest value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * this.charAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true. For other values of {@code ch}, it is the\n     * smallest value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * this.codePointAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true. In either case, if no such character occurs in this\n     * string, then {@code -1} is returned.\n     *\n     * @param   ch   a character (Unicode code point).\n     * @return  the index of the first occurrence of the character in the\n     *          character sequence represented by this object, or\n     *          {@code -1} if the character does not occur.\n     */\n    public int indexOf(int ch) {\n        return indexOf(ch, 0);\n    }\n\n    /**\n     * Returns the index within this string of the first occurrence of the\n     * specified character, starting the search at the specified index.\n     * \u003cp\u003e\n     * If a character with value {@code ch} occurs in the\n     * character sequence represented by this {@code String}\n     * object at an index no smaller than {@code fromIndex}, then\n     * the index of the first such occurrence is returned. For values\n     * of {@code ch} in the range from 0 to 0xFFFF (inclusive),\n     * this is the smallest value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * (this.charAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch) {@code \u0026\u0026} (\u003ci\u003ek\u003c/i\u003e \u0026gt;\u003d fromIndex)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true. For other values of {@code ch}, it is the\n     * smallest value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * (this.codePointAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch) {@code \u0026\u0026} (\u003ci\u003ek\u003c/i\u003e \u0026gt;\u003d fromIndex)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true. In either case, if no such character occurs in this\n     * string at or after position {@code fromIndex}, then\n     * {@code -1} is returned.\n     *\n     * \u003cp\u003e\n     * There is no restriction on the value of {@code fromIndex}. If it\n     * is negative, it has the same effect as if it were zero: this entire\n     * string may be searched. If it is greater than the length of this\n     * string, it has the same effect as if it were equal to the length of\n     * this string: {@code -1} is returned.\n     *\n     * \u003cp\u003eAll indices are specified in {@code char} values\n     * (Unicode code units).\n     *\n     * @param   ch          a character (Unicode code point).\n     * @param   fromIndex   the index to start the search from.\n     * @return  the index of the first occurrence of the character in the\n     *          character sequence represented by this object that is greater\n     *          than or equal to {@code fromIndex}, or {@code -1}\n     *          if the character does not occur.\n     */\n    public int indexOf(int ch, int fromIndex) {\n        return isLatin1() ? StringLatin1.indexOf(value, ch, fromIndex)\n                          : StringUTF16.indexOf(value, ch, fromIndex);\n    }\n\n    /**\n     * Returns the index within this string of the last occurrence of\n     * the specified character. For values of {@code ch} in the\n     * range from 0 to 0xFFFF (inclusive), the index (in Unicode code\n     * units) returned is the largest value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * this.charAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true. For other values of {@code ch}, it is the\n     * largest value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * this.codePointAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true.  In either case, if no such character occurs in this\n     * string, then {@code -1} is returned.  The\n     * {@code String} is searched backwards starting at the last\n     * character.\n     *\n     * @param   ch   a character (Unicode code point).\n     * @return  the index of the last occurrence of the character in the\n     *          character sequence represented by this object, or\n     *          {@code -1} if the character does not occur.\n     */\n    public int lastIndexOf(int ch) {\n        return lastIndexOf(ch, length() - 1);\n    }\n\n    /**\n     * Returns the index within this string of the last occurrence of\n     * the specified character, searching backward starting at the\n     * specified index. For values of {@code ch} in the range\n     * from 0 to 0xFFFF (inclusive), the index returned is the largest\n     * value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * (this.charAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch) {@code \u0026\u0026} (\u003ci\u003ek\u003c/i\u003e \u0026lt;\u003d fromIndex)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true. For other values of {@code ch}, it is the\n     * largest value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * (this.codePointAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch) {@code \u0026\u0026} (\u003ci\u003ek\u003c/i\u003e \u0026lt;\u003d fromIndex)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true. In either case, if no such character occurs in this\n     * string at or before position {@code fromIndex}, then\n     * {@code -1} is returned.\n     *\n     * \u003cp\u003eAll indices are specified in {@code char} values\n     * (Unicode code units).\n     *\n     * @param   ch          a character (Unicode code point).\n     * @param   fromIndex   the index to start the search from. There is no\n     *          restriction on the value of {@code fromIndex}. If it is\n     *          greater than or equal to the length of this string, it has\n     *          the same effect as if it were equal to one less than the\n     *          length of this string: this entire string may be searched.\n     *          If it is negative, it has the same effect as if it were -1:\n     *          -1 is returned.\n     * @return  the index of the last occurrence of the character in the\n     *          character sequence represented by this object that is less\n     *          than or equal to {@code fromIndex}, or {@code -1}\n     *          if the character does not occur before that point.\n     */\n    public int lastIndexOf(int ch, int fromIndex) {\n        return isLatin1() ? StringLatin1.lastIndexOf(value, ch, fromIndex)\n                          : StringUTF16.lastIndexOf(value, ch, fromIndex);\n    }\n\n    /**\n     * Returns the index within this string of the first occurrence of the\n     * specified substring.\n     *\n     * \u003cp\u003eThe returned index is the smallest value {@code k} for which:\n     * \u003cpre\u003e{@code\n     * this.startsWith(str, k)\n     * }\u003c/pre\u003e\n     * If no such value of {@code k} exists, then {@code -1} is returned.\n     *\n     * @param   str   the substring to search for.\n     * @return  the index of the first occurrence of the specified substring,\n     *          or {@code -1} if there is no such occurrence.\n     */\n    public int indexOf(String str) {\n        if (coder() \u003d\u003d str.coder()) {\n            return isLatin1() ? StringLatin1.indexOf(value, str.value)\n                              : StringUTF16.indexOf(value, str.value);\n        }\n        if (coder() \u003d\u003d LATIN1) {  // str.coder \u003d\u003d UTF16\n            return -1;\n        }\n        return StringUTF16.indexOfLatin1(value, str.value);\n    }\n\n    /**\n     * Returns the index within this string of the first occurrence of the\n     * specified substring, starting at the specified index.\n     *\n     * \u003cp\u003eThe returned index is the smallest value {@code k} for which:\n     * \u003cpre\u003e{@code\n     *     k \u003e\u003d Math.min(fromIndex, this.length()) \u0026\u0026\n     *                   this.startsWith(str, k)\n     * }\u003c/pre\u003e\n     * If no such value of {@code k} exists, then {@code -1} is returned.\n     *\n     * @param   str         the substring to search for.\n     * @param   fromIndex   the index from which to start the search.\n     * @return  the index of the first occurrence of the specified substring,\n     *          starting at the specified index,\n     *          or {@code -1} if there is no such occurrence.\n     */\n    public int indexOf(String str, int fromIndex) {\n        return indexOf(value, coder(), length(), str, fromIndex);\n    }\n\n    /**\n     * Code shared by String and AbstractStringBuilder to do searches. The\n     * source is the character array being searched, and the target\n     * is the string being searched for.\n     *\n     * @param   src       the characters being searched.\n     * @param   srcCoder  the coder of the source string.\n     * @param   srcCount  length of the source string.\n     * @param   tgtStr    the characters being searched for.\n     * @param   fromIndex the index to begin searching from.\n     */\n    static int indexOf(byte[] src, byte srcCoder, int srcCount,\n                       String tgtStr, int fromIndex) {\n        byte[] tgt    \u003d tgtStr.value;\n        byte tgtCoder \u003d tgtStr.coder();\n        int tgtCount  \u003d tgtStr.length();\n\n        if (fromIndex \u003e\u003d srcCount) {\n            return (tgtCount \u003d\u003d 0 ? srcCount : -1);\n        }\n        if (fromIndex \u003c 0) {\n            fromIndex \u003d 0;\n        }\n        if (tgtCount \u003d\u003d 0) {\n            return fromIndex;\n        }\n        if (tgtCount \u003e srcCount) {\n            return -1;\n        }\n        if (srcCoder \u003d\u003d tgtCoder) {\n            return srcCoder \u003d\u003d LATIN1\n                ? StringLatin1.indexOf(src, srcCount, tgt, tgtCount, fromIndex)\n                : StringUTF16.indexOf(src, srcCount, tgt, tgtCount, fromIndex);\n        }\n        if (srcCoder \u003d\u003d LATIN1) {    //  \u0026\u0026 tgtCoder \u003d\u003d UTF16\n            return -1;\n        }\n        // srcCoder \u003d\u003d UTF16 \u0026\u0026 tgtCoder \u003d\u003d LATIN1) {\n        return StringUTF16.indexOfLatin1(src, srcCount, tgt, tgtCount, fromIndex);\n    }\n\n    /**\n     * Returns the index within this string of the last occurrence of the\n     * specified substring.  The last occurrence of the empty string \"\"\n     * is considered to occur at the index value {@code this.length()}.\n     *\n     * \u003cp\u003eThe returned index is the largest value {@code k} for which:\n     * \u003cpre\u003e{@code\n     * this.startsWith(str, k)\n     * }\u003c/pre\u003e\n     * If no such value of {@code k} exists, then {@code -1} is returned.\n     *\n     * @param   str   the substring to search for.\n     * @return  the index of the last occurrence of the specified substring,\n     *          or {@code -1} if there is no such occurrence.\n     */\n    public int lastIndexOf(String str) {\n        return lastIndexOf(str, length());\n    }\n\n    /**\n     * Returns the index within this string of the last occurrence of the\n     * specified substring, searching backward starting at the specified index.\n     *\n     * \u003cp\u003eThe returned index is the largest value {@code k} for which:\n     * \u003cpre\u003e{@code\n     *     k \u003c\u003d Math.min(fromIndex, this.length()) \u0026\u0026\n     *                   this.startsWith(str, k)\n     * }\u003c/pre\u003e\n     * If no such value of {@code k} exists, then {@code -1} is returned.\n     *\n     * @param   str         the substring to search for.\n     * @param   fromIndex   the index to start the search from.\n     * @return  the index of the last occurrence of the specified substring,\n     *          searching backward from the specified index,\n     *          or {@code -1} if there is no such occurrence.\n     */\n    public int lastIndexOf(String str, int fromIndex) {\n        return lastIndexOf(value, coder(), length(), str, fromIndex);\n    }\n\n    /**\n     * Code shared by String and AbstractStringBuilder to do searches. The\n     * source is the character array being searched, and the target\n     * is the string being searched for.\n     *\n     * @param   src         the characters being searched.\n     * @param   srcCoder    coder handles the mapping between bytes/chars\n     * @param   srcCount    count of the source string.\n     * @param   tgt         the characters being searched for.\n     * @param   fromIndex   the index to begin searching from.\n     */\n    static int lastIndexOf(byte[] src, byte srcCoder, int srcCount,\n                           String tgtStr, int fromIndex) {\n        byte[] tgt \u003d tgtStr.value;\n        byte tgtCoder \u003d tgtStr.coder();\n        int tgtCount \u003d tgtStr.length();\n        /*\n         * Check arguments; return immediately where possible. For\n         * consistency, don\u0027t check for null str.\n         */\n        int rightIndex \u003d srcCount - tgtCount;\n        if (fromIndex \u003e rightIndex) {\n            fromIndex \u003d rightIndex;\n        }\n        if (fromIndex \u003c 0) {\n            return -1;\n        }\n        /* Empty string always matches. */\n        if (tgtCount \u003d\u003d 0) {\n            return fromIndex;\n        }\n        if (srcCoder \u003d\u003d tgtCoder) {\n            return srcCoder \u003d\u003d LATIN1\n                ? StringLatin1.lastIndexOf(src, srcCount, tgt, tgtCount, fromIndex)\n                : StringUTF16.lastIndexOf(src, srcCount, tgt, tgtCount, fromIndex);\n        }\n        if (srcCoder \u003d\u003d LATIN1) {    // \u0026\u0026 tgtCoder \u003d\u003d UTF16\n            return -1;\n        }\n        // srcCoder \u003d\u003d UTF16 \u0026\u0026 tgtCoder \u003d\u003d LATIN1\n        return StringUTF16.lastIndexOfLatin1(src, srcCount, tgt, tgtCount, fromIndex);\n    }\n\n    /**\n     * Returns a string that is a substring of this string. The\n     * substring begins with the character at the specified index and\n     * extends to the end of this string. \u003cp\u003e\n     * Examples:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * \"unhappy\".substring(2) returns \"happy\"\n     * \"Harbison\".substring(3) returns \"bison\"\n     * \"emptiness\".substring(9) returns \"\" (an empty string)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @param      beginIndex   the beginning index, inclusive.\n     * @return     the specified substring.\n     * @exception  IndexOutOfBoundsException  if\n     *             {@code beginIndex} is negative or larger than the\n     *             length of this {@code String} object.\n     */\n    public String substring(int beginIndex) {\n        if (beginIndex \u003c 0) {\n            throw new StringIndexOutOfBoundsException(beginIndex);\n        }\n        int subLen \u003d length() - beginIndex;\n        if (subLen \u003c 0) {\n            throw new StringIndexOutOfBoundsException(subLen);\n        }\n        if (beginIndex \u003d\u003d 0) {\n            return this;\n        }\n        return isLatin1() ? StringLatin1.newString(value, beginIndex, subLen)\n                          : StringUTF16.newString(value, beginIndex, subLen);\n    }\n\n    /**\n     * Returns a string that is a substring of this string. The\n     * substring begins at the specified {@code beginIndex} and\n     * extends to the character at index {@code endIndex - 1}.\n     * Thus the length of the substring is {@code endIndex-beginIndex}.\n     * \u003cp\u003e\n     * Examples:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * \"hamburger\".substring(4, 8) returns \"urge\"\n     * \"smiles\".substring(1, 5) returns \"mile\"\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @param      beginIndex   the beginning index, inclusive.\n     * @param      endIndex     the ending index, exclusive.\n     * @return     the specified substring.\n     * @exception  IndexOutOfBoundsException  if the\n     *             {@code beginIndex} is negative, or\n     *             {@code endIndex} is larger than the length of\n     *             this {@code String} object, or\n     *             {@code beginIndex} is larger than\n     *             {@code endIndex}.\n     */\n    public String substring(int beginIndex, int endIndex) {\n        int length \u003d length();\n        checkBoundsBeginEnd(beginIndex, endIndex, length);\n        int subLen \u003d endIndex - beginIndex;\n        if (beginIndex \u003d\u003d 0 \u0026\u0026 endIndex \u003d\u003d length) {\n            return this;\n        }\n        return isLatin1() ? StringLatin1.newString(value, beginIndex, subLen)\n                          : StringUTF16.newString(value, beginIndex, subLen);\n    }\n\n    /**\n     * Returns a character sequence that is a subsequence of this sequence.\n     *\n     * \u003cp\u003e An invocation of this method of the form\n     *\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * str.subSequence(begin,\u0026nbsp;end)\u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * behaves in exactly the same way as the invocation\n     *\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * str.substring(begin,\u0026nbsp;end)\u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @apiNote\n     * This method is defined so that the {@code String} class can implement\n     * the {@link CharSequence} interface.\n     *\n     * @param   beginIndex   the begin index, inclusive.\n     * @param   endIndex     the end index, exclusive.\n     * @return  the specified subsequence.\n     *\n     * @throws  IndexOutOfBoundsException\n     *          if {@code beginIndex} or {@code endIndex} is negative,\n     *          if {@code endIndex} is greater than {@code length()},\n     *          or if {@code beginIndex} is greater than {@code endIndex}\n     *\n     * @since 1.4\n     * @spec JSR-51\n     */\n    public CharSequence subSequence(int beginIndex, int endIndex) {\n        return this.substring(beginIndex, endIndex);\n    }\n\n    /**\n     * Concatenates the specified string to the end of this string.\n     * \u003cp\u003e\n     * If the length of the argument string is {@code 0}, then this\n     * {@code String} object is returned. Otherwise, a\n     * {@code String} object is returned that represents a character\n     * sequence that is the concatenation of the character sequence\n     * represented by this {@code String} object and the character\n     * sequence represented by the argument string.\u003cp\u003e\n     * Examples:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * \"cares\".concat(\"s\") returns \"caress\"\n     * \"to\".concat(\"get\").concat(\"her\") returns \"together\"\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @param   str   the {@code String} that is concatenated to the end\n     *                of this {@code String}.\n     * @return  a string that represents the concatenation of this object\u0027s\n     *          characters followed by the string argument\u0027s characters.\n     */\n    public String concat(String str) {\n        int olen \u003d str.length();\n        if (olen \u003d\u003d 0) {\n            return this;\n        }\n        if (coder() \u003d\u003d str.coder()) {\n            byte[] val \u003d this.value;\n            byte[] oval \u003d str.value;\n            int len \u003d val.length + oval.length;\n            byte[] buf \u003d Arrays.copyOf(val, len);\n            System.arraycopy(oval, 0, buf, val.length, oval.length);\n            return new String(buf, coder);\n        }\n        int len \u003d length();\n        byte[] buf \u003d StringUTF16.newBytesFor(len + olen);\n        getBytes(buf, 0, UTF16);\n        str.getBytes(buf, len, UTF16);\n        return new String(buf, UTF16);\n    }\n\n    /**\n     * Returns a string resulting from replacing all occurrences of\n     * {@code oldChar} in this string with {@code newChar}.\n     * \u003cp\u003e\n     * If the character {@code oldChar} does not occur in the\n     * character sequence represented by this {@code String} object,\n     * then a reference to this {@code String} object is returned.\n     * Otherwise, a {@code String} object is returned that\n     * represents a character sequence identical to the character sequence\n     * represented by this {@code String} object, except that every\n     * occurrence of {@code oldChar} is replaced by an occurrence\n     * of {@code newChar}.\n     * \u003cp\u003e\n     * Examples:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * \"mesquite in your cellar\".replace(\u0027e\u0027, \u0027o\u0027)\n     *         returns \"mosquito in your collar\"\n     * \"the war of baronets\".replace(\u0027r\u0027, \u0027y\u0027)\n     *         returns \"the way of bayonets\"\n     * \"sparring with a purple porpoise\".replace(\u0027p\u0027, \u0027t\u0027)\n     *         returns \"starring with a turtle tortoise\"\n     * \"JonL\".replace(\u0027q\u0027, \u0027x\u0027) returns \"JonL\" (no change)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @param   oldChar   the old character.\n     * @param   newChar   the new character.\n     * @return  a string derived from this string by replacing every\n     *          occurrence of {@code oldChar} with {@code newChar}.\n     */\n    public String replace(char oldChar, char newChar) {\n        if (oldChar !\u003d newChar) {\n            String ret \u003d isLatin1() ? StringLatin1.replace(value, oldChar, newChar)\n                                    : StringUTF16.replace(value, oldChar, newChar);\n            if (ret !\u003d null) {\n                return ret;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Tells whether or not this string matches the given \u003ca\n     * href\u003d\"../util/regex/Pattern.html#sum\"\u003eregular expression\u003c/a\u003e.\n     *\n     * \u003cp\u003e An invocation of this method of the form\n     * \u003ci\u003estr\u003c/i\u003e{@code .matches(}\u003ci\u003eregex\u003c/i\u003e{@code )} yields exactly the\n     * same result as the expression\n     *\n     * \u003cblockquote\u003e\n     * {@link java.util.regex.Pattern}.{@link java.util.regex.Pattern#matches(String,CharSequence)\n     * matches(\u003ci\u003eregex\u003c/i\u003e, \u003ci\u003estr\u003c/i\u003e)}\n     * \u003c/blockquote\u003e\n     *\n     * @param   regex\n     *          the regular expression to which this string is to be matched\n     *\n     * @return  {@code true} if, and only if, this string matches the\n     *          given regular expression\n     *\n     * @throws  PatternSyntaxException\n     *          if the regular expression\u0027s syntax is invalid\n     *\n     * @see java.util.regex.Pattern\n     *\n     * @since 1.4\n     * @spec JSR-51\n     */\n    public boolean matches(String regex) {\n        return Pattern.matches(regex, this);\n    }\n\n    /**\n     * Returns true if and only if this string contains the specified\n     * sequence of char values.\n     *\n     * @param s the sequence to search for\n     * @return true if this string contains {@code s}, false otherwise\n     * @since 1.5\n     */\n    public boolean contains(CharSequence s) {\n        return indexOf(s.toString()) \u003e\u003d 0;\n    }\n\n    /**\n     * Replaces the first substring of this string that matches the given \u003ca\n     * href\u003d\"../util/regex/Pattern.html#sum\"\u003eregular expression\u003c/a\u003e with the\n     * given replacement.\n     *\n     * \u003cp\u003e An invocation of this method of the form\n     * \u003ci\u003estr\u003c/i\u003e{@code .replaceFirst(}\u003ci\u003eregex\u003c/i\u003e{@code ,} \u003ci\u003erepl\u003c/i\u003e{@code )}\n     * yields exactly the same result as the expression\n     *\n     * \u003cblockquote\u003e\n     * \u003ccode\u003e\n     * {@link java.util.regex.Pattern}.{@link\n     * java.util.regex.Pattern#compile compile}(\u003ci\u003eregex\u003c/i\u003e).{@link\n     * java.util.regex.Pattern#matcher(java.lang.CharSequence) matcher}(\u003ci\u003estr\u003c/i\u003e).{@link\n     * java.util.regex.Matcher#replaceFirst replaceFirst}(\u003ci\u003erepl\u003c/i\u003e)\n     * \u003c/code\u003e\n     * \u003c/blockquote\u003e\n     *\n     *\u003cp\u003e\n     * Note that backslashes ({@code \\}) and dollar signs ({@code $}) in the\n     * replacement string may cause the results to be different than if it were\n     * being treated as a literal replacement string; see\n     * {@link java.util.regex.Matcher#replaceFirst}.\n     * Use {@link java.util.regex.Matcher#quoteReplacement} to suppress the special\n     * meaning of these characters, if desired.\n     *\n     * @param   regex\n     *          the regular expression to which this string is to be matched\n     * @param   replacement\n     *          the string to be substituted for the first match\n     *\n     * @return  The resulting {@code String}\n     *\n     * @throws  PatternSyntaxException\n     *          if the regular expression\u0027s syntax is invalid\n     *\n     * @see java.util.regex.Pattern\n     *\n     * @since 1.4\n     * @spec JSR-51\n     */\n    public String replaceFirst(String regex, String replacement) {\n        return Pattern.compile(regex).matcher(this).replaceFirst(replacement);\n    }\n\n    /**\n     * Replaces each substring of this string that matches the given \u003ca\n     * href\u003d\"../util/regex/Pattern.html#sum\"\u003eregular expression\u003c/a\u003e with the\n     * given replacement.\n     *\n     * \u003cp\u003e An invocation of this method of the form\n     * \u003ci\u003estr\u003c/i\u003e{@code .replaceAll(}\u003ci\u003eregex\u003c/i\u003e{@code ,} \u003ci\u003erepl\u003c/i\u003e{@code )}\n     * yields exactly the same result as the expression\n     *\n     * \u003cblockquote\u003e\n     * \u003ccode\u003e\n     * {@link java.util.regex.Pattern}.{@link\n     * java.util.regex.Pattern#compile compile}(\u003ci\u003eregex\u003c/i\u003e).{@link\n     * java.util.regex.Pattern#matcher(java.lang.CharSequence) matcher}(\u003ci\u003estr\u003c/i\u003e).{@link\n     * java.util.regex.Matcher#replaceAll replaceAll}(\u003ci\u003erepl\u003c/i\u003e)\n     * \u003c/code\u003e\n     * \u003c/blockquote\u003e\n     *\n     *\u003cp\u003e\n     * Note that backslashes ({@code \\}) and dollar signs ({@code $}) in the\n     * replacement string may cause the results to be different than if it were\n     * being treated as a literal replacement string; see\n     * {@link java.util.regex.Matcher#replaceAll Matcher.replaceAll}.\n     * Use {@link java.util.regex.Matcher#quoteReplacement} to suppress the special\n     * meaning of these characters, if desired.\n     *\n     * @param   regex\n     *          the regular expression to which this string is to be matched\n     * @param   replacement\n     *          the string to be substituted for each match\n     *\n     * @return  The resulting {@code String}\n     *\n     * @throws  PatternSyntaxException\n     *          if the regular expression\u0027s syntax is invalid\n     *\n     * @see java.util.regex.Pattern\n     *\n     * @since 1.4\n     * @spec JSR-51\n     */\n    public String replaceAll(String regex, String replacement) {\n        return Pattern.compile(regex).matcher(this).replaceAll(replacement);\n    }\n\n    /**\n     * Replaces each substring of this string that matches the literal target\n     * sequence with the specified literal replacement sequence. The\n     * replacement proceeds from the beginning of the string to the end, for\n     * example, replacing \"aa\" with \"b\" in the string \"aaa\" will result in\n     * \"ba\" rather than \"ab\".\n     *\n     * @param  target The sequence of char values to be replaced\n     * @param  replacement The replacement sequence of char values\n     * @return  The resulting string\n     * @since 1.5\n     */\n    public String replace(CharSequence target, CharSequence replacement) {\n        String tgtStr \u003d target.toString();\n        String replStr \u003d replacement.toString();\n        int j \u003d indexOf(tgtStr);\n        if (j \u003c 0) {\n            return this;\n        }\n        int tgtLen \u003d tgtStr.length();\n        int tgtLen1 \u003d Math.max(tgtLen, 1);\n        int thisLen \u003d length();\n\n        int newLenHint \u003d thisLen - tgtLen + replStr.length();\n        if (newLenHint \u003c 0) {\n            throw new OutOfMemoryError();\n        }\n        StringBuilder sb \u003d new StringBuilder(newLenHint);\n        int i \u003d 0;\n        do {\n            sb.append(this, i, j).append(replStr);\n            i \u003d j + tgtLen;\n        } while (j \u003c thisLen \u0026\u0026 (j \u003d indexOf(tgtStr, j + tgtLen1)) \u003e 0);\n        return sb.append(this, i, thisLen).toString();\n    }\n\n    /**\n     * Splits this string around matches of the given\n     * \u003ca href\u003d\"../util/regex/Pattern.html#sum\"\u003eregular expression\u003c/a\u003e.\n     *\n     * \u003cp\u003e The array returned by this method contains each substring of this\n     * string that is terminated by another substring that matches the given\n     * expression or is terminated by the end of the string.  The substrings in\n     * the array are in the order in which they occur in this string.  If the\n     * expression does not match any part of the input then the resulting array\n     * has just one element, namely this string.\n     *\n     * \u003cp\u003e When there is a positive-width match at the beginning of this\n     * string then an empty leading substring is included at the beginning\n     * of the resulting array. A zero-width match at the beginning however\n     * never produces such empty leading substring.\n     *\n     * \u003cp\u003e The {@code limit} parameter controls the number of times the\n     * pattern is applied and therefore affects the length of the resulting\n     * array.\n     * \u003cul\u003e\n     *    \u003cli\u003e\u003cp\u003e\n     *    If the \u003ci\u003elimit\u003c/i\u003e is positive then the pattern will be applied\n     *    at most \u003ci\u003elimit\u003c/i\u003e\u0026nbsp;-\u0026nbsp;1 times, the array\u0027s length will be\n     *    no greater than \u003ci\u003elimit\u003c/i\u003e, and the array\u0027s last entry will contain\n     *    all input beyond the last matched delimiter.\u003c/p\u003e\u003c/li\u003e\n     *\n     *    \u003cli\u003e\u003cp\u003e\n     *    If the \u003ci\u003elimit\u003c/i\u003e is zero then the pattern will be applied as\n     *    many times as possible, the array can have any length, and trailing\n     *    empty strings will be discarded.\u003c/p\u003e\u003c/li\u003e\n     *\n     *    \u003cli\u003e\u003cp\u003e\n     *    If the \u003ci\u003elimit\u003c/i\u003e is negative then the pattern will be applied\n     *    as many times as possible and the array can have any length.\u003c/p\u003e\u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e The string {@code \"boo:and:foo\"}, for example, yields the\n     * following results with these parameters:\n     *\n     * \u003cblockquote\u003e\u003ctable class\u003d\"plain\"\u003e\n     * \u003ccaption style\u003d\"display:none\"\u003eSplit example showing regex, limit, and result\u003c/caption\u003e\n     * \u003cthead\u003e\n     * \u003ctr\u003e\n     *     \u003cth scope\u003d\"col\"\u003eRegex\u003c/th\u003e\n     *     \u003cth scope\u003d\"col\"\u003eLimit\u003c/th\u003e\n     *     \u003cth scope\u003d\"col\"\u003eResult\u003c/th\u003e\n     * \u003c/tr\u003e\n     * \u003c/thead\u003e\n     * \u003ctbody\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\" rowspan\u003d\"3\" style\u003d\"font-weight:normal\"\u003e:\u003c/th\u003e\n     *     \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:right; padding-right:1em\"\u003e2\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"boo\", \"and:foo\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003c!-- : --\u003e\n     *     \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:right; padding-right:1em\"\u003e5\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"boo\", \"and\", \"foo\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003c!-- : --\u003e\n     *     \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:right; padding-right:1em\"\u003e-2\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"boo\", \"and\", \"foo\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\" rowspan\u003d\"3\" style\u003d\"font-weight:normal\"\u003eo\u003c/th\u003e\n     *     \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:right; padding-right:1em\"\u003e5\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"b\", \"\", \":and:f\", \"\", \"\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003c!-- o --\u003e\n     *     \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:right; padding-right:1em\"\u003e-2\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"b\", \"\", \":and:f\", \"\", \"\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003c!-- o --\u003e\n     *     \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:right; padding-right:1em\"\u003e0\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"b\", \"\", \":and:f\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003c/tbody\u003e\n     * \u003c/table\u003e\u003c/blockquote\u003e\n     *\n     * \u003cp\u003e An invocation of this method of the form\n     * \u003ci\u003estr.\u003c/i\u003e{@code split(}\u003ci\u003eregex\u003c/i\u003e{@code ,}\u0026nbsp;\u003ci\u003en\u003c/i\u003e{@code )}\n     * yields the same result as the expression\n     *\n     * \u003cblockquote\u003e\n     * \u003ccode\u003e\n     * {@link java.util.regex.Pattern}.{@link\n     * java.util.regex.Pattern#compile compile}(\u003ci\u003eregex\u003c/i\u003e).{@link\n     * java.util.regex.Pattern#split(java.lang.CharSequence,int) split}(\u003ci\u003estr\u003c/i\u003e,\u0026nbsp;\u003ci\u003en\u003c/i\u003e)\n     * \u003c/code\u003e\n     * \u003c/blockquote\u003e\n     *\n     *\n     * @param  regex\n     *         the delimiting regular expression\n     *\n     * @param  limit\n     *         the result threshold, as described above\n     *\n     * @return  the array of strings computed by splitting this string\n     *          around matches of the given regular expression\n     *\n     * @throws  PatternSyntaxException\n     *          if the regular expression\u0027s syntax is invalid\n     *\n     * @see java.util.regex.Pattern\n     *\n     * @since 1.4\n     * @spec JSR-51\n     */\n    public String[] split(String regex, int limit) {\n        /* fastpath if the regex is a\n         (1)one-char String and this character is not one of the\n            RegEx\u0027s meta characters \".$|()[{^?*+\\\\\", or\n         (2)two-char String and the first char is the backslash and\n            the second is not the ascii digit or ascii letter.\n         */\n        char ch \u003d 0;\n        if (((regex.length() \u003d\u003d 1 \u0026\u0026\n             \".$|()[{^?*+\\\\\".indexOf(ch \u003d regex.charAt(0)) \u003d\u003d -1) ||\n             (regex.length() \u003d\u003d 2 \u0026\u0026\n              regex.charAt(0) \u003d\u003d \u0027\\\\\u0027 \u0026\u0026\n              (((ch \u003d regex.charAt(1))-\u00270\u0027)|(\u00279\u0027-ch)) \u003c 0 \u0026\u0026\n              ((ch-\u0027a\u0027)|(\u0027z\u0027-ch)) \u003c 0 \u0026\u0026\n              ((ch-\u0027A\u0027)|(\u0027Z\u0027-ch)) \u003c 0)) \u0026\u0026\n            (ch \u003c Character.MIN_HIGH_SURROGATE ||\n             ch \u003e Character.MAX_LOW_SURROGATE))\n        {\n            int off \u003d 0;\n            int next \u003d 0;\n            boolean limited \u003d limit \u003e 0;\n            ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();\n            while ((next \u003d indexOf(ch, off)) !\u003d -1) {\n                if (!limited || list.size() \u003c limit - 1) {\n                    list.add(substring(off, next));\n                    off \u003d next + 1;\n                } else {    // last one\n                    //assert (list.size() \u003d\u003d limit - 1);\n                    int last \u003d length();\n                    list.add(substring(off, last));\n                    off \u003d last;\n                    break;\n                }\n            }\n            // If no match was found, return this\n            if (off \u003d\u003d 0)\n                return new String[]{this};\n\n            // Add remaining segment\n            if (!limited || list.size() \u003c limit)\n                list.add(substring(off, length()));\n\n            // Construct result\n            int resultSize \u003d list.size();\n            if (limit \u003d\u003d 0) {\n                while (resultSize \u003e 0 \u0026\u0026 list.get(resultSize - 1).length() \u003d\u003d 0) {\n                    resultSize--;\n                }\n            }\n            String[] result \u003d new String[resultSize];\n            return list.subList(0, resultSize).toArray(result);\n        }\n        return Pattern.compile(regex).split(this, limit);\n    }\n\n    /**\n     * Splits this string around matches of the given \u003ca\n     * href\u003d\"../util/regex/Pattern.html#sum\"\u003eregular expression\u003c/a\u003e.\n     *\n     * \u003cp\u003e This method works as if by invoking the two-argument {@link\n     * #split(String, int) split} method with the given expression and a limit\n     * argument of zero.  Trailing empty strings are therefore not included in\n     * the resulting array.\n     *\n     * \u003cp\u003e The string {@code \"boo:and:foo\"}, for example, yields the following\n     * results with these expressions:\n     *\n     * \u003cblockquote\u003e\u003ctable class\u003d\"plain\"\u003e\n     * \u003ccaption style\u003d\"display:none\"\u003eSplit examples showing regex and result\u003c/caption\u003e\n     * \u003cthead\u003e\n     * \u003ctr\u003e\n     *  \u003cth scope\u003d\"col\"\u003eRegex\u003c/th\u003e\n     *  \u003cth scope\u003d\"col\"\u003eResult\u003c/th\u003e\n     * \u003c/tr\u003e\n     * \u003c/thead\u003e\n     * \u003ctbody\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\" style\u003d\"text-weight:normal\"\u003e:\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"boo\", \"and\", \"foo\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\" style\u003d\"text-weight:normal\"\u003eo\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"b\", \"\", \":and:f\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003c/tbody\u003e\n     * \u003c/table\u003e\u003c/blockquote\u003e\n     *\n     *\n     * @param  regex\n     *         the delimiting regular expression\n     *\n     * @return  the array of strings computed by splitting this string\n     *          around matches of the given regular expression\n     *\n     * @throws  PatternSyntaxException\n     *          if the regular expression\u0027s syntax is invalid\n     *\n     * @see java.util.regex.Pattern\n     *\n     * @since 1.4\n     * @spec JSR-51\n     */\n    public String[] split(String regex) {\n        return split(regex, 0);\n    }\n\n    /**\n     * Returns a new String composed of copies of the\n     * {@code CharSequence elements} joined together with a copy of\n     * the specified {@code delimiter}.\n     *\n     * \u003cblockquote\u003eFor example,\n     * \u003cpre\u003e{@code\n     *     String message \u003d String.join(\"-\", \"Java\", \"is\", \"cool\");\n     *     // message returned is: \"Java-is-cool\"\n     * }\u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * Note that if an element is null, then {@code \"null\"} is added.\n     *\n     * @param  delimiter the delimiter that separates each element\n     * @param  elements the elements to join together.\n     *\n     * @return a new {@code String} that is composed of the {@code elements}\n     *         separated by the {@code delimiter}\n     *\n     * @throws NullPointerException If {@code delimiter} or {@code elements}\n     *         is {@code null}\n     *\n     * @see java.util.StringJoiner\n     * @since 1.8\n     */\n    public static String join(CharSequence delimiter, CharSequence... elements) {\n        Objects.requireNonNull(delimiter);\n        Objects.requireNonNull(elements);\n        // Number of elements not likely worth Arrays.stream overhead.\n        StringJoiner joiner \u003d new StringJoiner(delimiter);\n        for (CharSequence cs: elements) {\n            joiner.add(cs);\n        }\n        return joiner.toString();\n    }\n\n    /**\n     * Returns a new {@code String} composed of copies of the\n     * {@code CharSequence elements} joined together with a copy of the\n     * specified {@code delimiter}.\n     *\n     * \u003cblockquote\u003eFor example,\n     * \u003cpre\u003e{@code\n     *     List\u003cString\u003e strings \u003d List.of(\"Java\", \"is\", \"cool\");\n     *     String message \u003d String.join(\" \", strings);\n     *     //message returned is: \"Java is cool\"\n     *\n     *     Set\u003cString\u003e strings \u003d\n     *         new LinkedHashSet\u003c\u003e(List.of(\"Java\", \"is\", \"very\", \"cool\"));\n     *     String message \u003d String.join(\"-\", strings);\n     *     //message returned is: \"Java-is-very-cool\"\n     * }\u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * Note that if an individual element is {@code null}, then {@code \"null\"} is added.\n     *\n     * @param  delimiter a sequence of characters that is used to separate each\n     *         of the {@code elements} in the resulting {@code String}\n     * @param  elements an {@code Iterable} that will have its {@code elements}\n     *         joined together.\n     *\n     * @return a new {@code String} that is composed from the {@code elements}\n     *         argument\n     *\n     * @throws NullPointerException If {@code delimiter} or {@code elements}\n     *         is {@code null}\n     *\n     * @see    #join(CharSequence,CharSequence...)\n     * @see    java.util.StringJoiner\n     * @since 1.8\n     */\n    public static String join(CharSequence delimiter,\n            Iterable\u003c? extends CharSequence\u003e elements) {\n        Objects.requireNonNull(delimiter);\n        Objects.requireNonNull(elements);\n        StringJoiner joiner \u003d new StringJoiner(delimiter);\n        for (CharSequence cs: elements) {\n            joiner.add(cs);\n        }\n        return joiner.toString();\n    }\n\n    /**\n     * Converts all of the characters in this {@code String} to lower\n     * case using the rules of the given {@code Locale}.  Case mapping is based\n     * on the Unicode Standard version specified by the {@link java.lang.Character Character}\n     * class. Since case mappings are not always 1:1 char mappings, the resulting\n     * {@code String} may be a different length than the original {@code String}.\n     * \u003cp\u003e\n     * Examples of lowercase  mappings are in the following table:\n     * \u003ctable class\u003d\"plain\"\u003e\n     * \u003ccaption style\u003d\"display:none\"\u003eLowercase mapping examples showing language code of locale, upper case, lower case, and description\u003c/caption\u003e\n     * \u003cthead\u003e\n     * \u003ctr\u003e\n     *   \u003cth scope\u003d\"col\"\u003eLanguage Code of Locale\u003c/th\u003e\n     *   \u003cth scope\u003d\"col\"\u003eUpper Case\u003c/th\u003e\n     *   \u003cth scope\u003d\"col\"\u003eLower Case\u003c/th\u003e\n     *   \u003cth scope\u003d\"col\"\u003eDescription\u003c/th\u003e\n     * \u003c/tr\u003e\n     * \u003c/thead\u003e\n     * \u003ctbody\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003etr (Turkish)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003e\u0026#92;u0130\u003c/th\u003e\n     *   \u003ctd\u003e\u0026#92;u0069\u003c/td\u003e\n     *   \u003ctd\u003ecapital letter I with dot above -\u0026gt; small letter i\u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003etr (Turkish)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003e\u0026#92;u0049\u003c/th\u003e\n     *   \u003ctd\u003e\u0026#92;u0131\u003c/td\u003e\n     *   \u003ctd\u003ecapital letter I -\u0026gt; small letter dotless i \u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003e(all)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003eFrench Fries\u003c/th\u003e\n     *   \u003ctd\u003efrench fries\u003c/td\u003e\n     *   \u003ctd\u003elowercased all chars in String\u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003e(all)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003e\n     *       \u0026Iota;\u0026Chi;\u0026Theta;\u0026Upsilon;\u0026Sigma;\u003c/th\u003e\n     *   \u003ctd\u003e\u0026iota;\u0026chi;\u0026theta;\u0026upsilon;\u0026sigma;\u003c/td\u003e\n     *   \u003ctd\u003elowercased all chars in String\u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003c/tbody\u003e\n     * \u003c/table\u003e\n     *\n     * @param locale use the case transformation rules for this locale\n     * @return the {@code String}, converted to lowercase.\n     * @see     java.lang.String#toLowerCase()\n     * @see     java.lang.String#toUpperCase()\n     * @see     java.lang.String#toUpperCase(Locale)\n     * @since   1.1\n     */\n    public String toLowerCase(Locale locale) {\n        return isLatin1() ? StringLatin1.toLowerCase(this, value, locale)\n                          : StringUTF16.toLowerCase(this, value, locale);\n    }\n\n    /**\n     * Converts all of the characters in this {@code String} to lower\n     * case using the rules of the default locale. This is equivalent to calling\n     * {@code toLowerCase(Locale.getDefault())}.\n     * \u003cp\u003e\n     * \u003cb\u003eNote:\u003c/b\u003e This method is locale sensitive, and may produce unexpected\n     * results if used for strings that are intended to be interpreted locale\n     * independently.\n     * Examples are programming language identifiers, protocol keys, and HTML\n     * tags.\n     * For instance, {@code \"TITLE\".toLowerCase()} in a Turkish locale\n     * returns {@code \"t\\u005Cu0131tle\"}, where \u0027\\u005Cu0131\u0027 is the\n     * LATIN SMALL LETTER DOTLESS I character.\n     * To obtain correct results for locale insensitive strings, use\n     * {@code toLowerCase(Locale.ROOT)}.\n     *\n     * @return  the {@code String}, converted to lowercase.\n     * @see     java.lang.String#toLowerCase(Locale)\n     */\n    public String toLowerCase() {\n        return toLowerCase(Locale.getDefault());\n    }\n\n    /**\n     * Converts all of the characters in this {@code String} to upper\n     * case using the rules of the given {@code Locale}. Case mapping is based\n     * on the Unicode Standard version specified by the {@link java.lang.Character Character}\n     * class. Since case mappings are not always 1:1 char mappings, the resulting\n     * {@code String} may be a different length than the original {@code String}.\n     * \u003cp\u003e\n     * Examples of locale-sensitive and 1:M case mappings are in the following table.\n     *\n     * \u003ctable class\u003d\"plain\"\u003e\n     * \u003ccaption style\u003d\"display:none\"\u003eExamples of locale-sensitive and 1:M case mappings. Shows Language code of locale, lower case, upper case, and description.\u003c/caption\u003e\n     * \u003cthead\u003e\n     * \u003ctr\u003e\n     *   \u003cth scope\u003d\"col\"\u003eLanguage Code of Locale\u003c/th\u003e\n     *   \u003cth scope\u003d\"col\"\u003eLower Case\u003c/th\u003e\n     *   \u003cth scope\u003d\"col\"\u003eUpper Case\u003c/th\u003e\n     *   \u003cth scope\u003d\"col\"\u003eDescription\u003c/th\u003e\n     * \u003c/tr\u003e\n     * \u003c/thead\u003e\n     * \u003ctbody\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003etr (Turkish)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003e\u0026#92;u0069\u003c/th\u003e\n     *   \u003ctd\u003e\u0026#92;u0130\u003c/td\u003e\n     *   \u003ctd\u003esmall letter i -\u0026gt; capital letter I with dot above\u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003etr (Turkish)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003e\u0026#92;u0131\u003c/th\u003e\n     *   \u003ctd\u003e\u0026#92;u0049\u003c/td\u003e\n     *   \u003ctd\u003esmall letter dotless i -\u0026gt; capital letter I\u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003e(all)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003e\u0026#92;u00df\u003c/th\u003e\n     *   \u003ctd\u003e\u0026#92;u0053 \u0026#92;u0053\u003c/td\u003e\n     *   \u003ctd\u003esmall letter sharp s -\u0026gt; two letters: SS\u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003e(all)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003eFahrvergn\u0026uuml;gen\u003c/th\u003e\n     *   \u003ctd\u003eFAHRVERGN\u0026Uuml;GEN\u003c/td\u003e\n     *   \u003ctd\u003e\u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003c/tbody\u003e\n     * \u003c/table\u003e\n     * @param locale use the case transformation rules for this locale\n     * @return the {@code String}, converted to uppercase.\n     * @see     java.lang.String#toUpperCase()\n     * @see     java.lang.String#toLowerCase()\n     * @see     java.lang.String#toLowerCase(Locale)\n     * @since   1.1\n     */\n    public String toUpperCase(Locale locale) {\n        return isLatin1() ? StringLatin1.toUpperCase(this, value, locale)\n                          : StringUTF16.toUpperCase(this, value, locale);\n    }\n\n    /**\n     * Converts all of the characters in this {@code String} to upper\n     * case using the rules of the default locale. This method is equivalent to\n     * {@code toUpperCase(Locale.getDefault())}.\n     * \u003cp\u003e\n     * \u003cb\u003eNote:\u003c/b\u003e This method is locale sensitive, and may produce unexpected\n     * results if used for strings that are intended to be interpreted locale\n     * independently.\n     * Examples are programming language identifiers, protocol keys, and HTML\n     * tags.\n     * For instance, {@code \"title\".toUpperCase()} in a Turkish locale\n     * returns {@code \"T\\u005Cu0130TLE\"}, where \u0027\\u005Cu0130\u0027 is the\n     * LATIN CAPITAL LETTER I WITH DOT ABOVE character.\n     * To obtain correct results for locale insensitive strings, use\n     * {@code toUpperCase(Locale.ROOT)}.\n     *\n     * @return  the {@code String}, converted to uppercase.\n     * @see     java.lang.String#toUpperCase(Locale)\n     */\n    public String toUpperCase() {\n        return toUpperCase(Locale.getDefault());\n    }\n\n    /**\n     * Returns a string whose value is this string, with all leading\n     * and trailing space removed, where space is defined\n     * as any character whose codepoint is less than or equal to\n     * {@code \u0027U+0020\u0027} (the space character).\n     * \u003cp\u003e\n     * If this {@code String} object represents an empty character\n     * sequence, or the first and last characters of character sequence\n     * represented by this {@code String} object both have codes\n     * that are not space (as defined above), then a\n     * reference to this {@code String} object is returned.\n     * \u003cp\u003e\n     * Otherwise, if all characters in this string are space (as\n     * defined above), then a  {@code String} object representing an\n     * empty string is returned.\n     * \u003cp\u003e\n     * Otherwise, let \u003ci\u003ek\u003c/i\u003e be the index of the first character in the\n     * string whose code is not a space (as defined above) and let\n     * \u003ci\u003em\u003c/i\u003e be the index of the last character in the string whose code\n     * is not a space (as defined above). A {@code String}\n     * object is returned, representing the substring of this string that\n     * begins with the character at index \u003ci\u003ek\u003c/i\u003e and ends with the\n     * character at index \u003ci\u003em\u003c/i\u003e-that is, the result of\n     * {@code this.substring(k, m + 1)}.\n     * \u003cp\u003e\n     * This method may be used to trim space (as defined above) from\n     * the beginning and end of a string.\n     *\n     * @return  a string whose value is this string, with all leading\n     *          and trailing space removed, or this string if it\n     *          has no leading or trailing space.\n     */\n    public String trim() {\n        String ret \u003d isLatin1() ? StringLatin1.trim(value)\n                                : StringUTF16.trim(value);\n        return ret \u003d\u003d null ? this : ret;\n    }\n\n    /**\n     * Returns a string whose value is this string, with all leading\n     * and trailing {@link Character#isWhitespace(int) white space}\n     * removed.\n     * \u003cp\u003e\n     * If this {@code String} object represents an empty string,\n     * or if all code points in this string are\n     * {@link Character#isWhitespace(int) white space}, then an empty string\n     * is returned.\n     * \u003cp\u003e\n     * Otherwise, returns a substring of this string beginning with the first\n     * code point that is not a {@link Character#isWhitespace(int) white space}\n     * up to and including the last code point that is not a\n     * {@link Character#isWhitespace(int) white space}.\n     * \u003cp\u003e\n     * This method may be used to strip\n     * {@link Character#isWhitespace(int) white space} from\n     * the beginning and end of a string.\n     *\n     * @return  a string whose value is this string, with all leading\n     *          and trailing white space removed\n     *\n     * @see Character#isWhitespace(int)\n     *\n     * @since 11\n     */\n    public String strip() {\n        String ret \u003d isLatin1() ? StringLatin1.strip(value)\n                                : StringUTF16.strip(value);\n        return ret \u003d\u003d null ? this : ret;\n    }\n\n    /**\n     * Returns a string whose value is this string, with all leading\n     * {@link Character#isWhitespace(int) white space} removed.\n     * \u003cp\u003e\n     * If this {@code String} object represents an empty string,\n     * or if all code points in this string are\n     * {@link Character#isWhitespace(int) white space}, then an empty string\n     * is returned.\n     * \u003cp\u003e\n     * Otherwise, returns a substring of this string beginning with the first\n     * code point that is not a {@link Character#isWhitespace(int) white space}\n     * up to to and including the last code point of this string.\n     * \u003cp\u003e\n     * This method may be used to trim\n     * {@link Character#isWhitespace(int) white space} from\n     * the beginning of a string.\n     *\n     * @return  a string whose value is this string, with all leading white\n     *          space removed\n     *\n     * @see Character#isWhitespace(int)\n     *\n     * @since 11\n     */\n    public String stripLeading() {\n        String ret \u003d isLatin1() ? StringLatin1.stripLeading(value)\n                                : StringUTF16.stripLeading(value);\n        return ret \u003d\u003d null ? this : ret;\n    }\n\n    /**\n     * Returns a string whose value is this string, with all trailing\n     * {@link Character#isWhitespace(int) white space} removed.\n     * \u003cp\u003e\n     * If this {@code String} object represents an empty string,\n     * or if all characters in this string are\n     * {@link Character#isWhitespace(int) white space}, then an empty string\n     * is returned.\n     * \u003cp\u003e\n     * Otherwise, returns a substring of this string beginning with the first\n     * code point of this string up to and including the last code point\n     * that is not a {@link Character#isWhitespace(int) white space}.\n     * \u003cp\u003e\n     * This method may be used to trim\n     * {@link Character#isWhitespace(int) white space} from\n     * the end of a string.\n     *\n     * @return  a string whose value is this string, with all trailing white\n     *          space removed\n     *\n     * @see Character#isWhitespace(int)\n     *\n     * @since 11\n     */\n    public String stripTrailing() {\n        String ret \u003d isLatin1() ? StringLatin1.stripTrailing(value)\n                                : StringUTF16.stripTrailing(value);\n        return ret \u003d\u003d null ? this : ret;\n    }\n\n    /**\n     * Returns {@code true} if the string is empty or contains only\n     * {@link Character#isWhitespace(int) white space} codepoints,\n     * otherwise {@code false}.\n     *\n     * @return {@code true} if the string is empty or contains only\n     *         {@link Character#isWhitespace(int) white space} codepoints,\n     *         otherwise {@code false}\n     *\n     * @see Character#isWhitespace(int)\n     *\n     * @since 11\n     */\n    public boolean isBlank() {\n        return indexOfNonWhitespace() \u003d\u003d length();\n    }\n\n    private int indexOfNonWhitespace() {\n        if (isLatin1()) {\n            return StringLatin1.indexOfNonWhitespace(value);\n        } else {\n            return StringUTF16.indexOfNonWhitespace(value);\n        }\n    }\n\n    /**\n     * Returns a stream of lines extracted from this string,\n     * separated by line terminators.\n     * \u003cp\u003e\n     * A \u003ci\u003eline terminator\u003c/i\u003e is one of the following:\n     * a line feed character {@code \"\\n\"} (U+000A),\n     * a carriage return character {@code \"\\r\"} (U+000D),\n     * or a carriage return followed immediately by a line feed\n     * {@code \"\\r\\n\"} (U+000D U+000A).\n     * \u003cp\u003e\n     * A \u003ci\u003eline\u003c/i\u003e is either a sequence of zero or more characters\n     * followed by a line terminator, or it is a sequence of one or\n     * more characters followed by the end of the string. A\n     * line does not include the line terminator.\n     * \u003cp\u003e\n     * The stream returned by this method contains the lines from\n     * this string in the order in which they occur.\n     *\n     * @apiNote This definition of \u003ci\u003eline\u003c/i\u003e implies that an empty\n     *          string has zero lines and that there is no empty line\n     *          following a line terminator at the end of a string.\n     *\n     * @implNote This method provides better performance than\n     *           split(\"\\R\") by supplying elements lazily and\n     *           by faster search of new line terminators.\n     *\n     * @return  the stream of lines extracted from this string\n     *\n     * @since 11\n     */\n    public Stream\u003cString\u003e lines() {\n        return isLatin1() ? StringLatin1.lines(value)\n                          : StringUTF16.lines(value);\n    }\n\n    /**\n     * This object (which is already a string!) is itself returned.\n     *\n     * @return  the string itself.\n     */\n    public String toString() {\n        return this;\n    }\n\n    /**\n     * Returns a stream of {@code int} zero-extending the {@code char} values\n     * from this sequence.  Any char which maps to a \u003ca\n     * href\u003d\"{@docRoot}/java.base/java/lang/Character.html#unicode\"\u003esurrogate code\n     * point\u003c/a\u003e is passed through uninterpreted.\n     *\n     * @return an IntStream of char values from this sequence\n     * @since 9\n     */\n    @Override\n    public IntStream chars() {\n        return StreamSupport.intStream(\n            isLatin1() ? new StringLatin1.CharsSpliterator(value, Spliterator.IMMUTABLE)\n                       : new StringUTF16.CharsSpliterator(value, Spliterator.IMMUTABLE),\n            false);\n    }\n\n\n    /**\n     * Returns a stream of code point values from this sequence.  Any surrogate\n     * pairs encountered in the sequence are combined as if by {@linkplain\n     * Character#toCodePoint Character.toCodePoint} and the result is passed\n     * to the stream. Any other code units, including ordinary BMP characters,\n     * unpaired surrogates, and undefined code units, are zero-extended to\n     * {@code int} values which are then passed to the stream.\n     *\n     * @return an IntStream of Unicode code points from this sequence\n     * @since 9\n     */\n    @Override\n    public IntStream codePoints() {\n        return StreamSupport.intStream(\n            isLatin1() ? new StringLatin1.CharsSpliterator(value, Spliterator.IMMUTABLE)\n                       : new StringUTF16.CodePointsSpliterator(value, Spliterator.IMMUTABLE),\n            false);\n    }\n\n    /**\n     * Converts this string to a new character array.\n     *\n     * @return  a newly allocated character array whose length is the length\n     *          of this string and whose contents are initialized to contain\n     *          the character sequence represented by this string.\n     */\n    public char[] toCharArray() {\n        return isLatin1() ? StringLatin1.toChars(value)\n                          : StringUTF16.toChars(value);\n    }\n\n    /**\n     * Returns a formatted string using the specified format string and\n     * arguments.\n     *\n     * \u003cp\u003e The locale always used is the one returned by {@link\n     * java.util.Locale#getDefault(java.util.Locale.Category)\n     * Locale.getDefault(Locale.Category)} with\n     * {@link java.util.Locale.Category#FORMAT FORMAT} category specified.\n     *\n     * @param  format\n     *         A \u003ca href\u003d\"../util/Formatter.html#syntax\"\u003eformat string\u003c/a\u003e\n     *\n     * @param  args\n     *         Arguments referenced by the format specifiers in the format\n     *         string.  If there are more arguments than format specifiers, the\n     *         extra arguments are ignored.  The number of arguments is\n     *         variable and may be zero.  The maximum number of arguments is\n     *         limited by the maximum dimension of a Java array as defined by\n     *         \u003ccite\u003eThe Java\u0026trade; Virtual Machine Specification\u003c/cite\u003e.\n     *         The behaviour on a\n     *         {@code null} argument depends on the \u003ca\n     *         href\u003d\"../util/Formatter.html#syntax\"\u003econversion\u003c/a\u003e.\n     *\n     * @throws  java.util.IllegalFormatException\n     *          If a format string contains an illegal syntax, a format\n     *          specifier that is incompatible with the given arguments,\n     *          insufficient arguments given the format string, or other\n     *          illegal conditions.  For specification of all possible\n     *          formatting errors, see the \u003ca\n     *          href\u003d\"../util/Formatter.html#detail\"\u003eDetails\u003c/a\u003e section of the\n     *          formatter class specification.\n     *\n     * @return  A formatted string\n     *\n     * @see  java.util.Formatter\n     * @since  1.5\n     */\n    public static String format(String format, Object... args) {\n        return new Formatter().format(format, args).toString();\n    }\n\n    /**\n     * Returns a formatted string using the specified locale, format string,\n     * and arguments.\n     *\n     * @param  l\n     *         The {@linkplain java.util.Locale locale} to apply during\n     *         formatting.  If {@code l} is {@code null} then no localization\n     *         is applied.\n     *\n     * @param  format\n     *         A \u003ca href\u003d\"../util/Formatter.html#syntax\"\u003eformat string\u003c/a\u003e\n     *\n     * @param  args\n     *         Arguments referenced by the format specifiers in the format\n     *         string.  If there are more arguments than format specifiers, the\n     *         extra arguments are ignored.  The number of arguments is\n     *         variable and may be zero.  The maximum number of arguments is\n     *         limited by the maximum dimension of a Java array as defined by\n     *         \u003ccite\u003eThe Java\u0026trade; Virtual Machine Specification\u003c/cite\u003e.\n     *         The behaviour on a\n     *         {@code null} argument depends on the\n     *         \u003ca href\u003d\"../util/Formatter.html#syntax\"\u003econversion\u003c/a\u003e.\n     *\n     * @throws  java.util.IllegalFormatException\n     *          If a format string contains an illegal syntax, a format\n     *          specifier that is incompatible with the given arguments,\n     *          insufficient arguments given the format string, or other\n     *          illegal conditions.  For specification of all possible\n     *          formatting errors, see the \u003ca\n     *          href\u003d\"../util/Formatter.html#detail\"\u003eDetails\u003c/a\u003e section of the\n     *          formatter class specification\n     *\n     * @return  A formatted string\n     *\n     * @see  java.util.Formatter\n     * @since  1.5\n     */\n    public static String format(Locale l, String format, Object... args) {\n        return new Formatter(l).format(format, args).toString();\n    }\n\n    /**\n     * Returns the string representation of the {@code Object} argument.\n     *\n     * @param   obj   an {@code Object}.\n     * @return  if the argument is {@code null}, then a string equal to\n     *          {@code \"null\"}; otherwise, the value of\n     *          {@code obj.toString()} is returned.\n     * @see     java.lang.Object#toString()\n     */\n    public static String valueOf(Object obj) {\n        return (obj \u003d\u003d null) ? \"null\" : obj.toString();\n    }\n\n    /**\n     * Returns the string representation of the {@code char} array\n     * argument. The contents of the character array are copied; subsequent\n     * modification of the character array does not affect the returned\n     * string.\n     *\n     * @param   data     the character array.\n     * @return  a {@code String} that contains the characters of the\n     *          character array.\n     */\n    public static String valueOf(char data[]) {\n        return new String(data);\n    }\n\n    /**\n     * Returns the string representation of a specific subarray of the\n     * {@code char} array argument.\n     * \u003cp\u003e\n     * The {@code offset} argument is the index of the first\n     * character of the subarray. The {@code count} argument\n     * specifies the length of the subarray. The contents of the subarray\n     * are copied; subsequent modification of the character array does not\n     * affect the returned string.\n     *\n     * @param   data     the character array.\n     * @param   offset   initial offset of the subarray.\n     * @param   count    length of the subarray.\n     * @return  a {@code String} that contains the characters of the\n     *          specified subarray of the character array.\n     * @exception IndexOutOfBoundsException if {@code offset} is\n     *          negative, or {@code count} is negative, or\n     *          {@code offset+count} is larger than\n     *          {@code data.length}.\n     */\n    public static String valueOf(char data[], int offset, int count) {\n        return new String(data, offset, count);\n    }\n\n    /**\n     * Equivalent to {@link #valueOf(char[], int, int)}.\n     *\n     * @param   data     the character array.\n     * @param   offset   initial offset of the subarray.\n     * @param   count    length of the subarray.\n     * @return  a {@code String} that contains the characters of the\n     *          specified subarray of the character array.\n     * @exception IndexOutOfBoundsException if {@code offset} is\n     *          negative, or {@code count} is negative, or\n     *          {@code offset+count} is larger than\n     *          {@code data.length}.\n     */\n    public static String copyValueOf(char data[], int offset, int count) {\n        return new String(data, offset, count);\n    }\n\n    /**\n     * Equivalent to {@link #valueOf(char[])}.\n     *\n     * @param   data   the character array.\n     * @return  a {@code String} that contains the characters of the\n     *          character array.\n     */\n    public static String copyValueOf(char data[]) {\n        return new String(data);\n    }\n\n    /**\n     * Returns the string representation of the {@code boolean} argument.\n     *\n     * @param   b   a {@code boolean}.\n     * @return  if the argument is {@code true}, a string equal to\n     *          {@code \"true\"} is returned; otherwise, a string equal to\n     *          {@code \"false\"} is returned.\n     */\n    public static String valueOf(boolean b) {\n        return b ? \"true\" : \"false\";\n    }\n\n    /**\n     * Returns the string representation of the {@code char}\n     * argument.\n     *\n     * @param   c   a {@code char}.\n     * @return  a string of length {@code 1} containing\n     *          as its single character the argument {@code c}.\n     */\n    public static String valueOf(char c) {\n        if (COMPACT_STRINGS \u0026\u0026 StringLatin1.canEncode(c)) {\n            return new String(StringLatin1.toBytes(c), LATIN1);\n        }\n        return new String(StringUTF16.toBytes(c), UTF16);\n    }\n\n    /**\n     * Returns the string representation of the {@code int} argument.\n     * \u003cp\u003e\n     * The representation is exactly the one returned by the\n     * {@code Integer.toString} method of one argument.\n     *\n     * @param   i   an {@code int}.\n     * @return  a string representation of the {@code int} argument.\n     * @see     java.lang.Integer#toString(int, int)\n     */\n    public static String valueOf(int i) {\n        return Integer.toString(i);\n    }\n\n    /**\n     * Returns the string representation of the {@code long} argument.\n     * \u003cp\u003e\n     * The representation is exactly the one returned by the\n     * {@code Long.toString} method of one argument.\n     *\n     * @param   l   a {@code long}.\n     * @return  a string representation of the {@code long} argument.\n     * @see     java.lang.Long#toString(long)\n     */\n    public static String valueOf(long l) {\n        return Long.toString(l);\n    }\n\n    /**\n     * Returns the string representation of the {@code float} argument.\n     * \u003cp\u003e\n     * The representation is exactly the one returned by the\n     * {@code Float.toString} method of one argument.\n     *\n     * @param   f   a {@code float}.\n     * @return  a string representation of the {@code float} argument.\n     * @see     java.lang.Float#toString(float)\n     */\n    public static String valueOf(float f) {\n        return Float.toString(f);\n    }\n\n    /**\n     * Returns the string representation of the {@code double} argument.\n     * \u003cp\u003e\n     * The representation is exactly the one returned by the\n     * {@code Double.toString} method of one argument.\n     *\n     * @param   d   a {@code double}.\n     * @return  a  string representation of the {@code double} argument.\n     * @see     java.lang.Double#toString(double)\n     */\n    public static String valueOf(double d) {\n        return Double.toString(d);\n    }\n\n    /**\n     * Returns a canonical representation for the string object.\n     * \u003cp\u003e\n     * A pool of strings, initially empty, is maintained privately by the\n     * class {@code String}.\n     * \u003cp\u003e\n     * When the intern method is invoked, if the pool already contains a\n     * string equal to this {@code String} object as determined by\n     * the {@link #equals(Object)} method, then the string from the pool is\n     * returned. Otherwise, this {@code String} object is added to the\n     * pool and a reference to this {@code String} object is returned.\n     * \u003cp\u003e\n     * It follows that for any two strings {@code s} and {@code t},\n     * {@code s.intern() \u003d\u003d t.intern()} is {@code true}\n     * if and only if {@code s.equals(t)} is {@code true}.\n     * \u003cp\u003e\n     * All literal strings and string-valued constant expressions are\n     * interned. String literals are defined in section 3.10.5 of the\n     * \u003ccite\u003eThe Java\u0026trade; Language Specification\u003c/cite\u003e.\n     *\n     * @return  a string that has the same contents as this string, but is\n     *          guaranteed to be from a pool of unique strings.\n     * @jls 3.10.5 String Literals\n     */\n    public native String intern();\n\n    /**\n     * Returns a string whose value is the concatenation of this\n     * string repeated {@code count} times.\n     * \u003cp\u003e\n     * If this string is empty or count is zero then the empty\n     * string is returned.\n     *\n     * @param   count number of times to repeat\n     *\n     * @return  A string composed of this string repeated\n     *          {@code count} times or the empty string if this\n     *          string is empty or count is zero\n     *\n     * @throws  IllegalArgumentException if the {@code count} is\n     *          negative.\n     *\n     * @since 11\n     */\n    public String repeat(int count) {\n        if (count \u003c 0) {\n            throw new IllegalArgumentException(\"count is negative: \" + count);\n        }\n        if (count \u003d\u003d 1) {\n            return this;\n        }\n        final int len \u003d value.length;\n        if (len \u003d\u003d 0 || count \u003d\u003d 0) {\n            return \"\";\n        }\n        if (len \u003d\u003d 1) {\n            final byte[] single \u003d new byte[count];\n            Arrays.fill(single, value[0]);\n            return new String(single, coder);\n        }\n        if (Integer.MAX_VALUE / count \u003c len) {\n            throw new OutOfMemoryError(\"Repeating \" + len + \" bytes String \" + count +\n                    \" times will produce a String exceeding maximum size.\");\n        }\n        final int limit \u003d len * count;\n        final byte[] multiple \u003d new byte[limit];\n        System.arraycopy(value, 0, multiple, 0, len);\n        int copied \u003d len;\n        for (; copied \u003c limit - copied; copied \u003c\u003c\u003d 1) {\n            System.arraycopy(multiple, 0, multiple, copied, copied);\n        }\n        System.arraycopy(multiple, 0, multiple, copied, limit - copied);\n        return new String(multiple, coder);\n    }\n\n    ////////////////////////////////////////////////////////////////\n\n    /**\n     * Copy character bytes from this string into dst starting at dstBegin.\n     * This method doesn\u0027t perform any range checking.\n     *\n     * Invoker guarantees: dst is in UTF16 (inflate itself for asb), if two\n     * coders are different, and dst is big enough (range check)\n     *\n     * @param dstBegin  the char index, not offset of byte[]\n     * @param coder     the coder of dst[]\n     */\n    void getBytes(byte dst[], int dstBegin, byte coder) {\n        if (coder() \u003d\u003d coder) {\n            System.arraycopy(value, 0, dst, dstBegin \u003c\u003c coder, value.length);\n        } else {    // this.coder \u003d\u003d LATIN \u0026\u0026 coder \u003d\u003d UTF16\n            StringLatin1.inflate(value, 0, dst, dstBegin, value.length);\n        }\n    }\n\n    /*\n     * Package private constructor. Trailing Void argument is there for\n     * disambiguating it against other (public) constructors.\n     *\n     * Stores the char[] value into a byte[] that each byte represents\n     * the8 low-order bits of the corresponding character, if the char[]\n     * contains only latin1 character. Or a byte[] that stores all\n     * characters in their byte sequences defined by the {@code StringUTF16}.\n     */\n    String(char[] value, int off, int len, Void sig) {\n        if (len \u003d\u003d 0) {\n            this.value \u003d \"\".value;\n            this.coder \u003d \"\".coder;\n            return;\n        }\n        if (COMPACT_STRINGS) {\n            byte[] val \u003d StringUTF16.compress(value, off, len);\n            if (val !\u003d null) {\n                this.value \u003d val;\n                this.coder \u003d LATIN1;\n                return;\n            }\n        }\n        this.coder \u003d UTF16;\n        this.value \u003d StringUTF16.toBytes(value, off, len);\n    }\n\n    /*\n     * Package private constructor. Trailing Void argument is there for\n     * disambiguating it against other (public) constructors.\n     */\n    String(AbstractStringBuilder asb, Void sig) {\n        byte[] val \u003d asb.getValue();\n        int length \u003d asb.length();\n        if (asb.isLatin1()) {\n            this.coder \u003d LATIN1;\n            this.value \u003d Arrays.copyOfRange(val, 0, length);\n        } else {\n            if (COMPACT_STRINGS) {\n                byte[] buf \u003d StringUTF16.compress(val, 0, length);\n                if (buf !\u003d null) {\n                    this.coder \u003d LATIN1;\n                    this.value \u003d buf;\n                    return;\n                }\n            }\n            this.coder \u003d UTF16;\n            this.value \u003d Arrays.copyOfRange(val, 0, length \u003c\u003c 1);\n        }\n    }\n\n   /*\n    * Package private constructor which shares value array for speed.\n    */\n    String(byte[] value, byte coder) {\n        this.value \u003d value;\n        this.coder \u003d coder;\n    }\n\n    byte coder() {\n        return COMPACT_STRINGS ? coder : UTF16;\n    }\n\n    byte[] value() {\n        return value;\n    }\n\n    private boolean isLatin1() {\n        return COMPACT_STRINGS \u0026\u0026 coder \u003d\u003d LATIN1;\n    }\n\n    @Native static final byte LATIN1 \u003d 0;\n    @Native static final byte UTF16  \u003d 1;\n\n    /*\n     * StringIndexOutOfBoundsException  if {@code index} is\n     * negative or greater than or equal to {@code length}.\n     */\n    static void checkIndex(int index, int length) {\n        if (index \u003c 0 || index \u003e\u003d length) {\n            throw new StringIndexOutOfBoundsException(\"index \" + index +\n                                                      \",length \" + length);\n        }\n    }\n\n    /*\n     * StringIndexOutOfBoundsException  if {@code offset}\n     * is negative or greater than {@code length}.\n     */\n    static void checkOffset(int offset, int length) {\n        if (offset \u003c 0 || offset \u003e length) {\n            throw new StringIndexOutOfBoundsException(\"offset \" + offset +\n                                                      \",length \" + length);\n        }\n    }\n\n    /*\n     * Check {@code offset}, {@code count} against {@code 0} and {@code length}\n     * bounds.\n     *\n     * @throws  StringIndexOutOfBoundsException\n     *          If {@code offset} is negative, {@code count} is negative,\n     *          or {@code offset} is greater than {@code length - count}\n     */\n    static void checkBoundsOffCount(int offset, int count, int length) {\n        if (offset \u003c 0 || count \u003c 0 || offset \u003e length - count) {\n            throw new StringIndexOutOfBoundsException(\n                \"offset \" + offset + \", count \" + count + \", length \" + length);\n        }\n    }\n\n    /*\n     * Check {@code begin}, {@code end} against {@code 0} and {@code length}\n     * bounds.\n     *\n     * @throws  StringIndexOutOfBoundsException\n     *          If {@code begin} is negative, {@code begin} is greater than\n     *          {@code end}, or {@code end} is greater than {@code length}.\n     */\n    static void checkBoundsBeginEnd(int begin, int end, int length) {\n        if (begin \u003c 0 || begin \u003e end || end \u003e length) {\n            throw new StringIndexOutOfBoundsException(\n                \"begin \" + begin + \", end \" + end + \", length \" + length);\n        }\n    }\n\n    /**\n     * Returns the string representation of the {@code codePoint}\n     * argument.\n     *\n     * @param   codePoint a {@code codePoint}.\n     * @return  a string of length {@code 1} or {@code 2} containing\n     *          as its single character the argument {@code codePoint}.\n     * @throws IllegalArgumentException if the specified\n     *          {@code codePoint} is not a {@linkplain Character#isValidCodePoint\n     *          valid Unicode code point}.\n     */\n    static String valueOfCodePoint(int codePoint) {\n        if (COMPACT_STRINGS \u0026\u0026 StringLatin1.canEncode(codePoint)) {\n            return new String(StringLatin1.toBytes((char)codePoint), LATIN1);\n        } else if (Character.isBmpCodePoint(codePoint)) {\n            return new String(StringUTF16.toBytes((char)codePoint), UTF16);\n        } else if (Character.isSupplementaryCodePoint(codePoint)) {\n            return new String(StringUTF16.toBytesSupplementary(codePoint), UTF16);\n        }\n\n        throw new IllegalArgumentException(\n            format(\"Not a valid Unicode code point: 0x%X\", codePoint));\n    }\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at jdk.internal.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/String.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:741)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:738)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:366)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 15 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/String.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

6åé 16, 2024 11:19:24 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
åxçê: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/String.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/String.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:741)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:738)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:385)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/String.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.06.16 23:19:29 INFO  compiling root (13 scala sources)
2024.06.16 23:19:29 INFO  time: compiled root in 0.22s
6åé 16, 2024 11:20:40 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 12796
6åé 16, 2024 11:21:00 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 12943
6åé 16, 2024 11:21:12 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 13033
2024.06.16 23:22:53 INFO  no build target found for /scala/util/Try.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.16 23:23:04 INFO  compiling root (13 scala sources)
2024.06.16 23:23:04 INFO  time: compiled root in 0.2s
6åé 16, 2024 11:54:52 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 13558
6åé 16, 2024 11:55:14 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 13617
6åé 16, 2024 11:55:35 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 13645
6åé 16, 2024 11:55:37 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 13654
6åé 16, 2024 11:55:38 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 13663
2024.06.16 23:57:12 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.16 23:57:13 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
6åé 16, 2024 11:59:16 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 13705
6åé 17, 2024 12:00:51 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 14188
2024.06.17 00:01:32 INFO  compiling root (13 scala sources)
2024.06.17 00:01:35 INFO  time: compiled root in 3.46s
2024.06.17 00:01:37 INFO  compiling root (13 scala sources)
2024.06.17 00:01:37 INFO  time: compiled root in 0.17s
2024.06.17 00:01:42 INFO  compiling root (13 scala sources)
2024.06.17 00:01:42 INFO  time: compiled root in 0.2s
2024.06.17 00:03:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.17 00:13:48 INFO  compiling root (14 scala sources)
2024.06.17 00:13:48 INFO  time: compiled root in 0.23s
6åé 17, 2024 12:15:58 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 15404
6åé 17, 2024 12:16:15 åﬂëO scala.meta.internal.pc.CompilerAccess handleError
èdëÂ: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\sakai\Developments\exam-manager\.metals\.reports\metals-full\2024-06-17\r_compiler-error_(root)_00-16-15-760.md
2024.06.17 00:17:21 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\valueObject\SubjectRequestConverter.scala
scala.meta.tokenizers.TokenizeException: <input>:12: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
                case _ => Left(s"Invalid subject: $")
                                 ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:656)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:364)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:383)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.17 00:17:23 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\valueObject\SubjectRequestConverter.scala
scala.meta.tokenizers.TokenizeException: <input>:12: error: invalid unquote: `$'ident, `$'BlockExpr, `$'this or `$'_ expected
                case _ => Left(s"Invalid subject: $val")
                                                   ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.$anonfun$getStringPart$1(LegacyScanner.scala:601)
	at scala.meta.internal.tokenizers.LegacyScanner.$anonfun$getStringPart$1$adapted(LegacyScanner.scala:597)
	at scala.meta.internal.tokenizers.LegacyTokenData.$anonfun$setIdentifier$1(LegacyTokenData.scala:114)
	at scala.runtime.java8.JFunction1$mcVI$sp.apply(JFunction1$mcVI$sp.scala:18)
	at scala.Option.foreach(Option.scala:437)
	at scala.meta.internal.tokenizers.LegacyTokenData.setIdentifier(LegacyTokenData.scala:105)
	at scala.meta.internal.tokenizers.LegacyTokenData.setIdentifier$(LegacyTokenData.scala:99)
	at scala.meta.internal.tokenizers.LegacyScanner$$anon$2.setIdentifier(LegacyScanner.scala:18)
	at scala.meta.internal.tokenizers.LegacyScanner.identifier$1(LegacyScanner.scala:597)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:651)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:364)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:383)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 17, 2024 12:17:23 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 15743
2024.06.17 00:18:04 INFO  compiling root (14 scala sources)
2024.06.17 00:18:04 INFO  time: compiled root in 0.41s
6åé 17, 2024 12:18:25 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 16019
6åé 17, 2024 12:19:33 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 16183
2024.06.17 00:20:30 ERROR scalafmt: C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\entity\ExamResultRequestConverter.scala:15: error: [dialect scala213] illegal start of simple expression
        }
        ^
2024.06.17 00:20:30 INFO  compiling root (14 scala sources)
2024.06.17 00:20:30 INFO  time: compiled root in 0.17s
2024.06.17 00:22:08 INFO  compiling root (14 scala sources)
2024.06.17 00:22:08 INFO  time: compiled root in 0.55s
2024.06.17 00:22:35 INFO  compiling root (14 scala sources)
2024.06.17 00:22:35 INFO  time: compiled root in 0.46s
6åé 17, 2024 12:23:04 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 17187
6åé 17, 2024 12:23:12 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 17234
2024.06.17 00:23:15 INFO  compiling root (14 scala sources)
2024.06.17 00:23:15 INFO  time: compiled root in 0.48s
6åé 17, 2024 12:23:17 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 17272
6åé 17, 2024 12:23:18 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 17280
6åé 17, 2024 12:23:19 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 17288
6åé 17, 2024 12:23:20 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 17296
6åé 17, 2024 12:23:22 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 17305
6åé 17, 2024 12:23:22 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 17313
6åé 17, 2024 12:23:24 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 17321
6åé 17, 2024 12:27:32 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 17356
6åé 17, 2024 12:27:33 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 17364
2024.06.17 00:27:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.17 00:27:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.17 00:28:48 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.17 21:43:24 INFO  Started: Metals version 1.3.1 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.0.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@9171aaf]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@7b42a089]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@9171aaf]
2024.06.17 21:43:29 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.17 21:43:30 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\valueObject\SubjectRequestConverter.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.17 21:43:30 INFO  Attempting to connect to the build server...
2024.06.17 21:43:47 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.17 21:43:47 INFO  Attempting to connect to the build server...
2024.06.17 21:43:47 INFO  Attempting to connect to the build server...
2024.06.17 21:43:47 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.17 21:43:47 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.17 21:43:47 INFO  time: Connected to build server in 17s
2024.06.17 21:43:47 INFO  Connected to Build server: Bloop v1.5.17
2024.06.17 21:43:48 INFO  time: Imported build in 0.61s
2024.06.17 21:45:46 INFO  time: indexed workspace in 1m57s
2024.06.17 21:45:47 INFO  compiling root (14 scala sources)
2024.06.17 21:45:51 INFO  time: compiled root in 4.03s
2024.06.17 21:45:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:45:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:45:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:45:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:45:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:46:03 INFO  compiling root (14 scala sources)
2024.06.17 21:46:04 INFO  time: compiled root in 1.23s
2024.06.17 21:46:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:49:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:49:55 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.17 21:50:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:50:45 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:50:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:20 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:20 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:22 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:23 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:30 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:51:31 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:05 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:08 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:10 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:12 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:13 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:14 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:15 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 17, 2024 9:58:19 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 289
2024.06.17 21:58:20 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:23 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:30 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:30 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:32 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:32 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:35 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:36 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:36 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:36 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 17, 2024 9:58:37 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 426
2024.06.17 21:58:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:38 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 17, 2024 9:58:38 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 436
2024.06.17 21:58:38 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:39 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:40 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:41 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:41 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:41 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:44 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:44 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:46 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:46 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:47 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:48 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:48 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:49 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:49 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:54 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:55 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:58:55 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:04 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:06 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:08 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:12 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 21:59:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:35 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:38 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:40 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:42 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:47 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:47 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:49 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:49 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:51 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:51 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:54 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:55 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:56 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:57 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:04:56 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:01 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:03 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:04 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:05 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:05 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:06 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:08 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:10 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:12 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:14 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:14 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:15 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:20 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:22 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:23 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:23 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:30 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:30 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:31 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:32 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:32 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:35 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:36 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:38 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:40 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:42 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:42 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:44 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:45 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:45 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:46 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:46 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:47 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:47 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:48 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:49 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:51 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:55 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:55 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:55 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:57 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:05:59 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:00 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:01 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:04 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:04 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:05 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:06 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:08 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:13 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:13 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:20 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:23 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:29 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
scala.meta.tokenizers.TokenizeException: <input>:15: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
        case _ => Left(s"Invalid subject: $") 
                         ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:656)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:364)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:383)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.17 22:06:31 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:32 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:32 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:35 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:36 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:36 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:38 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:38 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:39 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:40 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:41 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 17, 2024 10:06:41 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1564
2024.06.17 22:06:42 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:42 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:42 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:44 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:45 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:46 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:46 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:48 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:48 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:49 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:49 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:51 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:51 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:54 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:55 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:56 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:57 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:06:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:07:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:07:03 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:07:04 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:07:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:07:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:07:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:07:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:07:12 INFO  compiling root (14 scala sources)
2024.06.17 22:07:12 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:07:13 INFO  time: compiled root in 1.33s
2024.06.17 22:07:13 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:07:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.17 22:07:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
6åé 17, 2024 10:07:33 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1726
6åé 17, 2024 10:07:47 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1739
6åé 17, 2024 10:07:48 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1746
6åé 17, 2024 10:08:18 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1754
2024.06.17 22:08:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:08:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 22:08:35 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:28:58 INFO  Started: Metals version 1.3.1 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.0.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@9c3d7df]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@6707ae13]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@9c3d7df]
2024.06.17 23:29:02 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.17 23:29:04 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\valueObject\SubjectRequestConverter.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.17 23:29:04 INFO  Attempting to connect to the build server...
2024.06.17 23:29:10 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\valueObject\SubjectRequestConverter.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.17 23:29:11 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.17 23:29:11 INFO  Attempting to connect to the build server...
2024.06.17 23:29:11 INFO  Attempting to connect to the build server...
2024.06.17 23:29:11 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.17 23:29:11 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.17 23:29:11 INFO  time: Connected to build server in 7.42s
2024.06.17 23:29:11 INFO  Connected to Build server: Bloop v1.5.17
2024.06.17 23:29:12 INFO  time: Imported build in 0.56s
2024.06.17 23:29:16 INFO  compiling root (14 scala sources)
2024.06.17 23:29:23 INFO  time: compiled root in 7.16s
2024.06.17 23:30:46 INFO  time: indexed workspace in 1m34s
2024.06.17 23:30:51 INFO  compiling root (14 scala sources)
2024.06.17 23:30:53 INFO  time: compiled root in 1.94s
2024.06.17 23:30:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:30:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:30:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:30:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:30:53 INFO  compiling root (14 scala sources)
2024.06.17 23:30:54 INFO  time: compiled root in 1.71s
2024.06.17 23:35:25 INFO  compiling root (14 scala sources)
2024.06.17 23:35:27 INFO  time: compiled root in 1.37s
6åé 17, 2024 11:36:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 142
6åé 17, 2024 11:36:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 144
2024.06.17 23:36:15 INFO  compiling root (14 scala sources)
2024.06.17 23:36:15 INFO  time: compiled root in 0.79s
2024.06.17 23:38:59 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:39:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:39:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:39:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:39:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:39:55 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:40:00 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:40:00 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:40:01 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:40:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 17, 2024 11:40:04 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 480
2024.06.17 23:40:11 INFO  compiling root (14 scala sources)
2024.06.17 23:40:11 INFO  time: compiled root in 0.81s
2024.06.17 23:40:15 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:40:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:40:19 INFO  compiling root (14 scala sources)
2024.06.17 23:40:19 INFO  time: compiled root in 0.72s
2024.06.17 23:40:20 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 17, 2024 11:40:22 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 542
6åé 17, 2024 11:40:43 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 656
6åé 17, 2024 11:40:43 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 654
6åé 17, 2024 11:40:43 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 659
6åé 17, 2024 11:41:22 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 978
6åé 17, 2024 11:41:44 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1160
6åé 17, 2024 11:41:49 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1212
2024.06.17 23:41:57 INFO  compiling root (15 scala sources)
2024.06.17 23:41:57 INFO  time: compiled root in 0.83s
2024.06.17 23:42:34 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\valueObject\ScoreRequestConverter.scala
scala.meta.tokenizers.TokenizeException: <input>:13: error: unclosed string literal
          Left("Score must be between 
               ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:560)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:379)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:383)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.17 23:42:35 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\valueObject\ScoreRequestConverter.scala
scala.meta.tokenizers.TokenizeException: <input>:13: error: unclosed string literal
          Left("Score must b
               ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:560)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:379)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:383)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.17 23:42:35 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\valueObject\ScoreRequestConverter.scala
scala.meta.tokenizers.TokenizeException: <input>:13: error: unclosed string literal
          Left("Sc
               ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:560)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:379)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:383)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 17, 2024 11:42:36 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1403
6åé 17, 2024 11:42:55 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1513
2024.06.17 23:43:05 INFO  compiling root (15 scala sources)
2024.06.17 23:43:05 INFO  time: compiled root in 0.68s
2024.06.17 23:46:39 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/String.java

Uri: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/String.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:741)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:738)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:724)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:296)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:749)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

6åé 17, 2024 11:46:39 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
åxçê: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/String.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2018, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\n\npackage java.lang;\n\nimport java.io.ObjectStreamField;\nimport java.io.UnsupportedEncodingException;\nimport java.lang.annotation.Native;\nimport java.nio.charset.Charset;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.Formatter;\nimport java.util.Locale;\nimport java.util.Objects;\nimport java.util.Spliterator;\nimport java.util.StringJoiner;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.util.regex.PatternSyntaxException;\nimport java.util.stream.IntStream;\nimport java.util.stream.Stream;\nimport java.util.stream.StreamSupport;\nimport jdk.internal.HotSpotIntrinsicCandidate;\nimport jdk.internal.vm.annotation.Stable;\n\n/**\n * The {@code String} class represents character strings. All\n * string literals in Java programs, such as {@code \"abc\"}, are\n * implemented as instances of this class.\n * \u003cp\u003e\n * Strings are constant; their values cannot be changed after they\n * are created. String buffers support mutable strings.\n * Because String objects are immutable they can be shared. For example:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     String str \u003d \"abc\";\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003cp\u003e\n * is equivalent to:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     char data[] \u003d {\u0027a\u0027, \u0027b\u0027, \u0027c\u0027};\n *     String str \u003d new String(data);\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003cp\u003e\n * Here are some more examples of how strings can be used:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     System.out.println(\"abc\");\n *     String cde \u003d \"cde\";\n *     System.out.println(\"abc\" + cde);\n *     String c \u003d \"abc\".substring(2,3);\n *     String d \u003d cde.substring(1, 2);\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The class {@code String} includes methods for examining\n * individual characters of the sequence, for comparing strings, for\n * searching strings, for extracting substrings, and for creating a\n * copy of a string with all characters translated to uppercase or to\n * lowercase. Case mapping is based on the Unicode Standard version\n * specified by the {@link java.lang.Character Character} class.\n * \u003cp\u003e\n * The Java language provides special support for the string\n * concatenation operator (\u0026nbsp;+\u0026nbsp;), and for conversion of\n * other objects to strings. For additional information on string\n * concatenation and conversion, see \u003ci\u003eThe Java\u0026trade; Language Specification\u003c/i\u003e.\n *\n * \u003cp\u003e Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * \u003cp\u003eA {@code String} represents a string in the UTF-16 format\n * in which \u003cem\u003esupplementary characters\u003c/em\u003e are represented by \u003cem\u003esurrogate\n * pairs\u003c/em\u003e (see the section \u003ca href\u003d\"Character.html#unicode\"\u003eUnicode\n * Character Representations\u003c/a\u003e in the {@code Character} class for\n * more information).\n * Index values refer to {@code char} code units, so a supplementary\n * character uses two positions in a {@code String}.\n * \u003cp\u003eThe {@code String} class provides methods for dealing with\n * Unicode code points (i.e., characters), in addition to those for\n * dealing with Unicode code units (i.e., {@code char} values).\n *\n * \u003cp\u003eUnless otherwise noted, methods for comparing Strings do not take locale\n * into account.  The {@link java.text.Collator} class provides methods for\n * finer-grain, locale-sensitive String comparison.\n *\n * @implNote The implementation of the string concatenation operator is left to\n * the discretion of a Java compiler, as long as the compiler ultimately conforms\n * to \u003ci\u003eThe Java\u0026trade; Language Specification\u003c/i\u003e. For example, the {@code javac} compiler\n * may implement the operator with {@code StringBuffer}, {@code StringBuilder},\n * or {@code java.lang.invoke.StringConcatFactory} depending on the JDK version. The\n * implementation of string conversion is typically through the method {@code toString},\n * defined by {@code Object} and inherited by all classes in Java.\n *\n * @author  Lee Boynton\n * @author  Arthur van Hoff\n * @author  Martin Buchholz\n * @author  Ulf Zibis\n * @see     java.lang.Object#toString()\n * @see     java.lang.StringBuffer\n * @see     java.lang.StringBuilder\n * @see     java.nio.charset.Charset\n * @since   1.0\n * @jls     15.18.1 String Concatenation Operator +\n */\n\npublic final class String\n    implements java.io.Serializable, Comparable\u003cString\u003e, CharSequence {\n\n    /**\n     * The value is used for character storage.\n     *\n     * @implNote This field is trusted by the VM, and is a subject to\n     * constant folding if String instance is constant. Overwriting this\n     * field after construction will cause problems.\n     *\n     * Additionally, it is marked with {@link Stable} to trust the contents\n     * of the array. No other facility in JDK provides this functionality (yet).\n     * {@link Stable} is safe here, because value is never null.\n     */\n    @Stable\n    private final byte[] value;\n\n    /**\n     * The identifier of the encoding used to encode the bytes in\n     * {@code value}. The supported values in this implementation are\n     *\n     * LATIN1\n     * UTF16\n     *\n     * @implNote This field is trusted by the VM, and is a subject to\n     * constant folding if String instance is constant. Overwriting this\n     * field after construction will cause problems.\n     */\n    private final byte coder;\n\n    /** Cache the hash code for the string */\n    private int hash; // Default to 0\n\n    /** use serialVersionUID from JDK 1.0.2 for interoperability */\n    private static final long serialVersionUID \u003d -6849794470754667710L;\n\n    /**\n     * If String compaction is disabled, the bytes in {@code value} are\n     * always encoded in UTF16.\n     *\n     * For methods with several possible implementation paths, when String\n     * compaction is disabled, only one code path is taken.\n     *\n     * The instance field value is generally opaque to optimizing JIT\n     * compilers. Therefore, in performance-sensitive place, an explicit\n     * check of the static boolean {@code COMPACT_STRINGS} is done first\n     * before checking the {@code coder} field since the static boolean\n     * {@code COMPACT_STRINGS} would be constant folded away by an\n     * optimizing JIT compiler. The idioms for these cases are as follows.\n     *\n     * For code such as:\n     *\n     *    if (coder \u003d\u003d LATIN1) { ... }\n     *\n     * can be written more optimally as\n     *\n     *    if (coder() \u003d\u003d LATIN1) { ... }\n     *\n     * or:\n     *\n     *    if (COMPACT_STRINGS \u0026\u0026 coder \u003d\u003d LATIN1) { ... }\n     *\n     * An optimizing JIT compiler can fold the above conditional as:\n     *\n     *    COMPACT_STRINGS \u003d\u003d true  \u003d\u003e if (coder \u003d\u003d LATIN1) { ... }\n     *    COMPACT_STRINGS \u003d\u003d false \u003d\u003e if (false)           { ... }\n     *\n     * @implNote\n     * The actual value for this field is injected by JVM. The static\n     * initialization block is used to set the value here to communicate\n     * that this static final field is not statically foldable, and to\n     * avoid any possible circular dependency during vm initialization.\n     */\n    static final boolean COMPACT_STRINGS;\n\n    static {\n        COMPACT_STRINGS \u003d true;\n    }\n\n    /**\n     * Class String is special cased within the Serialization Stream Protocol.\n     *\n     * A String instance is written into an ObjectOutputStream according to\n     * \u003ca href\u003d\"{@docRoot}/../specs/serialization/protocol.html#stream-elements\"\u003e\n     * Object Serialization Specification, Section 6.2, \"Stream Elements\"\u003c/a\u003e\n     */\n    private static final ObjectStreamField[] serialPersistentFields \u003d\n        new ObjectStreamField[0];\n\n    /**\n     * Initializes a newly created {@code String} object so that it represents\n     * an empty character sequence.  Note that use of this constructor is\n     * unnecessary since Strings are immutable.\n     */\n    public String() {\n        this.value \u003d \"\".value;\n        this.coder \u003d \"\".coder;\n    }\n\n    /**\n     * Initializes a newly created {@code String} object so that it represents\n     * the same sequence of characters as the argument; in other words, the\n     * newly created string is a copy of the argument string. Unless an\n     * explicit copy of {@code original} is needed, use of this constructor is\n     * unnecessary since Strings are immutable.\n     *\n     * @param  original\n     *         A {@code String}\n     */\n    @HotSpotIntrinsicCandidate\n    public String(String original) {\n        this.value \u003d original.value;\n        this.coder \u003d original.coder;\n        this.hash \u003d original.hash;\n    }\n\n    /**\n     * Allocates a new {@code String} so that it represents the sequence of\n     * characters currently contained in the character array argument. The\n     * contents of the character array are copied; subsequent modification of\n     * the character array does not affect the newly created string.\n     *\n     * @param  value\n     *         The initial value of the string\n     */\n    public String(char value[]) {\n        this(value, 0, value.length, null);\n    }\n\n    /**\n     * Allocates a new {@code String} that contains characters from a subarray\n     * of the character array argument. The {@code offset} argument is the\n     * index of the first character of the subarray and the {@code count}\n     * argument specifies the length of the subarray. The contents of the\n     * subarray are copied; subsequent modification of the character array does\n     * not affect the newly created string.\n     *\n     * @param  value\n     *         Array that is the source of characters\n     *\n     * @param  offset\n     *         The initial offset\n     *\n     * @param  count\n     *         The length\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If {@code offset} is negative, {@code count} is negative, or\n     *          {@code offset} is greater than {@code value.length - count}\n     */\n    public String(char value[], int offset, int count) {\n        this(value, offset, count, rangeCheck(value, offset, count));\n    }\n\n    private static Void rangeCheck(char[] value, int offset, int count) {\n        checkBoundsOffCount(offset, count, value.length);\n        return null;\n    }\n\n    /**\n     * Allocates a new {@code String} that contains characters from a subarray\n     * of the \u003ca href\u003d\"Character.html#unicode\"\u003eUnicode code point\u003c/a\u003e array\n     * argument.  The {@code offset} argument is the index of the first code\n     * point of the subarray and the {@code count} argument specifies the\n     * length of the subarray.  The contents of the subarray are converted to\n     * {@code char}s; subsequent modification of the {@code int} array does not\n     * affect the newly created string.\n     *\n     * @param  codePoints\n     *         Array that is the source of Unicode code points\n     *\n     * @param  offset\n     *         The initial offset\n     *\n     * @param  count\n     *         The length\n     *\n     * @throws  IllegalArgumentException\n     *          If any invalid Unicode code point is found in {@code\n     *          codePoints}\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If {@code offset} is negative, {@code count} is negative, or\n     *          {@code offset} is greater than {@code codePoints.length - count}\n     *\n     * @since  1.5\n     */\n    public String(int[] codePoints, int offset, int count) {\n        checkBoundsOffCount(offset, count, codePoints.length);\n        if (count \u003d\u003d 0) {\n            this.value \u003d \"\".value;\n            this.coder \u003d \"\".coder;\n            return;\n        }\n        if (COMPACT_STRINGS) {\n            byte[] val \u003d StringLatin1.toBytes(codePoints, offset, count);\n            if (val !\u003d null) {\n                this.coder \u003d LATIN1;\n                this.value \u003d val;\n                return;\n            }\n        }\n        this.coder \u003d UTF16;\n        this.value \u003d StringUTF16.toBytes(codePoints, offset, count);\n    }\n\n    /**\n     * Allocates a new {@code String} constructed from a subarray of an array\n     * of 8-bit integer values.\n     *\n     * \u003cp\u003e The {@code offset} argument is the index of the first byte of the\n     * subarray, and the {@code count} argument specifies the length of the\n     * subarray.\n     *\n     * \u003cp\u003e Each {@code byte} in the subarray is converted to a {@code char} as\n     * specified in the {@link #String(byte[],int) String(byte[],int)} constructor.\n     *\n     * @deprecated This method does not properly convert bytes into characters.\n     * As of JDK\u0026nbsp;1.1, the preferred way to do this is via the\n     * {@code String} constructors that take a {@link\n     * java.nio.charset.Charset}, charset name, or that use the platform\u0027s\n     * default charset.\n     *\n     * @param  ascii\n     *         The bytes to be converted to characters\n     *\n     * @param  hibyte\n     *         The top 8 bits of each 16-bit Unicode code unit\n     *\n     * @param  offset\n     *         The initial offset\n     * @param  count\n     *         The length\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If {@code offset} is negative, {@code count} is negative, or\n     *          {@code offset} is greater than {@code ascii.length - count}\n     *\n     * @see  #String(byte[], int)\n     * @see  #String(byte[], int, int, java.lang.String)\n     * @see  #String(byte[], int, int, java.nio.charset.Charset)\n     * @see  #String(byte[], int, int)\n     * @see  #String(byte[], java.lang.String)\n     * @see  #String(byte[], java.nio.charset.Charset)\n     * @see  #String(byte[])\n     */\n    @Deprecated(since\u003d\"1.1\")\n    public String(byte ascii[], int hibyte, int offset, int count) {\n        checkBoundsOffCount(offset, count, ascii.length);\n        if (count \u003d\u003d 0) {\n            this.value \u003d \"\".value;\n            this.coder \u003d \"\".coder;\n            return;\n        }\n        if (COMPACT_STRINGS \u0026\u0026 (byte)hibyte \u003d\u003d 0) {\n            this.value \u003d Arrays.copyOfRange(ascii, offset, offset + count);\n            this.coder \u003d LATIN1;\n        } else {\n            hibyte \u003c\u003c\u003d 8;\n            byte[] val \u003d StringUTF16.newBytesFor(count);\n            for (int i \u003d 0; i \u003c count; i++) {\n                StringUTF16.putChar(val, i, hibyte | (ascii[offset++] \u0026 0xff));\n            }\n            this.value \u003d val;\n            this.coder \u003d UTF16;\n        }\n    }\n\n    /**\n     * Allocates a new {@code String} containing characters constructed from\n     * an array of 8-bit integer values. Each character \u003ci\u003ec\u003c/i\u003e in the\n     * resulting string is constructed from the corresponding component\n     * \u003ci\u003eb\u003c/i\u003e in the byte array such that:\n     *\n     * \u003cblockquote\u003e\u003cpre\u003e\n     *     \u003cb\u003e\u003ci\u003ec\u003c/i\u003e\u003c/b\u003e \u003d\u003d (char)(((hibyte \u0026amp; 0xff) \u0026lt;\u0026lt; 8)\n     *                         | (\u003cb\u003e\u003ci\u003eb\u003c/i\u003e\u003c/b\u003e \u0026amp; 0xff))\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @deprecated  This method does not properly convert bytes into\n     * characters.  As of JDK\u0026nbsp;1.1, the preferred way to do this is via the\n     * {@code String} constructors that take a {@link\n     * java.nio.charset.Charset}, charset name, or that use the platform\u0027s\n     * default charset.\n     *\n     * @param  ascii\n     *         The bytes to be converted to characters\n     *\n     * @param  hibyte\n     *         The top 8 bits of each 16-bit Unicode code unit\n     *\n     * @see  #String(byte[], int, int, java.lang.String)\n     * @see  #String(byte[], int, int, java.nio.charset.Charset)\n     * @see  #String(byte[], int, int)\n     * @see  #String(byte[], java.lang.String)\n     * @see  #String(byte[], java.nio.charset.Charset)\n     * @see  #String(byte[])\n     */\n    @Deprecated(since\u003d\"1.1\")\n    public String(byte ascii[], int hibyte) {\n        this(ascii, hibyte, 0, ascii.length);\n    }\n\n    /**\n     * Constructs a new {@code String} by decoding the specified subarray of\n     * bytes using the specified charset.  The length of the new {@code String}\n     * is a function of the charset, and hence may not be equal to the length\n     * of the subarray.\n     *\n     * \u003cp\u003e The behavior of this constructor when the given bytes are not valid\n     * in the given charset is unspecified.  The {@link\n     * java.nio.charset.CharsetDecoder} class should be used when more control\n     * over the decoding process is required.\n     *\n     * @param  bytes\n     *         The bytes to be decoded into characters\n     *\n     * @param  offset\n     *         The index of the first byte to decode\n     *\n     * @param  length\n     *         The number of bytes to decode\n\n     * @param  charsetName\n     *         The name of a supported {@linkplain java.nio.charset.Charset\n     *         charset}\n     *\n     * @throws  UnsupportedEncodingException\n     *          If the named charset is not supported\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If {@code offset} is negative, {@code length} is negative, or\n     *          {@code offset} is greater than {@code bytes.length - length}\n     *\n     * @since  1.1\n     */\n    public String(byte bytes[], int offset, int length, String charsetName)\n            throws UnsupportedEncodingException {\n        if (charsetName \u003d\u003d null)\n            throw new NullPointerException(\"charsetName\");\n        checkBoundsOffCount(offset, length, bytes.length);\n        StringCoding.Result ret \u003d\n            StringCoding.decode(charsetName, bytes, offset, length);\n        this.value \u003d ret.value;\n        this.coder \u003d ret.coder;\n    }\n\n    /**\n     * Constructs a new {@code String} by decoding the specified subarray of\n     * bytes using the specified {@linkplain java.nio.charset.Charset charset}.\n     * The length of the new {@code String} is a function of the charset, and\n     * hence may not be equal to the length of the subarray.\n     *\n     * \u003cp\u003e This method always replaces malformed-input and unmappable-character\n     * sequences with this charset\u0027s default replacement string.  The {@link\n     * java.nio.charset.CharsetDecoder} class should be used when more control\n     * over the decoding process is required.\n     *\n     * @param  bytes\n     *         The bytes to be decoded into characters\n     *\n     * @param  offset\n     *         The index of the first byte to decode\n     *\n     * @param  length\n     *         The number of bytes to decode\n     *\n     * @param  charset\n     *         The {@linkplain java.nio.charset.Charset charset} to be used to\n     *         decode the {@code bytes}\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If {@code offset} is negative, {@code length} is negative, or\n     *          {@code offset} is greater than {@code bytes.length - length}\n     *\n     * @since  1.6\n     */\n    public String(byte bytes[], int offset, int length, Charset charset) {\n        if (charset \u003d\u003d null)\n            throw new NullPointerException(\"charset\");\n        checkBoundsOffCount(offset, length, bytes.length);\n        StringCoding.Result ret \u003d\n            StringCoding.decode(charset, bytes, offset, length);\n        this.value \u003d ret.value;\n        this.coder \u003d ret.coder;\n    }\n\n    /**\n     * Constructs a new {@code String} by decoding the specified array of bytes\n     * using the specified {@linkplain java.nio.charset.Charset charset}.  The\n     * length of the new {@code String} is a function of the charset, and hence\n     * may not be equal to the length of the byte array.\n     *\n     * \u003cp\u003e The behavior of this constructor when the given bytes are not valid\n     * in the given charset is unspecified.  The {@link\n     * java.nio.charset.CharsetDecoder} class should be used when more control\n     * over the decoding process is required.\n     *\n     * @param  bytes\n     *         The bytes to be decoded into characters\n     *\n     * @param  charsetName\n     *         The name of a supported {@linkplain java.nio.charset.Charset\n     *         charset}\n     *\n     * @throws  UnsupportedEncodingException\n     *          If the named charset is not supported\n     *\n     * @since  1.1\n     */\n    public String(byte bytes[], String charsetName)\n            throws UnsupportedEncodingException {\n        this(bytes, 0, bytes.length, charsetName);\n    }\n\n    /**\n     * Constructs a new {@code String} by decoding the specified array of\n     * bytes using the specified {@linkplain java.nio.charset.Charset charset}.\n     * The length of the new {@code String} is a function of the charset, and\n     * hence may not be equal to the length of the byte array.\n     *\n     * \u003cp\u003e This method always replaces malformed-input and unmappable-character\n     * sequences with this charset\u0027s default replacement string.  The {@link\n     * java.nio.charset.CharsetDecoder} class should be used when more control\n     * over the decoding process is required.\n     *\n     * @param  bytes\n     *         The bytes to be decoded into characters\n     *\n     * @param  charset\n     *         The {@linkplain java.nio.charset.Charset charset} to be used to\n     *         decode the {@code bytes}\n     *\n     * @since  1.6\n     */\n    public String(byte bytes[], Charset charset) {\n        this(bytes, 0, bytes.length, charset);\n    }\n\n    /**\n     * Constructs a new {@code String} by decoding the specified subarray of\n     * bytes using the platform\u0027s default charset.  The length of the new\n     * {@code String} is a function of the charset, and hence may not be equal\n     * to the length of the subarray.\n     *\n     * \u003cp\u003e The behavior of this constructor when the given bytes are not valid\n     * in the default charset is unspecified.  The {@link\n     * java.nio.charset.CharsetDecoder} class should be used when more control\n     * over the decoding process is required.\n     *\n     * @param  bytes\n     *         The bytes to be decoded into characters\n     *\n     * @param  offset\n     *         The index of the first byte to decode\n     *\n     * @param  length\n     *         The number of bytes to decode\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If {@code offset} is negative, {@code length} is negative, or\n     *          {@code offset} is greater than {@code bytes.length - length}\n     *\n     * @since  1.1\n     */\n    public String(byte bytes[], int offset, int length) {\n        checkBoundsOffCount(offset, length, bytes.length);\n        StringCoding.Result ret \u003d StringCoding.decode(bytes, offset, length);\n        this.value \u003d ret.value;\n        this.coder \u003d ret.coder;\n    }\n\n    /**\n     * Constructs a new {@code String} by decoding the specified array of bytes\n     * using the platform\u0027s default charset.  The length of the new {@code\n     * String} is a function of the charset, and hence may not be equal to the\n     * length of the byte array.\n     *\n     * \u003cp\u003e The behavior of this constructor when the given bytes are not valid\n     * in the default charset is unspecified.  The {@link\n     * java.nio.charset.CharsetDecoder} class should be used when more control\n     * over the decoding process is required.\n     *\n     * @param  bytes\n     *         The bytes to be decoded into characters\n     *\n     * @since  1.1\n     */\n    public String(byte[] bytes) {\n        this(bytes, 0, bytes.length);\n    }\n\n    /**\n     * Allocates a new string that contains the sequence of characters\n     * currently contained in the string buffer argument. The contents of the\n     * string buffer are copied; subsequent modification of the string buffer\n     * does not affect the newly created string.\n     *\n     * @param  buffer\n     *         A {@code StringBuffer}\n     */\n    public String(StringBuffer buffer) {\n        this(buffer.toString());\n    }\n\n    /**\n     * Allocates a new string that contains the sequence of characters\n     * currently contained in the string builder argument. The contents of the\n     * string builder are copied; subsequent modification of the string builder\n     * does not affect the newly created string.\n     *\n     * \u003cp\u003e This constructor is provided to ease migration to {@code\n     * StringBuilder}. Obtaining a string from a string builder via the {@code\n     * toString} method is likely to run faster and is generally preferred.\n     *\n     * @param   builder\n     *          A {@code StringBuilder}\n     *\n     * @since  1.5\n     */\n    public String(StringBuilder builder) {\n        this(builder, null);\n    }\n\n    /**\n     * Returns the length of this string.\n     * The length is equal to the number of \u003ca href\u003d\"Character.html#unicode\"\u003eUnicode\n     * code units\u003c/a\u003e in the string.\n     *\n     * @return  the length of the sequence of characters represented by this\n     *          object.\n     */\n    public int length() {\n        return value.length \u003e\u003e coder();\n    }\n\n    /**\n     * Returns {@code true} if, and only if, {@link #length()} is {@code 0}.\n     *\n     * @return {@code true} if {@link #length()} is {@code 0}, otherwise\n     * {@code false}\n     *\n     * @since 1.6\n     */\n    public boolean isEmpty() {\n        return value.length \u003d\u003d 0;\n    }\n\n    /**\n     * Returns the {@code char} value at the\n     * specified index. An index ranges from {@code 0} to\n     * {@code length() - 1}. The first {@code char} value of the sequence\n     * is at index {@code 0}, the next at index {@code 1},\n     * and so on, as for array indexing.\n     *\n     * \u003cp\u003eIf the {@code char} value specified by the index is a\n     * \u003ca href\u003d\"Character.html#unicode\"\u003esurrogate\u003c/a\u003e, the surrogate\n     * value is returned.\n     *\n     * @param      index   the index of the {@code char} value.\n     * @return     the {@code char} value at the specified index of this string.\n     *             The first {@code char} value is at index {@code 0}.\n     * @exception  IndexOutOfBoundsException  if the {@code index}\n     *             argument is negative or not less than the length of this\n     *             string.\n     */\n    public char charAt(int index) {\n        if (isLatin1()) {\n            return StringLatin1.charAt(value, index);\n        } else {\n            return StringUTF16.charAt(value, index);\n        }\n    }\n\n    /**\n     * Returns the character (Unicode code point) at the specified\n     * index. The index refers to {@code char} values\n     * (Unicode code units) and ranges from {@code 0} to\n     * {@link #length()}{@code  - 1}.\n     *\n     * \u003cp\u003e If the {@code char} value specified at the given index\n     * is in the high-surrogate range, the following index is less\n     * than the length of this {@code String}, and the\n     * {@code char} value at the following index is in the\n     * low-surrogate range, then the supplementary code point\n     * corresponding to this surrogate pair is returned. Otherwise,\n     * the {@code char} value at the given index is returned.\n     *\n     * @param      index the index to the {@code char} values\n     * @return     the code point value of the character at the\n     *             {@code index}\n     * @exception  IndexOutOfBoundsException  if the {@code index}\n     *             argument is negative or not less than the length of this\n     *             string.\n     * @since      1.5\n     */\n    public int codePointAt(int index) {\n        if (isLatin1()) {\n            checkIndex(index, value.length);\n            return value[index] \u0026 0xff;\n        }\n        int length \u003d value.length \u003e\u003e 1;\n        checkIndex(index, length);\n        return StringUTF16.codePointAt(value, index, length);\n    }\n\n    /**\n     * Returns the character (Unicode code point) before the specified\n     * index. The index refers to {@code char} values\n     * (Unicode code units) and ranges from {@code 1} to {@link\n     * CharSequence#length() length}.\n     *\n     * \u003cp\u003e If the {@code char} value at {@code (index - 1)}\n     * is in the low-surrogate range, {@code (index - 2)} is not\n     * negative, and the {@code char} value at {@code (index -\n     * 2)} is in the high-surrogate range, then the\n     * supplementary code point value of the surrogate pair is\n     * returned. If the {@code char} value at {@code index -\n     * 1} is an unpaired low-surrogate or a high-surrogate, the\n     * surrogate value is returned.\n     *\n     * @param     index the index following the code point that should be returned\n     * @return    the Unicode code point value before the given index.\n     * @exception IndexOutOfBoundsException if the {@code index}\n     *            argument is less than 1 or greater than the length\n     *            of this string.\n     * @since     1.5\n     */\n    public int codePointBefore(int index) {\n        int i \u003d index - 1;\n        if (i \u003c 0 || i \u003e\u003d length()) {\n            throw new StringIndexOutOfBoundsException(index);\n        }\n        if (isLatin1()) {\n            return (value[i] \u0026 0xff);\n        }\n        return StringUTF16.codePointBefore(value, index);\n    }\n\n    /**\n     * Returns the number of Unicode code points in the specified text\n     * range of this {@code String}. The text range begins at the\n     * specified {@code beginIndex} and extends to the\n     * {@code char} at index {@code endIndex - 1}. Thus the\n     * length (in {@code char}s) of the text range is\n     * {@code endIndex-beginIndex}. Unpaired surrogates within\n     * the text range count as one code point each.\n     *\n     * @param beginIndex the index to the first {@code char} of\n     * the text range.\n     * @param endIndex the index after the last {@code char} of\n     * the text range.\n     * @return the number of Unicode code points in the specified text\n     * range\n     * @exception IndexOutOfBoundsException if the\n     * {@code beginIndex} is negative, or {@code endIndex}\n     * is larger than the length of this {@code String}, or\n     * {@code beginIndex} is larger than {@code endIndex}.\n     * @since  1.5\n     */\n    public int codePointCount(int beginIndex, int endIndex) {\n        if (beginIndex \u003c 0 || beginIndex \u003e endIndex ||\n            endIndex \u003e length()) {\n            throw new IndexOutOfBoundsException();\n        }\n        if (isLatin1()) {\n            return endIndex - beginIndex;\n        }\n        return StringUTF16.codePointCount(value, beginIndex, endIndex);\n    }\n\n    /**\n     * Returns the index within this {@code String} that is\n     * offset from the given {@code index} by\n     * {@code codePointOffset} code points. Unpaired surrogates\n     * within the text range given by {@code index} and\n     * {@code codePointOffset} count as one code point each.\n     *\n     * @param index the index to be offset\n     * @param codePointOffset the offset in code points\n     * @return the index within this {@code String}\n     * @exception IndexOutOfBoundsException if {@code index}\n     *   is negative or larger then the length of this\n     *   {@code String}, or if {@code codePointOffset} is positive\n     *   and the substring starting with {@code index} has fewer\n     *   than {@code codePointOffset} code points,\n     *   or if {@code codePointOffset} is negative and the substring\n     *   before {@code index} has fewer than the absolute value\n     *   of {@code codePointOffset} code points.\n     * @since 1.5\n     */\n    public int offsetByCodePoints(int index, int codePointOffset) {\n        if (index \u003c 0 || index \u003e length()) {\n            throw new IndexOutOfBoundsException();\n        }\n        return Character.offsetByCodePoints(this, index, codePointOffset);\n    }\n\n    /**\n     * Copies characters from this string into the destination character\n     * array.\n     * \u003cp\u003e\n     * The first character to be copied is at index {@code srcBegin};\n     * the last character to be copied is at index {@code srcEnd-1}\n     * (thus the total number of characters to be copied is\n     * {@code srcEnd-srcBegin}). The characters are copied into the\n     * subarray of {@code dst} starting at index {@code dstBegin}\n     * and ending at index:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     *     dstBegin + (srcEnd-srcBegin) - 1\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @param      srcBegin   index of the first character in the string\n     *                        to copy.\n     * @param      srcEnd     index after the last character in the string\n     *                        to copy.\n     * @param      dst        the destination array.\n     * @param      dstBegin   the start offset in the destination array.\n     * @exception IndexOutOfBoundsException If any of the following\n     *            is true:\n     *            \u003cul\u003e\u003cli\u003e{@code srcBegin} is negative.\n     *            \u003cli\u003e{@code srcBegin} is greater than {@code srcEnd}\n     *            \u003cli\u003e{@code srcEnd} is greater than the length of this\n     *                string\n     *            \u003cli\u003e{@code dstBegin} is negative\n     *            \u003cli\u003e{@code dstBegin+(srcEnd-srcBegin)} is larger than\n     *                {@code dst.length}\u003c/ul\u003e\n     */\n    public void getChars(int srcBegin, int srcEnd, char dst[], int dstBegin) {\n        checkBoundsBeginEnd(srcBegin, srcEnd, length());\n        checkBoundsOffCount(dstBegin, srcEnd - srcBegin, dst.length);\n        if (isLatin1()) {\n            StringLatin1.getChars(value, srcBegin, srcEnd, dst, dstBegin);\n        } else {\n            StringUTF16.getChars(value, srcBegin, srcEnd, dst, dstBegin);\n        }\n    }\n\n    /**\n     * Copies characters from this string into the destination byte array. Each\n     * byte receives the 8 low-order bits of the corresponding character. The\n     * eight high-order bits of each character are not copied and do not\n     * participate in the transfer in any way.\n     *\n     * \u003cp\u003e The first character to be copied is at index {@code srcBegin}; the\n     * last character to be copied is at index {@code srcEnd-1}.  The total\n     * number of characters to be copied is {@code srcEnd-srcBegin}. The\n     * characters, converted to bytes, are copied into the subarray of {@code\n     * dst} starting at index {@code dstBegin} and ending at index:\n     *\n     * \u003cblockquote\u003e\u003cpre\u003e\n     *     dstBegin + (srcEnd-srcBegin) - 1\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @deprecated  This method does not properly convert characters into\n     * bytes.  As of JDK\u0026nbsp;1.1, the preferred way to do this is via the\n     * {@link #getBytes()} method, which uses the platform\u0027s default charset.\n     *\n     * @param  srcBegin\n     *         Index of the first character in the string to copy\n     *\n     * @param  srcEnd\n     *         Index after the last character in the string to copy\n     *\n     * @param  dst\n     *         The destination array\n     *\n     * @param  dstBegin\n     *         The start offset in the destination array\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If any of the following is true:\n     *          \u003cul\u003e\n     *            \u003cli\u003e {@code srcBegin} is negative\n     *            \u003cli\u003e {@code srcBegin} is greater than {@code srcEnd}\n     *            \u003cli\u003e {@code srcEnd} is greater than the length of this String\n     *            \u003cli\u003e {@code dstBegin} is negative\n     *            \u003cli\u003e {@code dstBegin+(srcEnd-srcBegin)} is larger than {@code\n     *                 dst.length}\n     *          \u003c/ul\u003e\n     */\n    @Deprecated(since\u003d\"1.1\")\n    public void getBytes(int srcBegin, int srcEnd, byte dst[], int dstBegin) {\n        checkBoundsBeginEnd(srcBegin, srcEnd, length());\n        Objects.requireNonNull(dst);\n        checkBoundsOffCount(dstBegin, srcEnd - srcBegin, dst.length);\n        if (isLatin1()) {\n            StringLatin1.getBytes(value, srcBegin, srcEnd, dst, dstBegin);\n        } else {\n            StringUTF16.getBytes(value, srcBegin, srcEnd, dst, dstBegin);\n        }\n    }\n\n    /**\n     * Encodes this {@code String} into a sequence of bytes using the named\n     * charset, storing the result into a new byte array.\n     *\n     * \u003cp\u003e The behavior of this method when this string cannot be encoded in\n     * the given charset is unspecified.  The {@link\n     * java.nio.charset.CharsetEncoder} class should be used when more control\n     * over the encoding process is required.\n     *\n     * @param  charsetName\n     *         The name of a supported {@linkplain java.nio.charset.Charset\n     *         charset}\n     *\n     * @return  The resultant byte array\n     *\n     * @throws  UnsupportedEncodingException\n     *          If the named charset is not supported\n     *\n     * @since  1.1\n     */\n    public byte[] getBytes(String charsetName)\n            throws UnsupportedEncodingException {\n        if (charsetName \u003d\u003d null) throw new NullPointerException();\n        return StringCoding.encode(charsetName, coder(), value);\n    }\n\n    /**\n     * Encodes this {@code String} into a sequence of bytes using the given\n     * {@linkplain java.nio.charset.Charset charset}, storing the result into a\n     * new byte array.\n     *\n     * \u003cp\u003e This method always replaces malformed-input and unmappable-character\n     * sequences with this charset\u0027s default replacement byte array.  The\n     * {@link java.nio.charset.CharsetEncoder} class should be used when more\n     * control over the encoding process is required.\n     *\n     * @param  charset\n     *         The {@linkplain java.nio.charset.Charset} to be used to encode\n     *         the {@code String}\n     *\n     * @return  The resultant byte array\n     *\n     * @since  1.6\n     */\n    public byte[] getBytes(Charset charset) {\n        if (charset \u003d\u003d null) throw new NullPointerException();\n        return StringCoding.encode(charset, coder(), value);\n     }\n\n    /**\n     * Encodes this {@code String} into a sequence of bytes using the\n     * platform\u0027s default charset, storing the result into a new byte array.\n     *\n     * \u003cp\u003e The behavior of this method when this string cannot be encoded in\n     * the default charset is unspecified.  The {@link\n     * java.nio.charset.CharsetEncoder} class should be used when more control\n     * over the encoding process is required.\n     *\n     * @return  The resultant byte array\n     *\n     * @since      1.1\n     */\n    public byte[] getBytes() {\n        return StringCoding.encode(coder(), value);\n    }\n\n    /**\n     * Compares this string to the specified object.  The result is {@code\n     * true} if and only if the argument is not {@code null} and is a {@code\n     * String} object that represents the same sequence of characters as this\n     * object.\n     *\n     * \u003cp\u003eFor finer-grained String comparison, refer to\n     * {@link java.text.Collator}.\n     *\n     * @param  anObject\n     *         The object to compare this {@code String} against\n     *\n     * @return  {@code true} if the given object represents a {@code String}\n     *          equivalent to this string, {@code false} otherwise\n     *\n     * @see  #compareTo(String)\n     * @see  #equalsIgnoreCase(String)\n     */\n    public boolean equals(Object anObject) {\n        if (this \u003d\u003d anObject) {\n            return true;\n        }\n        if (anObject instanceof String) {\n            String aString \u003d (String)anObject;\n            if (coder() \u003d\u003d aString.coder()) {\n                return isLatin1() ? StringLatin1.equals(value, aString.value)\n                                  : StringUTF16.equals(value, aString.value);\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Compares this string to the specified {@code StringBuffer}.  The result\n     * is {@code true} if and only if this {@code String} represents the same\n     * sequence of characters as the specified {@code StringBuffer}. This method\n     * synchronizes on the {@code StringBuffer}.\n     *\n     * \u003cp\u003eFor finer-grained String comparison, refer to\n     * {@link java.text.Collator}.\n     *\n     * @param  sb\n     *         The {@code StringBuffer} to compare this {@code String} against\n     *\n     * @return  {@code true} if this {@code String} represents the same\n     *          sequence of characters as the specified {@code StringBuffer},\n     *          {@code false} otherwise\n     *\n     * @since  1.4\n     */\n    public boolean contentEquals(StringBuffer sb) {\n        return contentEquals((CharSequence)sb);\n    }\n\n    private boolean nonSyncContentEquals(AbstractStringBuilder sb) {\n        int len \u003d length();\n        if (len !\u003d sb.length()) {\n            return false;\n        }\n        byte v1[] \u003d value;\n        byte v2[] \u003d sb.getValue();\n        if (coder() \u003d\u003d sb.getCoder()) {\n            int n \u003d v1.length;\n            for (int i \u003d 0; i \u003c n; i++) {\n                if (v1[i] !\u003d v2[i]) {\n                    return false;\n                }\n            }\n        } else {\n            if (!isLatin1()) {  // utf16 str and latin1 abs can never be \"equal\"\n                return false;\n            }\n            return StringUTF16.contentEquals(v1, v2, len);\n        }\n        return true;\n    }\n\n    /**\n     * Compares this string to the specified {@code CharSequence}.  The\n     * result is {@code true} if and only if this {@code String} represents the\n     * same sequence of char values as the specified sequence. Note that if the\n     * {@code CharSequence} is a {@code StringBuffer} then the method\n     * synchronizes on it.\n     *\n     * \u003cp\u003eFor finer-grained String comparison, refer to\n     * {@link java.text.Collator}.\n     *\n     * @param  cs\n     *         The sequence to compare this {@code String} against\n     *\n     * @return  {@code true} if this {@code String} represents the same\n     *          sequence of char values as the specified sequence, {@code\n     *          false} otherwise\n     *\n     * @since  1.5\n     */\n    public boolean contentEquals(CharSequence cs) {\n        // Argument is a StringBuffer, StringBuilder\n        if (cs instanceof AbstractStringBuilder) {\n            if (cs instanceof StringBuffer) {\n                synchronized(cs) {\n                   return nonSyncContentEquals((AbstractStringBuilder)cs);\n                }\n            } else {\n                return nonSyncContentEquals((AbstractStringBuilder)cs);\n            }\n        }\n        // Argument is a String\n        if (cs instanceof String) {\n            return equals(cs);\n        }\n        // Argument is a generic CharSequence\n        int n \u003d cs.length();\n        if (n !\u003d length()) {\n            return false;\n        }\n        byte[] val \u003d this.value;\n        if (isLatin1()) {\n            for (int i \u003d 0; i \u003c n; i++) {\n                if ((val[i] \u0026 0xff) !\u003d cs.charAt(i)) {\n                    return false;\n                }\n            }\n        } else {\n            if (!StringUTF16.contentEquals(val, cs, n)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Compares this {@code String} to another {@code String}, ignoring case\n     * considerations.  Two strings are considered equal ignoring case if they\n     * are of the same length and corresponding characters in the two strings\n     * are equal ignoring case.\n     *\n     * \u003cp\u003e Two characters {@code c1} and {@code c2} are considered the same\n     * ignoring case if at least one of the following is true:\n     * \u003cul\u003e\n     *   \u003cli\u003e The two characters are the same (as compared by the\n     *        {@code \u003d\u003d} operator)\n     *   \u003cli\u003e Calling {@code Character.toLowerCase(Character.toUpperCase(char))}\n     *        on each character produces the same result\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003eNote that this method does \u003cem\u003enot\u003c/em\u003e take locale into account, and\n     * will result in unsatisfactory results for certain locales.  The\n     * {@link java.text.Collator} class provides locale-sensitive comparison.\n     *\n     * @param  anotherString\n     *         The {@code String} to compare this {@code String} against\n     *\n     * @return  {@code true} if the argument is not {@code null} and it\n     *          represents an equivalent {@code String} ignoring case; {@code\n     *          false} otherwise\n     *\n     * @see  #equals(Object)\n     */\n    public boolean equalsIgnoreCase(String anotherString) {\n        return (this \u003d\u003d anotherString) ? true\n                : (anotherString !\u003d null)\n                \u0026\u0026 (anotherString.length() \u003d\u003d length())\n                \u0026\u0026 regionMatches(true, 0, anotherString, 0, length());\n    }\n\n    /**\n     * Compares two strings lexicographically.\n     * The comparison is based on the Unicode value of each character in\n     * the strings. The character sequence represented by this\n     * {@code String} object is compared lexicographically to the\n     * character sequence represented by the argument string. The result is\n     * a negative integer if this {@code String} object\n     * lexicographically precedes the argument string. The result is a\n     * positive integer if this {@code String} object lexicographically\n     * follows the argument string. The result is zero if the strings\n     * are equal; {@code compareTo} returns {@code 0} exactly when\n     * the {@link #equals(Object)} method would return {@code true}.\n     * \u003cp\u003e\n     * This is the definition of lexicographic ordering. If two strings are\n     * different, then either they have different characters at some index\n     * that is a valid index for both strings, or their lengths are different,\n     * or both. If they have different characters at one or more index\n     * positions, let \u003ci\u003ek\u003c/i\u003e be the smallest such index; then the string\n     * whose character at position \u003ci\u003ek\u003c/i\u003e has the smaller value, as\n     * determined by using the {@code \u003c} operator, lexicographically precedes the\n     * other string. In this case, {@code compareTo} returns the\n     * difference of the two character values at position {@code k} in\n     * the two string -- that is, the value:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * this.charAt(k)-anotherString.charAt(k)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * If there is no index position at which they differ, then the shorter\n     * string lexicographically precedes the longer string. In this case,\n     * {@code compareTo} returns the difference of the lengths of the\n     * strings -- that is, the value:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * this.length()-anotherString.length()\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * \u003cp\u003eFor finer-grained String comparison, refer to\n     * {@link java.text.Collator}.\n     *\n     * @param   anotherString   the {@code String} to be compared.\n     * @return  the value {@code 0} if the argument string is equal to\n     *          this string; a value less than {@code 0} if this string\n     *          is lexicographically less than the string argument; and a\n     *          value greater than {@code 0} if this string is\n     *          lexicographically greater than the string argument.\n     */\n    public int compareTo(String anotherString) {\n        byte v1[] \u003d value;\n        byte v2[] \u003d anotherString.value;\n        if (coder() \u003d\u003d anotherString.coder()) {\n            return isLatin1() ? StringLatin1.compareTo(v1, v2)\n                              : StringUTF16.compareTo(v1, v2);\n        }\n        return isLatin1() ? StringLatin1.compareToUTF16(v1, v2)\n                          : StringUTF16.compareToLatin1(v1, v2);\n     }\n\n    /**\n     * A Comparator that orders {@code String} objects as by\n     * {@code compareToIgnoreCase}. This comparator is serializable.\n     * \u003cp\u003e\n     * Note that this Comparator does \u003cem\u003enot\u003c/em\u003e take locale into account,\n     * and will result in an unsatisfactory ordering for certain locales.\n     * The {@link java.text.Collator} class provides locale-sensitive comparison.\n     *\n     * @see     java.text.Collator\n     * @since   1.2\n     */\n    public static final Comparator\u003cString\u003e CASE_INSENSITIVE_ORDER\n                                         \u003d new CaseInsensitiveComparator();\n    private static class CaseInsensitiveComparator\n            implements Comparator\u003cString\u003e, java.io.Serializable {\n        // use serialVersionUID from JDK 1.2.2 for interoperability\n        private static final long serialVersionUID \u003d 8575799808933029326L;\n\n        public int compare(String s1, String s2) {\n            byte v1[] \u003d s1.value;\n            byte v2[] \u003d s2.value;\n            if (s1.coder() \u003d\u003d s2.coder()) {\n                return s1.isLatin1() ? StringLatin1.compareToCI(v1, v2)\n                                     : StringUTF16.compareToCI(v1, v2);\n            }\n            return s1.isLatin1() ? StringLatin1.compareToCI_UTF16(v1, v2)\n                                 : StringUTF16.compareToCI_Latin1(v1, v2);\n        }\n\n        /** Replaces the de-serialized object. */\n        private Object readResolve() { return CASE_INSENSITIVE_ORDER; }\n    }\n\n    /**\n     * Compares two strings lexicographically, ignoring case\n     * differences. This method returns an integer whose sign is that of\n     * calling {@code compareTo} with normalized versions of the strings\n     * where case differences have been eliminated by calling\n     * {@code Character.toLowerCase(Character.toUpperCase(character))} on\n     * each character.\n     * \u003cp\u003e\n     * Note that this method does \u003cem\u003enot\u003c/em\u003e take locale into account,\n     * and will result in an unsatisfactory ordering for certain locales.\n     * The {@link java.text.Collator} class provides locale-sensitive comparison.\n     *\n     * @param   str   the {@code String} to be compared.\n     * @return  a negative integer, zero, or a positive integer as the\n     *          specified String is greater than, equal to, or less\n     *          than this String, ignoring case considerations.\n     * @see     java.text.Collator\n     * @since   1.2\n     */\n    public int compareToIgnoreCase(String str) {\n        return CASE_INSENSITIVE_ORDER.compare(this, str);\n    }\n\n    /**\n     * Tests if two string regions are equal.\n     * \u003cp\u003e\n     * A substring of this {@code String} object is compared to a substring\n     * of the argument other. The result is true if these substrings\n     * represent identical character sequences. The substring of this\n     * {@code String} object to be compared begins at index {@code toffset}\n     * and has length {@code len}. The substring of other to be compared\n     * begins at index {@code ooffset} and has length {@code len}. The\n     * result is {@code false} if and only if at least one of the following\n     * is true:\n     * \u003cul\u003e\u003cli\u003e{@code toffset} is negative.\n     * \u003cli\u003e{@code ooffset} is negative.\n     * \u003cli\u003e{@code toffset+len} is greater than the length of this\n     * {@code String} object.\n     * \u003cli\u003e{@code ooffset+len} is greater than the length of the other\n     * argument.\n     * \u003cli\u003eThere is some nonnegative integer \u003ci\u003ek\u003c/i\u003e less than {@code len}\n     * such that:\n     * {@code this.charAt(toffset + }\u003ci\u003ek\u003c/i\u003e{@code ) !\u003d other.charAt(ooffset + }\n     * \u003ci\u003ek\u003c/i\u003e{@code )}\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003eNote that this method does \u003cem\u003enot\u003c/em\u003e take locale into account.  The\n     * {@link java.text.Collator} class provides locale-sensitive comparison.\n     *\n     * @param   toffset   the starting offset of the subregion in this string.\n     * @param   other     the string argument.\n     * @param   ooffset   the starting offset of the subregion in the string\n     *                    argument.\n     * @param   len       the number of characters to compare.\n     * @return  {@code true} if the specified subregion of this string\n     *          exactly matches the specified subregion of the string argument;\n     *          {@code false} otherwise.\n     */\n    public boolean regionMatches(int toffset, String other, int ooffset, int len) {\n        byte tv[] \u003d value;\n        byte ov[] \u003d other.value;\n        // Note: toffset, ooffset, or len might be near -1\u003e\u003e\u003e1.\n        if ((ooffset \u003c 0) || (toffset \u003c 0) ||\n             (toffset \u003e (long)length() - len) ||\n             (ooffset \u003e (long)other.length() - len)) {\n            return false;\n        }\n        if (coder() \u003d\u003d other.coder()) {\n            if (!isLatin1() \u0026\u0026 (len \u003e 0)) {\n                toffset \u003d toffset \u003c\u003c 1;\n                ooffset \u003d ooffset \u003c\u003c 1;\n                len \u003d len \u003c\u003c 1;\n            }\n            while (len-- \u003e 0) {\n                if (tv[toffset++] !\u003d ov[ooffset++]) {\n                    return false;\n                }\n            }\n        } else {\n            if (coder() \u003d\u003d LATIN1) {\n                while (len-- \u003e 0) {\n                    if (StringLatin1.getChar(tv, toffset++) !\u003d\n                        StringUTF16.getChar(ov, ooffset++)) {\n                        return false;\n                    }\n                }\n            } else {\n                while (len-- \u003e 0) {\n                    if (StringUTF16.getChar(tv, toffset++) !\u003d\n                        StringLatin1.getChar(ov, ooffset++)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Tests if two string regions are equal.\n     * \u003cp\u003e\n     * A substring of this {@code String} object is compared to a substring\n     * of the argument {@code other}. The result is {@code true} if these\n     * substrings represent character sequences that are the same, ignoring\n     * case if and only if {@code ignoreCase} is true. The substring of\n     * this {@code String} object to be compared begins at index\n     * {@code toffset} and has length {@code len}. The substring of\n     * {@code other} to be compared begins at index {@code ooffset} and\n     * has length {@code len}. The result is {@code false} if and only if\n     * at least one of the following is true:\n     * \u003cul\u003e\u003cli\u003e{@code toffset} is negative.\n     * \u003cli\u003e{@code ooffset} is negative.\n     * \u003cli\u003e{@code toffset+len} is greater than the length of this\n     * {@code String} object.\n     * \u003cli\u003e{@code ooffset+len} is greater than the length of the other\n     * argument.\n     * \u003cli\u003e{@code ignoreCase} is {@code false} and there is some nonnegative\n     * integer \u003ci\u003ek\u003c/i\u003e less than {@code len} such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * this.charAt(toffset+k) !\u003d other.charAt(ooffset+k)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * \u003cli\u003e{@code ignoreCase} is {@code true} and there is some nonnegative\n     * integer \u003ci\u003ek\u003c/i\u003e less than {@code len} such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * Character.toLowerCase(Character.toUpperCase(this.charAt(toffset+k))) !\u003d\n     Character.toLowerCase(Character.toUpperCase(other.charAt(ooffset+k)))\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003eNote that this method does \u003cem\u003enot\u003c/em\u003e take locale into account,\n     * and will result in unsatisfactory results for certain locales when\n     * {@code ignoreCase} is {@code true}.  The {@link java.text.Collator} class\n     * provides locale-sensitive comparison.\n     *\n     * @param   ignoreCase   if {@code true}, ignore case when comparing\n     *                       characters.\n     * @param   toffset      the starting offset of the subregion in this\n     *                       string.\n     * @param   other        the string argument.\n     * @param   ooffset      the starting offset of the subregion in the string\n     *                       argument.\n     * @param   len          the number of characters to compare.\n     * @return  {@code true} if the specified subregion of this string\n     *          matches the specified subregion of the string argument;\n     *          {@code false} otherwise. Whether the matching is exact\n     *          or case insensitive depends on the {@code ignoreCase}\n     *          argument.\n     */\n    public boolean regionMatches(boolean ignoreCase, int toffset,\n            String other, int ooffset, int len) {\n        if (!ignoreCase) {\n            return regionMatches(toffset, other, ooffset, len);\n        }\n        // Note: toffset, ooffset, or len might be near -1\u003e\u003e\u003e1.\n        if ((ooffset \u003c 0) || (toffset \u003c 0)\n                || (toffset \u003e (long)length() - len)\n                || (ooffset \u003e (long)other.length() - len)) {\n            return false;\n        }\n        byte tv[] \u003d value;\n        byte ov[] \u003d other.value;\n        if (coder() \u003d\u003d other.coder()) {\n            return isLatin1()\n              ? StringLatin1.regionMatchesCI(tv, toffset, ov, ooffset, len)\n              : StringUTF16.regionMatchesCI(tv, toffset, ov, ooffset, len);\n        }\n        return isLatin1()\n              ? StringLatin1.regionMatchesCI_UTF16(tv, toffset, ov, ooffset, len)\n              : StringUTF16.regionMatchesCI_Latin1(tv, toffset, ov, ooffset, len);\n    }\n\n    /**\n     * Tests if the substring of this string beginning at the\n     * specified index starts with the specified prefix.\n     *\n     * @param   prefix    the prefix.\n     * @param   toffset   where to begin looking in this string.\n     * @return  {@code true} if the character sequence represented by the\n     *          argument is a prefix of the substring of this object starting\n     *          at index {@code toffset}; {@code false} otherwise.\n     *          The result is {@code false} if {@code toffset} is\n     *          negative or greater than the length of this\n     *          {@code String} object; otherwise the result is the same\n     *          as the result of the expression\n     *          \u003cpre\u003e\n     *          this.substring(toffset).startsWith(prefix)\n     *          \u003c/pre\u003e\n     */\n    public boolean startsWith(String prefix, int toffset) {\n        // Note: toffset might be near -1\u003e\u003e\u003e1.\n        if (toffset \u003c 0 || toffset \u003e length() - prefix.length()) {\n            return false;\n        }\n        byte ta[] \u003d value;\n        byte pa[] \u003d prefix.value;\n        int po \u003d 0;\n        int pc \u003d pa.length;\n        if (coder() \u003d\u003d prefix.coder()) {\n            int to \u003d isLatin1() ? toffset : toffset \u003c\u003c 1;\n            while (po \u003c pc) {\n                if (ta[to++] !\u003d pa[po++]) {\n                    return false;\n                }\n            }\n        } else {\n            if (isLatin1()) {  // \u0026\u0026 pcoder \u003d\u003d UTF16\n                return false;\n            }\n            // coder \u003d\u003d UTF16 \u0026\u0026 pcoder \u003d\u003d LATIN1)\n            while (po \u003c pc) {\n                if (StringUTF16.getChar(ta, toffset++) !\u003d (pa[po++] \u0026 0xff)) {\n                    return false;\n               }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Tests if this string starts with the specified prefix.\n     *\n     * @param   prefix   the prefix.\n     * @return  {@code true} if the character sequence represented by the\n     *          argument is a prefix of the character sequence represented by\n     *          this string; {@code false} otherwise.\n     *          Note also that {@code true} will be returned if the\n     *          argument is an empty string or is equal to this\n     *          {@code String} object as determined by the\n     *          {@link #equals(Object)} method.\n     * @since   1.0\n     */\n    public boolean startsWith(String prefix) {\n        return startsWith(prefix, 0);\n    }\n\n    /**\n     * Tests if this string ends with the specified suffix.\n     *\n     * @param   suffix   the suffix.\n     * @return  {@code true} if the character sequence represented by the\n     *          argument is a suffix of the character sequence represented by\n     *          this object; {@code false} otherwise. Note that the\n     *          result will be {@code true} if the argument is the\n     *          empty string or is equal to this {@code String} object\n     *          as determined by the {@link #equals(Object)} method.\n     */\n    public boolean endsWith(String suffix) {\n        return startsWith(suffix, length() - suffix.length());\n    }\n\n    /**\n     * Returns a hash code for this string. The hash code for a\n     * {@code String} object is computed as\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * using {@code int} arithmetic, where {@code s[i]} is the\n     * \u003ci\u003ei\u003c/i\u003eth character of the string, {@code n} is the length of\n     * the string, and {@code ^} indicates exponentiation.\n     * (The hash value of the empty string is zero.)\n     *\n     * @return  a hash code value for this object.\n     */\n    public int hashCode() {\n        int h \u003d hash;\n        if (h \u003d\u003d 0 \u0026\u0026 value.length \u003e 0) {\n            hash \u003d h \u003d isLatin1() ? StringLatin1.hashCode(value)\n                                  : StringUTF16.hashCode(value);\n        }\n        return h;\n    }\n\n    /**\n     * Returns the index within this string of the first occurrence of\n     * the specified character. If a character with value\n     * {@code ch} occurs in the character sequence represented by\n     * this {@code String} object, then the index (in Unicode\n     * code units) of the first such occurrence is returned. For\n     * values of {@code ch} in the range from 0 to 0xFFFF\n     * (inclusive), this is the smallest value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * this.charAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true. For other values of {@code ch}, it is the\n     * smallest value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * this.codePointAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true. In either case, if no such character occurs in this\n     * string, then {@code -1} is returned.\n     *\n     * @param   ch   a character (Unicode code point).\n     * @return  the index of the first occurrence of the character in the\n     *          character sequence represented by this object, or\n     *          {@code -1} if the character does not occur.\n     */\n    public int indexOf(int ch) {\n        return indexOf(ch, 0);\n    }\n\n    /**\n     * Returns the index within this string of the first occurrence of the\n     * specified character, starting the search at the specified index.\n     * \u003cp\u003e\n     * If a character with value {@code ch} occurs in the\n     * character sequence represented by this {@code String}\n     * object at an index no smaller than {@code fromIndex}, then\n     * the index of the first such occurrence is returned. For values\n     * of {@code ch} in the range from 0 to 0xFFFF (inclusive),\n     * this is the smallest value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * (this.charAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch) {@code \u0026\u0026} (\u003ci\u003ek\u003c/i\u003e \u0026gt;\u003d fromIndex)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true. For other values of {@code ch}, it is the\n     * smallest value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * (this.codePointAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch) {@code \u0026\u0026} (\u003ci\u003ek\u003c/i\u003e \u0026gt;\u003d fromIndex)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true. In either case, if no such character occurs in this\n     * string at or after position {@code fromIndex}, then\n     * {@code -1} is returned.\n     *\n     * \u003cp\u003e\n     * There is no restriction on the value of {@code fromIndex}. If it\n     * is negative, it has the same effect as if it were zero: this entire\n     * string may be searched. If it is greater than the length of this\n     * string, it has the same effect as if it were equal to the length of\n     * this string: {@code -1} is returned.\n     *\n     * \u003cp\u003eAll indices are specified in {@code char} values\n     * (Unicode code units).\n     *\n     * @param   ch          a character (Unicode code point).\n     * @param   fromIndex   the index to start the search from.\n     * @return  the index of the first occurrence of the character in the\n     *          character sequence represented by this object that is greater\n     *          than or equal to {@code fromIndex}, or {@code -1}\n     *          if the character does not occur.\n     */\n    public int indexOf(int ch, int fromIndex) {\n        return isLatin1() ? StringLatin1.indexOf(value, ch, fromIndex)\n                          : StringUTF16.indexOf(value, ch, fromIndex);\n    }\n\n    /**\n     * Returns the index within this string of the last occurrence of\n     * the specified character. For values of {@code ch} in the\n     * range from 0 to 0xFFFF (inclusive), the index (in Unicode code\n     * units) returned is the largest value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * this.charAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true. For other values of {@code ch}, it is the\n     * largest value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * this.codePointAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true.  In either case, if no such character occurs in this\n     * string, then {@code -1} is returned.  The\n     * {@code String} is searched backwards starting at the last\n     * character.\n     *\n     * @param   ch   a character (Unicode code point).\n     * @return  the index of the last occurrence of the character in the\n     *          character sequence represented by this object, or\n     *          {@code -1} if the character does not occur.\n     */\n    public int lastIndexOf(int ch) {\n        return lastIndexOf(ch, length() - 1);\n    }\n\n    /**\n     * Returns the index within this string of the last occurrence of\n     * the specified character, searching backward starting at the\n     * specified index. For values of {@code ch} in the range\n     * from 0 to 0xFFFF (inclusive), the index returned is the largest\n     * value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * (this.charAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch) {@code \u0026\u0026} (\u003ci\u003ek\u003c/i\u003e \u0026lt;\u003d fromIndex)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true. For other values of {@code ch}, it is the\n     * largest value \u003ci\u003ek\u003c/i\u003e such that:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * (this.codePointAt(\u003ci\u003ek\u003c/i\u003e) \u003d\u003d ch) {@code \u0026\u0026} (\u003ci\u003ek\u003c/i\u003e \u0026lt;\u003d fromIndex)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * is true. In either case, if no such character occurs in this\n     * string at or before position {@code fromIndex}, then\n     * {@code -1} is returned.\n     *\n     * \u003cp\u003eAll indices are specified in {@code char} values\n     * (Unicode code units).\n     *\n     * @param   ch          a character (Unicode code point).\n     * @param   fromIndex   the index to start the search from. There is no\n     *          restriction on the value of {@code fromIndex}. If it is\n     *          greater than or equal to the length of this string, it has\n     *          the same effect as if it were equal to one less than the\n     *          length of this string: this entire string may be searched.\n     *          If it is negative, it has the same effect as if it were -1:\n     *          -1 is returned.\n     * @return  the index of the last occurrence of the character in the\n     *          character sequence represented by this object that is less\n     *          than or equal to {@code fromIndex}, or {@code -1}\n     *          if the character does not occur before that point.\n     */\n    public int lastIndexOf(int ch, int fromIndex) {\n        return isLatin1() ? StringLatin1.lastIndexOf(value, ch, fromIndex)\n                          : StringUTF16.lastIndexOf(value, ch, fromIndex);\n    }\n\n    /**\n     * Returns the index within this string of the first occurrence of the\n     * specified substring.\n     *\n     * \u003cp\u003eThe returned index is the smallest value {@code k} for which:\n     * \u003cpre\u003e{@code\n     * this.startsWith(str, k)\n     * }\u003c/pre\u003e\n     * If no such value of {@code k} exists, then {@code -1} is returned.\n     *\n     * @param   str   the substring to search for.\n     * @return  the index of the first occurrence of the specified substring,\n     *          or {@code -1} if there is no such occurrence.\n     */\n    public int indexOf(String str) {\n        if (coder() \u003d\u003d str.coder()) {\n            return isLatin1() ? StringLatin1.indexOf(value, str.value)\n                              : StringUTF16.indexOf(value, str.value);\n        }\n        if (coder() \u003d\u003d LATIN1) {  // str.coder \u003d\u003d UTF16\n            return -1;\n        }\n        return StringUTF16.indexOfLatin1(value, str.value);\n    }\n\n    /**\n     * Returns the index within this string of the first occurrence of the\n     * specified substring, starting at the specified index.\n     *\n     * \u003cp\u003eThe returned index is the smallest value {@code k} for which:\n     * \u003cpre\u003e{@code\n     *     k \u003e\u003d Math.min(fromIndex, this.length()) \u0026\u0026\n     *                   this.startsWith(str, k)\n     * }\u003c/pre\u003e\n     * If no such value of {@code k} exists, then {@code -1} is returned.\n     *\n     * @param   str         the substring to search for.\n     * @param   fromIndex   the index from which to start the search.\n     * @return  the index of the first occurrence of the specified substring,\n     *          starting at the specified index,\n     *          or {@code -1} if there is no such occurrence.\n     */\n    public int indexOf(String str, int fromIndex) {\n        return indexOf(value, coder(), length(), str, fromIndex);\n    }\n\n    /**\n     * Code shared by String and AbstractStringBuilder to do searches. The\n     * source is the character array being searched, and the target\n     * is the string being searched for.\n     *\n     * @param   src       the characters being searched.\n     * @param   srcCoder  the coder of the source string.\n     * @param   srcCount  length of the source string.\n     * @param   tgtStr    the characters being searched for.\n     * @param   fromIndex the index to begin searching from.\n     */\n    static int indexOf(byte[] src, byte srcCoder, int srcCount,\n                       String tgtStr, int fromIndex) {\n        byte[] tgt    \u003d tgtStr.value;\n        byte tgtCoder \u003d tgtStr.coder();\n        int tgtCount  \u003d tgtStr.length();\n\n        if (fromIndex \u003e\u003d srcCount) {\n            return (tgtCount \u003d\u003d 0 ? srcCount : -1);\n        }\n        if (fromIndex \u003c 0) {\n            fromIndex \u003d 0;\n        }\n        if (tgtCount \u003d\u003d 0) {\n            return fromIndex;\n        }\n        if (tgtCount \u003e srcCount) {\n            return -1;\n        }\n        if (srcCoder \u003d\u003d tgtCoder) {\n            return srcCoder \u003d\u003d LATIN1\n                ? StringLatin1.indexOf(src, srcCount, tgt, tgtCount, fromIndex)\n                : StringUTF16.indexOf(src, srcCount, tgt, tgtCount, fromIndex);\n        }\n        if (srcCoder \u003d\u003d LATIN1) {    //  \u0026\u0026 tgtCoder \u003d\u003d UTF16\n            return -1;\n        }\n        // srcCoder \u003d\u003d UTF16 \u0026\u0026 tgtCoder \u003d\u003d LATIN1) {\n        return StringUTF16.indexOfLatin1(src, srcCount, tgt, tgtCount, fromIndex);\n    }\n\n    /**\n     * Returns the index within this string of the last occurrence of the\n     * specified substring.  The last occurrence of the empty string \"\"\n     * is considered to occur at the index value {@code this.length()}.\n     *\n     * \u003cp\u003eThe returned index is the largest value {@code k} for which:\n     * \u003cpre\u003e{@code\n     * this.startsWith(str, k)\n     * }\u003c/pre\u003e\n     * If no such value of {@code k} exists, then {@code -1} is returned.\n     *\n     * @param   str   the substring to search for.\n     * @return  the index of the last occurrence of the specified substring,\n     *          or {@code -1} if there is no such occurrence.\n     */\n    public int lastIndexOf(String str) {\n        return lastIndexOf(str, length());\n    }\n\n    /**\n     * Returns the index within this string of the last occurrence of the\n     * specified substring, searching backward starting at the specified index.\n     *\n     * \u003cp\u003eThe returned index is the largest value {@code k} for which:\n     * \u003cpre\u003e{@code\n     *     k \u003c\u003d Math.min(fromIndex, this.length()) \u0026\u0026\n     *                   this.startsWith(str, k)\n     * }\u003c/pre\u003e\n     * If no such value of {@code k} exists, then {@code -1} is returned.\n     *\n     * @param   str         the substring to search for.\n     * @param   fromIndex   the index to start the search from.\n     * @return  the index of the last occurrence of the specified substring,\n     *          searching backward from the specified index,\n     *          or {@code -1} if there is no such occurrence.\n     */\n    public int lastIndexOf(String str, int fromIndex) {\n        return lastIndexOf(value, coder(), length(), str, fromIndex);\n    }\n\n    /**\n     * Code shared by String and AbstractStringBuilder to do searches. The\n     * source is the character array being searched, and the target\n     * is the string being searched for.\n     *\n     * @param   src         the characters being searched.\n     * @param   srcCoder    coder handles the mapping between bytes/chars\n     * @param   srcCount    count of the source string.\n     * @param   tgt         the characters being searched for.\n     * @param   fromIndex   the index to begin searching from.\n     */\n    static int lastIndexOf(byte[] src, byte srcCoder, int srcCount,\n                           String tgtStr, int fromIndex) {\n        byte[] tgt \u003d tgtStr.value;\n        byte tgtCoder \u003d tgtStr.coder();\n        int tgtCount \u003d tgtStr.length();\n        /*\n         * Check arguments; return immediately where possible. For\n         * consistency, don\u0027t check for null str.\n         */\n        int rightIndex \u003d srcCount - tgtCount;\n        if (fromIndex \u003e rightIndex) {\n            fromIndex \u003d rightIndex;\n        }\n        if (fromIndex \u003c 0) {\n            return -1;\n        }\n        /* Empty string always matches. */\n        if (tgtCount \u003d\u003d 0) {\n            return fromIndex;\n        }\n        if (srcCoder \u003d\u003d tgtCoder) {\n            return srcCoder \u003d\u003d LATIN1\n                ? StringLatin1.lastIndexOf(src, srcCount, tgt, tgtCount, fromIndex)\n                : StringUTF16.lastIndexOf(src, srcCount, tgt, tgtCount, fromIndex);\n        }\n        if (srcCoder \u003d\u003d LATIN1) {    // \u0026\u0026 tgtCoder \u003d\u003d UTF16\n            return -1;\n        }\n        // srcCoder \u003d\u003d UTF16 \u0026\u0026 tgtCoder \u003d\u003d LATIN1\n        return StringUTF16.lastIndexOfLatin1(src, srcCount, tgt, tgtCount, fromIndex);\n    }\n\n    /**\n     * Returns a string that is a substring of this string. The\n     * substring begins with the character at the specified index and\n     * extends to the end of this string. \u003cp\u003e\n     * Examples:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * \"unhappy\".substring(2) returns \"happy\"\n     * \"Harbison\".substring(3) returns \"bison\"\n     * \"emptiness\".substring(9) returns \"\" (an empty string)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @param      beginIndex   the beginning index, inclusive.\n     * @return     the specified substring.\n     * @exception  IndexOutOfBoundsException  if\n     *             {@code beginIndex} is negative or larger than the\n     *             length of this {@code String} object.\n     */\n    public String substring(int beginIndex) {\n        if (beginIndex \u003c 0) {\n            throw new StringIndexOutOfBoundsException(beginIndex);\n        }\n        int subLen \u003d length() - beginIndex;\n        if (subLen \u003c 0) {\n            throw new StringIndexOutOfBoundsException(subLen);\n        }\n        if (beginIndex \u003d\u003d 0) {\n            return this;\n        }\n        return isLatin1() ? StringLatin1.newString(value, beginIndex, subLen)\n                          : StringUTF16.newString(value, beginIndex, subLen);\n    }\n\n    /**\n     * Returns a string that is a substring of this string. The\n     * substring begins at the specified {@code beginIndex} and\n     * extends to the character at index {@code endIndex - 1}.\n     * Thus the length of the substring is {@code endIndex-beginIndex}.\n     * \u003cp\u003e\n     * Examples:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * \"hamburger\".substring(4, 8) returns \"urge\"\n     * \"smiles\".substring(1, 5) returns \"mile\"\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @param      beginIndex   the beginning index, inclusive.\n     * @param      endIndex     the ending index, exclusive.\n     * @return     the specified substring.\n     * @exception  IndexOutOfBoundsException  if the\n     *             {@code beginIndex} is negative, or\n     *             {@code endIndex} is larger than the length of\n     *             this {@code String} object, or\n     *             {@code beginIndex} is larger than\n     *             {@code endIndex}.\n     */\n    public String substring(int beginIndex, int endIndex) {\n        int length \u003d length();\n        checkBoundsBeginEnd(beginIndex, endIndex, length);\n        int subLen \u003d endIndex - beginIndex;\n        if (beginIndex \u003d\u003d 0 \u0026\u0026 endIndex \u003d\u003d length) {\n            return this;\n        }\n        return isLatin1() ? StringLatin1.newString(value, beginIndex, subLen)\n                          : StringUTF16.newString(value, beginIndex, subLen);\n    }\n\n    /**\n     * Returns a character sequence that is a subsequence of this sequence.\n     *\n     * \u003cp\u003e An invocation of this method of the form\n     *\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * str.subSequence(begin,\u0026nbsp;end)\u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * behaves in exactly the same way as the invocation\n     *\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * str.substring(begin,\u0026nbsp;end)\u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @apiNote\n     * This method is defined so that the {@code String} class can implement\n     * the {@link CharSequence} interface.\n     *\n     * @param   beginIndex   the begin index, inclusive.\n     * @param   endIndex     the end index, exclusive.\n     * @return  the specified subsequence.\n     *\n     * @throws  IndexOutOfBoundsException\n     *          if {@code beginIndex} or {@code endIndex} is negative,\n     *          if {@code endIndex} is greater than {@code length()},\n     *          or if {@code beginIndex} is greater than {@code endIndex}\n     *\n     * @since 1.4\n     * @spec JSR-51\n     */\n    public CharSequence subSequence(int beginIndex, int endIndex) {\n        return this.substring(beginIndex, endIndex);\n    }\n\n    /**\n     * Concatenates the specified string to the end of this string.\n     * \u003cp\u003e\n     * If the length of the argument string is {@code 0}, then this\n     * {@code String} object is returned. Otherwise, a\n     * {@code String} object is returned that represents a character\n     * sequence that is the concatenation of the character sequence\n     * represented by this {@code String} object and the character\n     * sequence represented by the argument string.\u003cp\u003e\n     * Examples:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * \"cares\".concat(\"s\") returns \"caress\"\n     * \"to\".concat(\"get\").concat(\"her\") returns \"together\"\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @param   str   the {@code String} that is concatenated to the end\n     *                of this {@code String}.\n     * @return  a string that represents the concatenation of this object\u0027s\n     *          characters followed by the string argument\u0027s characters.\n     */\n    public String concat(String str) {\n        int olen \u003d str.length();\n        if (olen \u003d\u003d 0) {\n            return this;\n        }\n        if (coder() \u003d\u003d str.coder()) {\n            byte[] val \u003d this.value;\n            byte[] oval \u003d str.value;\n            int len \u003d val.length + oval.length;\n            byte[] buf \u003d Arrays.copyOf(val, len);\n            System.arraycopy(oval, 0, buf, val.length, oval.length);\n            return new String(buf, coder);\n        }\n        int len \u003d length();\n        byte[] buf \u003d StringUTF16.newBytesFor(len + olen);\n        getBytes(buf, 0, UTF16);\n        str.getBytes(buf, len, UTF16);\n        return new String(buf, UTF16);\n    }\n\n    /**\n     * Returns a string resulting from replacing all occurrences of\n     * {@code oldChar} in this string with {@code newChar}.\n     * \u003cp\u003e\n     * If the character {@code oldChar} does not occur in the\n     * character sequence represented by this {@code String} object,\n     * then a reference to this {@code String} object is returned.\n     * Otherwise, a {@code String} object is returned that\n     * represents a character sequence identical to the character sequence\n     * represented by this {@code String} object, except that every\n     * occurrence of {@code oldChar} is replaced by an occurrence\n     * of {@code newChar}.\n     * \u003cp\u003e\n     * Examples:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * \"mesquite in your cellar\".replace(\u0027e\u0027, \u0027o\u0027)\n     *         returns \"mosquito in your collar\"\n     * \"the war of baronets\".replace(\u0027r\u0027, \u0027y\u0027)\n     *         returns \"the way of bayonets\"\n     * \"sparring with a purple porpoise\".replace(\u0027p\u0027, \u0027t\u0027)\n     *         returns \"starring with a turtle tortoise\"\n     * \"JonL\".replace(\u0027q\u0027, \u0027x\u0027) returns \"JonL\" (no change)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @param   oldChar   the old character.\n     * @param   newChar   the new character.\n     * @return  a string derived from this string by replacing every\n     *          occurrence of {@code oldChar} with {@code newChar}.\n     */\n    public String replace(char oldChar, char newChar) {\n        if (oldChar !\u003d newChar) {\n            String ret \u003d isLatin1() ? StringLatin1.replace(value, oldChar, newChar)\n                                    : StringUTF16.replace(value, oldChar, newChar);\n            if (ret !\u003d null) {\n                return ret;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Tells whether or not this string matches the given \u003ca\n     * href\u003d\"../util/regex/Pattern.html#sum\"\u003eregular expression\u003c/a\u003e.\n     *\n     * \u003cp\u003e An invocation of this method of the form\n     * \u003ci\u003estr\u003c/i\u003e{@code .matches(}\u003ci\u003eregex\u003c/i\u003e{@code )} yields exactly the\n     * same result as the expression\n     *\n     * \u003cblockquote\u003e\n     * {@link java.util.regex.Pattern}.{@link java.util.regex.Pattern#matches(String,CharSequence)\n     * matches(\u003ci\u003eregex\u003c/i\u003e, \u003ci\u003estr\u003c/i\u003e)}\n     * \u003c/blockquote\u003e\n     *\n     * @param   regex\n     *          the regular expression to which this string is to be matched\n     *\n     * @return  {@code true} if, and only if, this string matches the\n     *          given regular expression\n     *\n     * @throws  PatternSyntaxException\n     *          if the regular expression\u0027s syntax is invalid\n     *\n     * @see java.util.regex.Pattern\n     *\n     * @since 1.4\n     * @spec JSR-51\n     */\n    public boolean matches(String regex) {\n        return Pattern.matches(regex, this);\n    }\n\n    /**\n     * Returns true if and only if this string contains the specified\n     * sequence of char values.\n     *\n     * @param s the sequence to search for\n     * @return true if this string contains {@code s}, false otherwise\n     * @since 1.5\n     */\n    public boolean contains(CharSequence s) {\n        return indexOf(s.toString()) \u003e\u003d 0;\n    }\n\n    /**\n     * Replaces the first substring of this string that matches the given \u003ca\n     * href\u003d\"../util/regex/Pattern.html#sum\"\u003eregular expression\u003c/a\u003e with the\n     * given replacement.\n     *\n     * \u003cp\u003e An invocation of this method of the form\n     * \u003ci\u003estr\u003c/i\u003e{@code .replaceFirst(}\u003ci\u003eregex\u003c/i\u003e{@code ,} \u003ci\u003erepl\u003c/i\u003e{@code )}\n     * yields exactly the same result as the expression\n     *\n     * \u003cblockquote\u003e\n     * \u003ccode\u003e\n     * {@link java.util.regex.Pattern}.{@link\n     * java.util.regex.Pattern#compile compile}(\u003ci\u003eregex\u003c/i\u003e).{@link\n     * java.util.regex.Pattern#matcher(java.lang.CharSequence) matcher}(\u003ci\u003estr\u003c/i\u003e).{@link\n     * java.util.regex.Matcher#replaceFirst replaceFirst}(\u003ci\u003erepl\u003c/i\u003e)\n     * \u003c/code\u003e\n     * \u003c/blockquote\u003e\n     *\n     *\u003cp\u003e\n     * Note that backslashes ({@code \\}) and dollar signs ({@code $}) in the\n     * replacement string may cause the results to be different than if it were\n     * being treated as a literal replacement string; see\n     * {@link java.util.regex.Matcher#replaceFirst}.\n     * Use {@link java.util.regex.Matcher#quoteReplacement} to suppress the special\n     * meaning of these characters, if desired.\n     *\n     * @param   regex\n     *          the regular expression to which this string is to be matched\n     * @param   replacement\n     *          the string to be substituted for the first match\n     *\n     * @return  The resulting {@code String}\n     *\n     * @throws  PatternSyntaxException\n     *          if the regular expression\u0027s syntax is invalid\n     *\n     * @see java.util.regex.Pattern\n     *\n     * @since 1.4\n     * @spec JSR-51\n     */\n    public String replaceFirst(String regex, String replacement) {\n        return Pattern.compile(regex).matcher(this).replaceFirst(replacement);\n    }\n\n    /**\n     * Replaces each substring of this string that matches the given \u003ca\n     * href\u003d\"../util/regex/Pattern.html#sum\"\u003eregular expression\u003c/a\u003e with the\n     * given replacement.\n     *\n     * \u003cp\u003e An invocation of this method of the form\n     * \u003ci\u003estr\u003c/i\u003e{@code .replaceAll(}\u003ci\u003eregex\u003c/i\u003e{@code ,} \u003ci\u003erepl\u003c/i\u003e{@code )}\n     * yields exactly the same result as the expression\n     *\n     * \u003cblockquote\u003e\n     * \u003ccode\u003e\n     * {@link java.util.regex.Pattern}.{@link\n     * java.util.regex.Pattern#compile compile}(\u003ci\u003eregex\u003c/i\u003e).{@link\n     * java.util.regex.Pattern#matcher(java.lang.CharSequence) matcher}(\u003ci\u003estr\u003c/i\u003e).{@link\n     * java.util.regex.Matcher#replaceAll replaceAll}(\u003ci\u003erepl\u003c/i\u003e)\n     * \u003c/code\u003e\n     * \u003c/blockquote\u003e\n     *\n     *\u003cp\u003e\n     * Note that backslashes ({@code \\}) and dollar signs ({@code $}) in the\n     * replacement string may cause the results to be different than if it were\n     * being treated as a literal replacement string; see\n     * {@link java.util.regex.Matcher#replaceAll Matcher.replaceAll}.\n     * Use {@link java.util.regex.Matcher#quoteReplacement} to suppress the special\n     * meaning of these characters, if desired.\n     *\n     * @param   regex\n     *          the regular expression to which this string is to be matched\n     * @param   replacement\n     *          the string to be substituted for each match\n     *\n     * @return  The resulting {@code String}\n     *\n     * @throws  PatternSyntaxException\n     *          if the regular expression\u0027s syntax is invalid\n     *\n     * @see java.util.regex.Pattern\n     *\n     * @since 1.4\n     * @spec JSR-51\n     */\n    public String replaceAll(String regex, String replacement) {\n        return Pattern.compile(regex).matcher(this).replaceAll(replacement);\n    }\n\n    /**\n     * Replaces each substring of this string that matches the literal target\n     * sequence with the specified literal replacement sequence. The\n     * replacement proceeds from the beginning of the string to the end, for\n     * example, replacing \"aa\" with \"b\" in the string \"aaa\" will result in\n     * \"ba\" rather than \"ab\".\n     *\n     * @param  target The sequence of char values to be replaced\n     * @param  replacement The replacement sequence of char values\n     * @return  The resulting string\n     * @since 1.5\n     */\n    public String replace(CharSequence target, CharSequence replacement) {\n        String tgtStr \u003d target.toString();\n        String replStr \u003d replacement.toString();\n        int j \u003d indexOf(tgtStr);\n        if (j \u003c 0) {\n            return this;\n        }\n        int tgtLen \u003d tgtStr.length();\n        int tgtLen1 \u003d Math.max(tgtLen, 1);\n        int thisLen \u003d length();\n\n        int newLenHint \u003d thisLen - tgtLen + replStr.length();\n        if (newLenHint \u003c 0) {\n            throw new OutOfMemoryError();\n        }\n        StringBuilder sb \u003d new StringBuilder(newLenHint);\n        int i \u003d 0;\n        do {\n            sb.append(this, i, j).append(replStr);\n            i \u003d j + tgtLen;\n        } while (j \u003c thisLen \u0026\u0026 (j \u003d indexOf(tgtStr, j + tgtLen1)) \u003e 0);\n        return sb.append(this, i, thisLen).toString();\n    }\n\n    /**\n     * Splits this string around matches of the given\n     * \u003ca href\u003d\"../util/regex/Pattern.html#sum\"\u003eregular expression\u003c/a\u003e.\n     *\n     * \u003cp\u003e The array returned by this method contains each substring of this\n     * string that is terminated by another substring that matches the given\n     * expression or is terminated by the end of the string.  The substrings in\n     * the array are in the order in which they occur in this string.  If the\n     * expression does not match any part of the input then the resulting array\n     * has just one element, namely this string.\n     *\n     * \u003cp\u003e When there is a positive-width match at the beginning of this\n     * string then an empty leading substring is included at the beginning\n     * of the resulting array. A zero-width match at the beginning however\n     * never produces such empty leading substring.\n     *\n     * \u003cp\u003e The {@code limit} parameter controls the number of times the\n     * pattern is applied and therefore affects the length of the resulting\n     * array.\n     * \u003cul\u003e\n     *    \u003cli\u003e\u003cp\u003e\n     *    If the \u003ci\u003elimit\u003c/i\u003e is positive then the pattern will be applied\n     *    at most \u003ci\u003elimit\u003c/i\u003e\u0026nbsp;-\u0026nbsp;1 times, the array\u0027s length will be\n     *    no greater than \u003ci\u003elimit\u003c/i\u003e, and the array\u0027s last entry will contain\n     *    all input beyond the last matched delimiter.\u003c/p\u003e\u003c/li\u003e\n     *\n     *    \u003cli\u003e\u003cp\u003e\n     *    If the \u003ci\u003elimit\u003c/i\u003e is zero then the pattern will be applied as\n     *    many times as possible, the array can have any length, and trailing\n     *    empty strings will be discarded.\u003c/p\u003e\u003c/li\u003e\n     *\n     *    \u003cli\u003e\u003cp\u003e\n     *    If the \u003ci\u003elimit\u003c/i\u003e is negative then the pattern will be applied\n     *    as many times as possible and the array can have any length.\u003c/p\u003e\u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e The string {@code \"boo:and:foo\"}, for example, yields the\n     * following results with these parameters:\n     *\n     * \u003cblockquote\u003e\u003ctable class\u003d\"plain\"\u003e\n     * \u003ccaption style\u003d\"display:none\"\u003eSplit example showing regex, limit, and result\u003c/caption\u003e\n     * \u003cthead\u003e\n     * \u003ctr\u003e\n     *     \u003cth scope\u003d\"col\"\u003eRegex\u003c/th\u003e\n     *     \u003cth scope\u003d\"col\"\u003eLimit\u003c/th\u003e\n     *     \u003cth scope\u003d\"col\"\u003eResult\u003c/th\u003e\n     * \u003c/tr\u003e\n     * \u003c/thead\u003e\n     * \u003ctbody\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\" rowspan\u003d\"3\" style\u003d\"font-weight:normal\"\u003e:\u003c/th\u003e\n     *     \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:right; padding-right:1em\"\u003e2\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"boo\", \"and:foo\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003c!-- : --\u003e\n     *     \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:right; padding-right:1em\"\u003e5\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"boo\", \"and\", \"foo\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003c!-- : --\u003e\n     *     \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:right; padding-right:1em\"\u003e-2\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"boo\", \"and\", \"foo\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\" rowspan\u003d\"3\" style\u003d\"font-weight:normal\"\u003eo\u003c/th\u003e\n     *     \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:right; padding-right:1em\"\u003e5\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"b\", \"\", \":and:f\", \"\", \"\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003c!-- o --\u003e\n     *     \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:right; padding-right:1em\"\u003e-2\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"b\", \"\", \":and:f\", \"\", \"\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003c!-- o --\u003e\n     *     \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:right; padding-right:1em\"\u003e0\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"b\", \"\", \":and:f\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003c/tbody\u003e\n     * \u003c/table\u003e\u003c/blockquote\u003e\n     *\n     * \u003cp\u003e An invocation of this method of the form\n     * \u003ci\u003estr.\u003c/i\u003e{@code split(}\u003ci\u003eregex\u003c/i\u003e{@code ,}\u0026nbsp;\u003ci\u003en\u003c/i\u003e{@code )}\n     * yields the same result as the expression\n     *\n     * \u003cblockquote\u003e\n     * \u003ccode\u003e\n     * {@link java.util.regex.Pattern}.{@link\n     * java.util.regex.Pattern#compile compile}(\u003ci\u003eregex\u003c/i\u003e).{@link\n     * java.util.regex.Pattern#split(java.lang.CharSequence,int) split}(\u003ci\u003estr\u003c/i\u003e,\u0026nbsp;\u003ci\u003en\u003c/i\u003e)\n     * \u003c/code\u003e\n     * \u003c/blockquote\u003e\n     *\n     *\n     * @param  regex\n     *         the delimiting regular expression\n     *\n     * @param  limit\n     *         the result threshold, as described above\n     *\n     * @return  the array of strings computed by splitting this string\n     *          around matches of the given regular expression\n     *\n     * @throws  PatternSyntaxException\n     *          if the regular expression\u0027s syntax is invalid\n     *\n     * @see java.util.regex.Pattern\n     *\n     * @since 1.4\n     * @spec JSR-51\n     */\n    public String[] split(String regex, int limit) {\n        /* fastpath if the regex is a\n         (1)one-char String and this character is not one of the\n            RegEx\u0027s meta characters \".$|()[{^?*+\\\\\", or\n         (2)two-char String and the first char is the backslash and\n            the second is not the ascii digit or ascii letter.\n         */\n        char ch \u003d 0;\n        if (((regex.length() \u003d\u003d 1 \u0026\u0026\n             \".$|()[{^?*+\\\\\".indexOf(ch \u003d regex.charAt(0)) \u003d\u003d -1) ||\n             (regex.length() \u003d\u003d 2 \u0026\u0026\n              regex.charAt(0) \u003d\u003d \u0027\\\\\u0027 \u0026\u0026\n              (((ch \u003d regex.charAt(1))-\u00270\u0027)|(\u00279\u0027-ch)) \u003c 0 \u0026\u0026\n              ((ch-\u0027a\u0027)|(\u0027z\u0027-ch)) \u003c 0 \u0026\u0026\n              ((ch-\u0027A\u0027)|(\u0027Z\u0027-ch)) \u003c 0)) \u0026\u0026\n            (ch \u003c Character.MIN_HIGH_SURROGATE ||\n             ch \u003e Character.MAX_LOW_SURROGATE))\n        {\n            int off \u003d 0;\n            int next \u003d 0;\n            boolean limited \u003d limit \u003e 0;\n            ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();\n            while ((next \u003d indexOf(ch, off)) !\u003d -1) {\n                if (!limited || list.size() \u003c limit - 1) {\n                    list.add(substring(off, next));\n                    off \u003d next + 1;\n                } else {    // last one\n                    //assert (list.size() \u003d\u003d limit - 1);\n                    int last \u003d length();\n                    list.add(substring(off, last));\n                    off \u003d last;\n                    break;\n                }\n            }\n            // If no match was found, return this\n            if (off \u003d\u003d 0)\n                return new String[]{this};\n\n            // Add remaining segment\n            if (!limited || list.size() \u003c limit)\n                list.add(substring(off, length()));\n\n            // Construct result\n            int resultSize \u003d list.size();\n            if (limit \u003d\u003d 0) {\n                while (resultSize \u003e 0 \u0026\u0026 list.get(resultSize - 1).length() \u003d\u003d 0) {\n                    resultSize--;\n                }\n            }\n            String[] result \u003d new String[resultSize];\n            return list.subList(0, resultSize).toArray(result);\n        }\n        return Pattern.compile(regex).split(this, limit);\n    }\n\n    /**\n     * Splits this string around matches of the given \u003ca\n     * href\u003d\"../util/regex/Pattern.html#sum\"\u003eregular expression\u003c/a\u003e.\n     *\n     * \u003cp\u003e This method works as if by invoking the two-argument {@link\n     * #split(String, int) split} method with the given expression and a limit\n     * argument of zero.  Trailing empty strings are therefore not included in\n     * the resulting array.\n     *\n     * \u003cp\u003e The string {@code \"boo:and:foo\"}, for example, yields the following\n     * results with these expressions:\n     *\n     * \u003cblockquote\u003e\u003ctable class\u003d\"plain\"\u003e\n     * \u003ccaption style\u003d\"display:none\"\u003eSplit examples showing regex and result\u003c/caption\u003e\n     * \u003cthead\u003e\n     * \u003ctr\u003e\n     *  \u003cth scope\u003d\"col\"\u003eRegex\u003c/th\u003e\n     *  \u003cth scope\u003d\"col\"\u003eResult\u003c/th\u003e\n     * \u003c/tr\u003e\n     * \u003c/thead\u003e\n     * \u003ctbody\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\" style\u003d\"text-weight:normal\"\u003e:\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"boo\", \"and\", \"foo\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\" style\u003d\"text-weight:normal\"\u003eo\u003c/th\u003e\n     *     \u003ctd\u003e{@code { \"b\", \"\", \":and:f\" }}\u003c/td\u003e\u003c/tr\u003e\n     * \u003c/tbody\u003e\n     * \u003c/table\u003e\u003c/blockquote\u003e\n     *\n     *\n     * @param  regex\n     *         the delimiting regular expression\n     *\n     * @return  the array of strings computed by splitting this string\n     *          around matches of the given regular expression\n     *\n     * @throws  PatternSyntaxException\n     *          if the regular expression\u0027s syntax is invalid\n     *\n     * @see java.util.regex.Pattern\n     *\n     * @since 1.4\n     * @spec JSR-51\n     */\n    public String[] split(String regex) {\n        return split(regex, 0);\n    }\n\n    /**\n     * Returns a new String composed of copies of the\n     * {@code CharSequence elements} joined together with a copy of\n     * the specified {@code delimiter}.\n     *\n     * \u003cblockquote\u003eFor example,\n     * \u003cpre\u003e{@code\n     *     String message \u003d String.join(\"-\", \"Java\", \"is\", \"cool\");\n     *     // message returned is: \"Java-is-cool\"\n     * }\u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * Note that if an element is null, then {@code \"null\"} is added.\n     *\n     * @param  delimiter the delimiter that separates each element\n     * @param  elements the elements to join together.\n     *\n     * @return a new {@code String} that is composed of the {@code elements}\n     *         separated by the {@code delimiter}\n     *\n     * @throws NullPointerException If {@code delimiter} or {@code elements}\n     *         is {@code null}\n     *\n     * @see java.util.StringJoiner\n     * @since 1.8\n     */\n    public static String join(CharSequence delimiter, CharSequence... elements) {\n        Objects.requireNonNull(delimiter);\n        Objects.requireNonNull(elements);\n        // Number of elements not likely worth Arrays.stream overhead.\n        StringJoiner joiner \u003d new StringJoiner(delimiter);\n        for (CharSequence cs: elements) {\n            joiner.add(cs);\n        }\n        return joiner.toString();\n    }\n\n    /**\n     * Returns a new {@code String} composed of copies of the\n     * {@code CharSequence elements} joined together with a copy of the\n     * specified {@code delimiter}.\n     *\n     * \u003cblockquote\u003eFor example,\n     * \u003cpre\u003e{@code\n     *     List\u003cString\u003e strings \u003d List.of(\"Java\", \"is\", \"cool\");\n     *     String message \u003d String.join(\" \", strings);\n     *     //message returned is: \"Java is cool\"\n     *\n     *     Set\u003cString\u003e strings \u003d\n     *         new LinkedHashSet\u003c\u003e(List.of(\"Java\", \"is\", \"very\", \"cool\"));\n     *     String message \u003d String.join(\"-\", strings);\n     *     //message returned is: \"Java-is-very-cool\"\n     * }\u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * Note that if an individual element is {@code null}, then {@code \"null\"} is added.\n     *\n     * @param  delimiter a sequence of characters that is used to separate each\n     *         of the {@code elements} in the resulting {@code String}\n     * @param  elements an {@code Iterable} that will have its {@code elements}\n     *         joined together.\n     *\n     * @return a new {@code String} that is composed from the {@code elements}\n     *         argument\n     *\n     * @throws NullPointerException If {@code delimiter} or {@code elements}\n     *         is {@code null}\n     *\n     * @see    #join(CharSequence,CharSequence...)\n     * @see    java.util.StringJoiner\n     * @since 1.8\n     */\n    public static String join(CharSequence delimiter,\n            Iterable\u003c? extends CharSequence\u003e elements) {\n        Objects.requireNonNull(delimiter);\n        Objects.requireNonNull(elements);\n        StringJoiner joiner \u003d new StringJoiner(delimiter);\n        for (CharSequence cs: elements) {\n            joiner.add(cs);\n        }\n        return joiner.toString();\n    }\n\n    /**\n     * Converts all of the characters in this {@code String} to lower\n     * case using the rules of the given {@code Locale}.  Case mapping is based\n     * on the Unicode Standard version specified by the {@link java.lang.Character Character}\n     * class. Since case mappings are not always 1:1 char mappings, the resulting\n     * {@code String} may be a different length than the original {@code String}.\n     * \u003cp\u003e\n     * Examples of lowercase  mappings are in the following table:\n     * \u003ctable class\u003d\"plain\"\u003e\n     * \u003ccaption style\u003d\"display:none\"\u003eLowercase mapping examples showing language code of locale, upper case, lower case, and description\u003c/caption\u003e\n     * \u003cthead\u003e\n     * \u003ctr\u003e\n     *   \u003cth scope\u003d\"col\"\u003eLanguage Code of Locale\u003c/th\u003e\n     *   \u003cth scope\u003d\"col\"\u003eUpper Case\u003c/th\u003e\n     *   \u003cth scope\u003d\"col\"\u003eLower Case\u003c/th\u003e\n     *   \u003cth scope\u003d\"col\"\u003eDescription\u003c/th\u003e\n     * \u003c/tr\u003e\n     * \u003c/thead\u003e\n     * \u003ctbody\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003etr (Turkish)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003e\u0026#92;u0130\u003c/th\u003e\n     *   \u003ctd\u003e\u0026#92;u0069\u003c/td\u003e\n     *   \u003ctd\u003ecapital letter I with dot above -\u0026gt; small letter i\u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003etr (Turkish)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003e\u0026#92;u0049\u003c/th\u003e\n     *   \u003ctd\u003e\u0026#92;u0131\u003c/td\u003e\n     *   \u003ctd\u003ecapital letter I -\u0026gt; small letter dotless i \u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003e(all)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003eFrench Fries\u003c/th\u003e\n     *   \u003ctd\u003efrench fries\u003c/td\u003e\n     *   \u003ctd\u003elowercased all chars in String\u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003e(all)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003e\n     *       \u0026Iota;\u0026Chi;\u0026Theta;\u0026Upsilon;\u0026Sigma;\u003c/th\u003e\n     *   \u003ctd\u003e\u0026iota;\u0026chi;\u0026theta;\u0026upsilon;\u0026sigma;\u003c/td\u003e\n     *   \u003ctd\u003elowercased all chars in String\u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003c/tbody\u003e\n     * \u003c/table\u003e\n     *\n     * @param locale use the case transformation rules for this locale\n     * @return the {@code String}, converted to lowercase.\n     * @see     java.lang.String#toLowerCase()\n     * @see     java.lang.String#toUpperCase()\n     * @see     java.lang.String#toUpperCase(Locale)\n     * @since   1.1\n     */\n    public String toLowerCase(Locale locale) {\n        return isLatin1() ? StringLatin1.toLowerCase(this, value, locale)\n                          : StringUTF16.toLowerCase(this, value, locale);\n    }\n\n    /**\n     * Converts all of the characters in this {@code String} to lower\n     * case using the rules of the default locale. This is equivalent to calling\n     * {@code toLowerCase(Locale.getDefault())}.\n     * \u003cp\u003e\n     * \u003cb\u003eNote:\u003c/b\u003e This method is locale sensitive, and may produce unexpected\n     * results if used for strings that are intended to be interpreted locale\n     * independently.\n     * Examples are programming language identifiers, protocol keys, and HTML\n     * tags.\n     * For instance, {@code \"TITLE\".toLowerCase()} in a Turkish locale\n     * returns {@code \"t\\u005Cu0131tle\"}, where \u0027\\u005Cu0131\u0027 is the\n     * LATIN SMALL LETTER DOTLESS I character.\n     * To obtain correct results for locale insensitive strings, use\n     * {@code toLowerCase(Locale.ROOT)}.\n     *\n     * @return  the {@code String}, converted to lowercase.\n     * @see     java.lang.String#toLowerCase(Locale)\n     */\n    public String toLowerCase() {\n        return toLowerCase(Locale.getDefault());\n    }\n\n    /**\n     * Converts all of the characters in this {@code String} to upper\n     * case using the rules of the given {@code Locale}. Case mapping is based\n     * on the Unicode Standard version specified by the {@link java.lang.Character Character}\n     * class. Since case mappings are not always 1:1 char mappings, the resulting\n     * {@code String} may be a different length than the original {@code String}.\n     * \u003cp\u003e\n     * Examples of locale-sensitive and 1:M case mappings are in the following table.\n     *\n     * \u003ctable class\u003d\"plain\"\u003e\n     * \u003ccaption style\u003d\"display:none\"\u003eExamples of locale-sensitive and 1:M case mappings. Shows Language code of locale, lower case, upper case, and description.\u003c/caption\u003e\n     * \u003cthead\u003e\n     * \u003ctr\u003e\n     *   \u003cth scope\u003d\"col\"\u003eLanguage Code of Locale\u003c/th\u003e\n     *   \u003cth scope\u003d\"col\"\u003eLower Case\u003c/th\u003e\n     *   \u003cth scope\u003d\"col\"\u003eUpper Case\u003c/th\u003e\n     *   \u003cth scope\u003d\"col\"\u003eDescription\u003c/th\u003e\n     * \u003c/tr\u003e\n     * \u003c/thead\u003e\n     * \u003ctbody\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003etr (Turkish)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003e\u0026#92;u0069\u003c/th\u003e\n     *   \u003ctd\u003e\u0026#92;u0130\u003c/td\u003e\n     *   \u003ctd\u003esmall letter i -\u0026gt; capital letter I with dot above\u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003etr (Turkish)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003e\u0026#92;u0131\u003c/th\u003e\n     *   \u003ctd\u003e\u0026#92;u0049\u003c/td\u003e\n     *   \u003ctd\u003esmall letter dotless i -\u0026gt; capital letter I\u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003e(all)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003e\u0026#92;u00df\u003c/th\u003e\n     *   \u003ctd\u003e\u0026#92;u0053 \u0026#92;u0053\u003c/td\u003e\n     *   \u003ctd\u003esmall letter sharp s -\u0026gt; two letters: SS\u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003ctr\u003e\n     *   \u003ctd\u003e(all)\u003c/td\u003e\n     *   \u003cth scope\u003d\"row\" style\u003d\"font-weight:normal; text-align:left\"\u003eFahrvergn\u0026uuml;gen\u003c/th\u003e\n     *   \u003ctd\u003eFAHRVERGN\u0026Uuml;GEN\u003c/td\u003e\n     *   \u003ctd\u003e\u003c/td\u003e\n     * \u003c/tr\u003e\n     * \u003c/tbody\u003e\n     * \u003c/table\u003e\n     * @param locale use the case transformation rules for this locale\n     * @return the {@code String}, converted to uppercase.\n     * @see     java.lang.String#toUpperCase()\n     * @see     java.lang.String#toLowerCase()\n     * @see     java.lang.String#toLowerCase(Locale)\n     * @since   1.1\n     */\n    public String toUpperCase(Locale locale) {\n        return isLatin1() ? StringLatin1.toUpperCase(this, value, locale)\n                          : StringUTF16.toUpperCase(this, value, locale);\n    }\n\n    /**\n     * Converts all of the characters in this {@code String} to upper\n     * case using the rules of the default locale. This method is equivalent to\n     * {@code toUpperCase(Locale.getDefault())}.\n     * \u003cp\u003e\n     * \u003cb\u003eNote:\u003c/b\u003e This method is locale sensitive, and may produce unexpected\n     * results if used for strings that are intended to be interpreted locale\n     * independently.\n     * Examples are programming language identifiers, protocol keys, and HTML\n     * tags.\n     * For instance, {@code \"title\".toUpperCase()} in a Turkish locale\n     * returns {@code \"T\\u005Cu0130TLE\"}, where \u0027\\u005Cu0130\u0027 is the\n     * LATIN CAPITAL LETTER I WITH DOT ABOVE character.\n     * To obtain correct results for locale insensitive strings, use\n     * {@code toUpperCase(Locale.ROOT)}.\n     *\n     * @return  the {@code String}, converted to uppercase.\n     * @see     java.lang.String#toUpperCase(Locale)\n     */\n    public String toUpperCase() {\n        return toUpperCase(Locale.getDefault());\n    }\n\n    /**\n     * Returns a string whose value is this string, with all leading\n     * and trailing space removed, where space is defined\n     * as any character whose codepoint is less than or equal to\n     * {@code \u0027U+0020\u0027} (the space character).\n     * \u003cp\u003e\n     * If this {@code String} object represents an empty character\n     * sequence, or the first and last characters of character sequence\n     * represented by this {@code String} object both have codes\n     * that are not space (as defined above), then a\n     * reference to this {@code String} object is returned.\n     * \u003cp\u003e\n     * Otherwise, if all characters in this string are space (as\n     * defined above), then a  {@code String} object representing an\n     * empty string is returned.\n     * \u003cp\u003e\n     * Otherwise, let \u003ci\u003ek\u003c/i\u003e be the index of the first character in the\n     * string whose code is not a space (as defined above) and let\n     * \u003ci\u003em\u003c/i\u003e be the index of the last character in the string whose code\n     * is not a space (as defined above). A {@code String}\n     * object is returned, representing the substring of this string that\n     * begins with the character at index \u003ci\u003ek\u003c/i\u003e and ends with the\n     * character at index \u003ci\u003em\u003c/i\u003e-that is, the result of\n     * {@code this.substring(k, m + 1)}.\n     * \u003cp\u003e\n     * This method may be used to trim space (as defined above) from\n     * the beginning and end of a string.\n     *\n     * @return  a string whose value is this string, with all leading\n     *          and trailing space removed, or this string if it\n     *          has no leading or trailing space.\n     */\n    public String trim() {\n        String ret \u003d isLatin1() ? StringLatin1.trim(value)\n                                : StringUTF16.trim(value);\n        return ret \u003d\u003d null ? this : ret;\n    }\n\n    /**\n     * Returns a string whose value is this string, with all leading\n     * and trailing {@link Character#isWhitespace(int) white space}\n     * removed.\n     * \u003cp\u003e\n     * If this {@code String} object represents an empty string,\n     * or if all code points in this string are\n     * {@link Character#isWhitespace(int) white space}, then an empty string\n     * is returned.\n     * \u003cp\u003e\n     * Otherwise, returns a substring of this string beginning with the first\n     * code point that is not a {@link Character#isWhitespace(int) white space}\n     * up to and including the last code point that is not a\n     * {@link Character#isWhitespace(int) white space}.\n     * \u003cp\u003e\n     * This method may be used to strip\n     * {@link Character#isWhitespace(int) white space} from\n     * the beginning and end of a string.\n     *\n     * @return  a string whose value is this string, with all leading\n     *          and trailing white space removed\n     *\n     * @see Character#isWhitespace(int)\n     *\n     * @since 11\n     */\n    public String strip() {\n        String ret \u003d isLatin1() ? StringLatin1.strip(value)\n                                : StringUTF16.strip(value);\n        return ret \u003d\u003d null ? this : ret;\n    }\n\n    /**\n     * Returns a string whose value is this string, with all leading\n     * {@link Character#isWhitespace(int) white space} removed.\n     * \u003cp\u003e\n     * If this {@code String} object represents an empty string,\n     * or if all code points in this string are\n     * {@link Character#isWhitespace(int) white space}, then an empty string\n     * is returned.\n     * \u003cp\u003e\n     * Otherwise, returns a substring of this string beginning with the first\n     * code point that is not a {@link Character#isWhitespace(int) white space}\n     * up to to and including the last code point of this string.\n     * \u003cp\u003e\n     * This method may be used to trim\n     * {@link Character#isWhitespace(int) white space} from\n     * the beginning of a string.\n     *\n     * @return  a string whose value is this string, with all leading white\n     *          space removed\n     *\n     * @see Character#isWhitespace(int)\n     *\n     * @since 11\n     */\n    public String stripLeading() {\n        String ret \u003d isLatin1() ? StringLatin1.stripLeading(value)\n                                : StringUTF16.stripLeading(value);\n        return ret \u003d\u003d null ? this : ret;\n    }\n\n    /**\n     * Returns a string whose value is this string, with all trailing\n     * {@link Character#isWhitespace(int) white space} removed.\n     * \u003cp\u003e\n     * If this {@code String} object represents an empty string,\n     * or if all characters in this string are\n     * {@link Character#isWhitespace(int) white space}, then an empty string\n     * is returned.\n     * \u003cp\u003e\n     * Otherwise, returns a substring of this string beginning with the first\n     * code point of this string up to and including the last code point\n     * that is not a {@link Character#isWhitespace(int) white space}.\n     * \u003cp\u003e\n     * This method may be used to trim\n     * {@link Character#isWhitespace(int) white space} from\n     * the end of a string.\n     *\n     * @return  a string whose value is this string, with all trailing white\n     *          space removed\n     *\n     * @see Character#isWhitespace(int)\n     *\n     * @since 11\n     */\n    public String stripTrailing() {\n        String ret \u003d isLatin1() ? StringLatin1.stripTrailing(value)\n                                : StringUTF16.stripTrailing(value);\n        return ret \u003d\u003d null ? this : ret;\n    }\n\n    /**\n     * Returns {@code true} if the string is empty or contains only\n     * {@link Character#isWhitespace(int) white space} codepoints,\n     * otherwise {@code false}.\n     *\n     * @return {@code true} if the string is empty or contains only\n     *         {@link Character#isWhitespace(int) white space} codepoints,\n     *         otherwise {@code false}\n     *\n     * @see Character#isWhitespace(int)\n     *\n     * @since 11\n     */\n    public boolean isBlank() {\n        return indexOfNonWhitespace() \u003d\u003d length();\n    }\n\n    private int indexOfNonWhitespace() {\n        if (isLatin1()) {\n            return StringLatin1.indexOfNonWhitespace(value);\n        } else {\n            return StringUTF16.indexOfNonWhitespace(value);\n        }\n    }\n\n    /**\n     * Returns a stream of lines extracted from this string,\n     * separated by line terminators.\n     * \u003cp\u003e\n     * A \u003ci\u003eline terminator\u003c/i\u003e is one of the following:\n     * a line feed character {@code \"\\n\"} (U+000A),\n     * a carriage return character {@code \"\\r\"} (U+000D),\n     * or a carriage return followed immediately by a line feed\n     * {@code \"\\r\\n\"} (U+000D U+000A).\n     * \u003cp\u003e\n     * A \u003ci\u003eline\u003c/i\u003e is either a sequence of zero or more characters\n     * followed by a line terminator, or it is a sequence of one or\n     * more characters followed by the end of the string. A\n     * line does not include the line terminator.\n     * \u003cp\u003e\n     * The stream returned by this method contains the lines from\n     * this string in the order in which they occur.\n     *\n     * @apiNote This definition of \u003ci\u003eline\u003c/i\u003e implies that an empty\n     *          string has zero lines and that there is no empty line\n     *          following a line terminator at the end of a string.\n     *\n     * @implNote This method provides better performance than\n     *           split(\"\\R\") by supplying elements lazily and\n     *           by faster search of new line terminators.\n     *\n     * @return  the stream of lines extracted from this string\n     *\n     * @since 11\n     */\n    public Stream\u003cString\u003e lines() {\n        return isLatin1() ? StringLatin1.lines(value)\n                          : StringUTF16.lines(value);\n    }\n\n    /**\n     * This object (which is already a string!) is itself returned.\n     *\n     * @return  the string itself.\n     */\n    public String toString() {\n        return this;\n    }\n\n    /**\n     * Returns a stream of {@code int} zero-extending the {@code char} values\n     * from this sequence.  Any char which maps to a \u003ca\n     * href\u003d\"{@docRoot}/java.base/java/lang/Character.html#unicode\"\u003esurrogate code\n     * point\u003c/a\u003e is passed through uninterpreted.\n     *\n     * @return an IntStream of char values from this sequence\n     * @since 9\n     */\n    @Override\n    public IntStream chars() {\n        return StreamSupport.intStream(\n            isLatin1() ? new StringLatin1.CharsSpliterator(value, Spliterator.IMMUTABLE)\n                       : new StringUTF16.CharsSpliterator(value, Spliterator.IMMUTABLE),\n            false);\n    }\n\n\n    /**\n     * Returns a stream of code point values from this sequence.  Any surrogate\n     * pairs encountered in the sequence are combined as if by {@linkplain\n     * Character#toCodePoint Character.toCodePoint} and the result is passed\n     * to the stream. Any other code units, including ordinary BMP characters,\n     * unpaired surrogates, and undefined code units, are zero-extended to\n     * {@code int} values which are then passed to the stream.\n     *\n     * @return an IntStream of Unicode code points from this sequence\n     * @since 9\n     */\n    @Override\n    public IntStream codePoints() {\n        return StreamSupport.intStream(\n            isLatin1() ? new StringLatin1.CharsSpliterator(value, Spliterator.IMMUTABLE)\n                       : new StringUTF16.CodePointsSpliterator(value, Spliterator.IMMUTABLE),\n            false);\n    }\n\n    /**\n     * Converts this string to a new character array.\n     *\n     * @return  a newly allocated character array whose length is the length\n     *          of this string and whose contents are initialized to contain\n     *          the character sequence represented by this string.\n     */\n    public char[] toCharArray() {\n        return isLatin1() ? StringLatin1.toChars(value)\n                          : StringUTF16.toChars(value);\n    }\n\n    /**\n     * Returns a formatted string using the specified format string and\n     * arguments.\n     *\n     * \u003cp\u003e The locale always used is the one returned by {@link\n     * java.util.Locale#getDefault(java.util.Locale.Category)\n     * Locale.getDefault(Locale.Category)} with\n     * {@link java.util.Locale.Category#FORMAT FORMAT} category specified.\n     *\n     * @param  format\n     *         A \u003ca href\u003d\"../util/Formatter.html#syntax\"\u003eformat string\u003c/a\u003e\n     *\n     * @param  args\n     *         Arguments referenced by the format specifiers in the format\n     *         string.  If there are more arguments than format specifiers, the\n     *         extra arguments are ignored.  The number of arguments is\n     *         variable and may be zero.  The maximum number of arguments is\n     *         limited by the maximum dimension of a Java array as defined by\n     *         \u003ccite\u003eThe Java\u0026trade; Virtual Machine Specification\u003c/cite\u003e.\n     *         The behaviour on a\n     *         {@code null} argument depends on the \u003ca\n     *         href\u003d\"../util/Formatter.html#syntax\"\u003econversion\u003c/a\u003e.\n     *\n     * @throws  java.util.IllegalFormatException\n     *          If a format string contains an illegal syntax, a format\n     *          specifier that is incompatible with the given arguments,\n     *          insufficient arguments given the format string, or other\n     *          illegal conditions.  For specification of all possible\n     *          formatting errors, see the \u003ca\n     *          href\u003d\"../util/Formatter.html#detail\"\u003eDetails\u003c/a\u003e section of the\n     *          formatter class specification.\n     *\n     * @return  A formatted string\n     *\n     * @see  java.util.Formatter\n     * @since  1.5\n     */\n    public static String format(String format, Object... args) {\n        return new Formatter().format(format, args).toString();\n    }\n\n    /**\n     * Returns a formatted string using the specified locale, format string,\n     * and arguments.\n     *\n     * @param  l\n     *         The {@linkplain java.util.Locale locale} to apply during\n     *         formatting.  If {@code l} is {@code null} then no localization\n     *         is applied.\n     *\n     * @param  format\n     *         A \u003ca href\u003d\"../util/Formatter.html#syntax\"\u003eformat string\u003c/a\u003e\n     *\n     * @param  args\n     *         Arguments referenced by the format specifiers in the format\n     *         string.  If there are more arguments than format specifiers, the\n     *         extra arguments are ignored.  The number of arguments is\n     *         variable and may be zero.  The maximum number of arguments is\n     *         limited by the maximum dimension of a Java array as defined by\n     *         \u003ccite\u003eThe Java\u0026trade; Virtual Machine Specification\u003c/cite\u003e.\n     *         The behaviour on a\n     *         {@code null} argument depends on the\n     *         \u003ca href\u003d\"../util/Formatter.html#syntax\"\u003econversion\u003c/a\u003e.\n     *\n     * @throws  java.util.IllegalFormatException\n     *          If a format string contains an illegal syntax, a format\n     *          specifier that is incompatible with the given arguments,\n     *          insufficient arguments given the format string, or other\n     *          illegal conditions.  For specification of all possible\n     *          formatting errors, see the \u003ca\n     *          href\u003d\"../util/Formatter.html#detail\"\u003eDetails\u003c/a\u003e section of the\n     *          formatter class specification\n     *\n     * @return  A formatted string\n     *\n     * @see  java.util.Formatter\n     * @since  1.5\n     */\n    public static String format(Locale l, String format, Object... args) {\n        return new Formatter(l).format(format, args).toString();\n    }\n\n    /**\n     * Returns the string representation of the {@code Object} argument.\n     *\n     * @param   obj   an {@code Object}.\n     * @return  if the argument is {@code null}, then a string equal to\n     *          {@code \"null\"}; otherwise, the value of\n     *          {@code obj.toString()} is returned.\n     * @see     java.lang.Object#toString()\n     */\n    public static String valueOf(Object obj) {\n        return (obj \u003d\u003d null) ? \"null\" : obj.toString();\n    }\n\n    /**\n     * Returns the string representation of the {@code char} array\n     * argument. The contents of the character array are copied; subsequent\n     * modification of the character array does not affect the returned\n     * string.\n     *\n     * @param   data     the character array.\n     * @return  a {@code String} that contains the characters of the\n     *          character array.\n     */\n    public static String valueOf(char data[]) {\n        return new String(data);\n    }\n\n    /**\n     * Returns the string representation of a specific subarray of the\n     * {@code char} array argument.\n     * \u003cp\u003e\n     * The {@code offset} argument is the index of the first\n     * character of the subarray. The {@code count} argument\n     * specifies the length of the subarray. The contents of the subarray\n     * are copied; subsequent modification of the character array does not\n     * affect the returned string.\n     *\n     * @param   data     the character array.\n     * @param   offset   initial offset of the subarray.\n     * @param   count    length of the subarray.\n     * @return  a {@code String} that contains the characters of the\n     *          specified subarray of the character array.\n     * @exception IndexOutOfBoundsException if {@code offset} is\n     *          negative, or {@code count} is negative, or\n     *          {@code offset+count} is larger than\n     *          {@code data.length}.\n     */\n    public static String valueOf(char data[], int offset, int count) {\n        return new String(data, offset, count);\n    }\n\n    /**\n     * Equivalent to {@link #valueOf(char[], int, int)}.\n     *\n     * @param   data     the character array.\n     * @param   offset   initial offset of the subarray.\n     * @param   count    length of the subarray.\n     * @return  a {@code String} that contains the characters of the\n     *          specified subarray of the character array.\n     * @exception IndexOutOfBoundsException if {@code offset} is\n     *          negative, or {@code count} is negative, or\n     *          {@code offset+count} is larger than\n     *          {@code data.length}.\n     */\n    public static String copyValueOf(char data[], int offset, int count) {\n        return new String(data, offset, count);\n    }\n\n    /**\n     * Equivalent to {@link #valueOf(char[])}.\n     *\n     * @param   data   the character array.\n     * @return  a {@code String} that contains the characters of the\n     *          character array.\n     */\n    public static String copyValueOf(char data[]) {\n        return new String(data);\n    }\n\n    /**\n     * Returns the string representation of the {@code boolean} argument.\n     *\n     * @param   b   a {@code boolean}.\n     * @return  if the argument is {@code true}, a string equal to\n     *          {@code \"true\"} is returned; otherwise, a string equal to\n     *          {@code \"false\"} is returned.\n     */\n    public static String valueOf(boolean b) {\n        return b ? \"true\" : \"false\";\n    }\n\n    /**\n     * Returns the string representation of the {@code char}\n     * argument.\n     *\n     * @param   c   a {@code char}.\n     * @return  a string of length {@code 1} containing\n     *          as its single character the argument {@code c}.\n     */\n    public static String valueOf(char c) {\n        if (COMPACT_STRINGS \u0026\u0026 StringLatin1.canEncode(c)) {\n            return new String(StringLatin1.toBytes(c), LATIN1);\n        }\n        return new String(StringUTF16.toBytes(c), UTF16);\n    }\n\n    /**\n     * Returns the string representation of the {@code int} argument.\n     * \u003cp\u003e\n     * The representation is exactly the one returned by the\n     * {@code Integer.toString} method of one argument.\n     *\n     * @param   i   an {@code int}.\n     * @return  a string representation of the {@code int} argument.\n     * @see     java.lang.Integer#toString(int, int)\n     */\n    public static String valueOf(int i) {\n        return Integer.toString(i);\n    }\n\n    /**\n     * Returns the string representation of the {@code long} argument.\n     * \u003cp\u003e\n     * The representation is exactly the one returned by the\n     * {@code Long.toString} method of one argument.\n     *\n     * @param   l   a {@code long}.\n     * @return  a string representation of the {@code long} argument.\n     * @see     java.lang.Long#toString(long)\n     */\n    public static String valueOf(long l) {\n        return Long.toString(l);\n    }\n\n    /**\n     * Returns the string representation of the {@code float} argument.\n     * \u003cp\u003e\n     * The representation is exactly the one returned by the\n     * {@code Float.toString} method of one argument.\n     *\n     * @param   f   a {@code float}.\n     * @return  a string representation of the {@code float} argument.\n     * @see     java.lang.Float#toString(float)\n     */\n    public static String valueOf(float f) {\n        return Float.toString(f);\n    }\n\n    /**\n     * Returns the string representation of the {@code double} argument.\n     * \u003cp\u003e\n     * The representation is exactly the one returned by the\n     * {@code Double.toString} method of one argument.\n     *\n     * @param   d   a {@code double}.\n     * @return  a  string representation of the {@code double} argument.\n     * @see     java.lang.Double#toString(double)\n     */\n    public static String valueOf(double d) {\n        return Double.toString(d);\n    }\n\n    /**\n     * Returns a canonical representation for the string object.\n     * \u003cp\u003e\n     * A pool of strings, initially empty, is maintained privately by the\n     * class {@code String}.\n     * \u003cp\u003e\n     * When the intern method is invoked, if the pool already contains a\n     * string equal to this {@code String} object as determined by\n     * the {@link #equals(Object)} method, then the string from the pool is\n     * returned. Otherwise, this {@code String} object is added to the\n     * pool and a reference to this {@code String} object is returned.\n     * \u003cp\u003e\n     * It follows that for any two strings {@code s} and {@code t},\n     * {@code s.intern() \u003d\u003d t.intern()} is {@code true}\n     * if and only if {@code s.equals(t)} is {@code true}.\n     * \u003cp\u003e\n     * All literal strings and string-valued constant expressions are\n     * interned. String literals are defined in section 3.10.5 of the\n     * \u003ccite\u003eThe Java\u0026trade; Language Specification\u003c/cite\u003e.\n     *\n     * @return  a string that has the same contents as this string, but is\n     *          guaranteed to be from a pool of unique strings.\n     * @jls 3.10.5 String Literals\n     */\n    public native String intern();\n\n    /**\n     * Returns a string whose value is the concatenation of this\n     * string repeated {@code count} times.\n     * \u003cp\u003e\n     * If this string is empty or count is zero then the empty\n     * string is returned.\n     *\n     * @param   count number of times to repeat\n     *\n     * @return  A string composed of this string repeated\n     *          {@code count} times or the empty string if this\n     *          string is empty or count is zero\n     *\n     * @throws  IllegalArgumentException if the {@code count} is\n     *          negative.\n     *\n     * @since 11\n     */\n    public String repeat(int count) {\n        if (count \u003c 0) {\n            throw new IllegalArgumentException(\"count is negative: \" + count);\n        }\n        if (count \u003d\u003d 1) {\n            return this;\n        }\n        final int len \u003d value.length;\n        if (len \u003d\u003d 0 || count \u003d\u003d 0) {\n            return \"\";\n        }\n        if (len \u003d\u003d 1) {\n            final byte[] single \u003d new byte[count];\n            Arrays.fill(single, value[0]);\n            return new String(single, coder);\n        }\n        if (Integer.MAX_VALUE / count \u003c len) {\n            throw new OutOfMemoryError(\"Repeating \" + len + \" bytes String \" + count +\n                    \" times will produce a String exceeding maximum size.\");\n        }\n        final int limit \u003d len * count;\n        final byte[] multiple \u003d new byte[limit];\n        System.arraycopy(value, 0, multiple, 0, len);\n        int copied \u003d len;\n        for (; copied \u003c limit - copied; copied \u003c\u003c\u003d 1) {\n            System.arraycopy(multiple, 0, multiple, copied, copied);\n        }\n        System.arraycopy(multiple, 0, multiple, copied, limit - copied);\n        return new String(multiple, coder);\n    }\n\n    ////////////////////////////////////////////////////////////////\n\n    /**\n     * Copy character bytes from this string into dst starting at dstBegin.\n     * This method doesn\u0027t perform any range checking.\n     *\n     * Invoker guarantees: dst is in UTF16 (inflate itself for asb), if two\n     * coders are different, and dst is big enough (range check)\n     *\n     * @param dstBegin  the char index, not offset of byte[]\n     * @param coder     the coder of dst[]\n     */\n    void getBytes(byte dst[], int dstBegin, byte coder) {\n        if (coder() \u003d\u003d coder) {\n            System.arraycopy(value, 0, dst, dstBegin \u003c\u003c coder, value.length);\n        } else {    // this.coder \u003d\u003d LATIN \u0026\u0026 coder \u003d\u003d UTF16\n            StringLatin1.inflate(value, 0, dst, dstBegin, value.length);\n        }\n    }\n\n    /*\n     * Package private constructor. Trailing Void argument is there for\n     * disambiguating it against other (public) constructors.\n     *\n     * Stores the char[] value into a byte[] that each byte represents\n     * the8 low-order bits of the corresponding character, if the char[]\n     * contains only latin1 character. Or a byte[] that stores all\n     * characters in their byte sequences defined by the {@code StringUTF16}.\n     */\n    String(char[] value, int off, int len, Void sig) {\n        if (len \u003d\u003d 0) {\n            this.value \u003d \"\".value;\n            this.coder \u003d \"\".coder;\n            return;\n        }\n        if (COMPACT_STRINGS) {\n            byte[] val \u003d StringUTF16.compress(value, off, len);\n            if (val !\u003d null) {\n                this.value \u003d val;\n                this.coder \u003d LATIN1;\n                return;\n            }\n        }\n        this.coder \u003d UTF16;\n        this.value \u003d StringUTF16.toBytes(value, off, len);\n    }\n\n    /*\n     * Package private constructor. Trailing Void argument is there for\n     * disambiguating it against other (public) constructors.\n     */\n    String(AbstractStringBuilder asb, Void sig) {\n        byte[] val \u003d asb.getValue();\n        int length \u003d asb.length();\n        if (asb.isLatin1()) {\n            this.coder \u003d LATIN1;\n            this.value \u003d Arrays.copyOfRange(val, 0, length);\n        } else {\n            if (COMPACT_STRINGS) {\n                byte[] buf \u003d StringUTF16.compress(val, 0, length);\n                if (buf !\u003d null) {\n                    this.coder \u003d LATIN1;\n                    this.value \u003d buf;\n                    return;\n                }\n            }\n            this.coder \u003d UTF16;\n            this.value \u003d Arrays.copyOfRange(val, 0, length \u003c\u003c 1);\n        }\n    }\n\n   /*\n    * Package private constructor which shares value array for speed.\n    */\n    String(byte[] value, byte coder) {\n        this.value \u003d value;\n        this.coder \u003d coder;\n    }\n\n    byte coder() {\n        return COMPACT_STRINGS ? coder : UTF16;\n    }\n\n    byte[] value() {\n        return value;\n    }\n\n    private boolean isLatin1() {\n        return COMPACT_STRINGS \u0026\u0026 coder \u003d\u003d LATIN1;\n    }\n\n    @Native static final byte LATIN1 \u003d 0;\n    @Native static final byte UTF16  \u003d 1;\n\n    /*\n     * StringIndexOutOfBoundsException  if {@code index} is\n     * negative or greater than or equal to {@code length}.\n     */\n    static void checkIndex(int index, int length) {\n        if (index \u003c 0 || index \u003e\u003d length) {\n            throw new StringIndexOutOfBoundsException(\"index \" + index +\n                                                      \",length \" + length);\n        }\n    }\n\n    /*\n     * StringIndexOutOfBoundsException  if {@code offset}\n     * is negative or greater than {@code length}.\n     */\n    static void checkOffset(int offset, int length) {\n        if (offset \u003c 0 || offset \u003e length) {\n            throw new StringIndexOutOfBoundsException(\"offset \" + offset +\n                                                      \",length \" + length);\n        }\n    }\n\n    /*\n     * Check {@code offset}, {@code count} against {@code 0} and {@code length}\n     * bounds.\n     *\n     * @throws  StringIndexOutOfBoundsException\n     *          If {@code offset} is negative, {@code count} is negative,\n     *          or {@code offset} is greater than {@code length - count}\n     */\n    static void checkBoundsOffCount(int offset, int count, int length) {\n        if (offset \u003c 0 || count \u003c 0 || offset \u003e length - count) {\n            throw new StringIndexOutOfBoundsException(\n                \"offset \" + offset + \", count \" + count + \", length \" + length);\n        }\n    }\n\n    /*\n     * Check {@code begin}, {@code end} against {@code 0} and {@code length}\n     * bounds.\n     *\n     * @throws  StringIndexOutOfBoundsException\n     *          If {@code begin} is negative, {@code begin} is greater than\n     *          {@code end}, or {@code end} is greater than {@code length}.\n     */\n    static void checkBoundsBeginEnd(int begin, int end, int length) {\n        if (begin \u003c 0 || begin \u003e end || end \u003e length) {\n            throw new StringIndexOutOfBoundsException(\n                \"begin \" + begin + \", end \" + end + \", length \" + length);\n        }\n    }\n\n    /**\n     * Returns the string representation of the {@code codePoint}\n     * argument.\n     *\n     * @param   codePoint a {@code codePoint}.\n     * @return  a string of length {@code 1} or {@code 2} containing\n     *          as its single character the argument {@code codePoint}.\n     * @throws IllegalArgumentException if the specified\n     *          {@code codePoint} is not a {@linkplain Character#isValidCodePoint\n     *          valid Unicode code point}.\n     */\n    static String valueOfCodePoint(int codePoint) {\n        if (COMPACT_STRINGS \u0026\u0026 StringLatin1.canEncode(codePoint)) {\n            return new String(StringLatin1.toBytes((char)codePoint), LATIN1);\n        } else if (Character.isBmpCodePoint(codePoint)) {\n            return new String(StringUTF16.toBytes((char)codePoint), UTF16);\n        } else if (Character.isSupplementaryCodePoint(codePoint)) {\n            return new String(StringUTF16.toBytesSupplementary(codePoint), UTF16);\n        }\n\n        throw new IllegalArgumentException(\n            format(\"Not a valid Unicode code point: 0x%X\", codePoint));\n    }\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/String.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:741)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:738)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:366)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/String.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

6åé 17, 2024 11:46:39 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
åxçê: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/String.java"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/String.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:741)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:738)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:385)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	... 16 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/String.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.06.17 23:47:31 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:48:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:48:51 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:49:15 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:49:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:49:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:49:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:49:17 WARN  Using indexes to guess the definition of English
2024.06.17 23:50:01 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:10 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:22 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:22 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:23 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:32 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:32 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:53:35 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:58:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:58:13 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:58:15 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:58:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:58:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:58:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:58:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:58:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:58:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:58:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:58:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:58:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:58:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:58:30 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:59:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:59:10 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.17 23:59:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:36 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:36 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:38 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:39 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:40 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:42 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:55 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:56 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:57 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:57 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:03:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:00 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 18, 2024 12:04:02 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2354
2024.06.18 00:04:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:04 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:06 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:08 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:08 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:10 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:12 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:14 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:14 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:23 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:30 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 18, 2024 12:04:30 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2571
2024.06.18 00:04:30 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:32 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:33 INFO  compiling root (15 scala sources)
2024.06.18 00:04:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:04:33 INFO  time: compiled root in 0.59s
2024.06.18 00:04:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:13 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:15 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 18, 2024 12:05:34 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2702
2024.06.18 00:05:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:35 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:35 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:39 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:40 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:40 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:46 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:47 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:48 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:48 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:05:49 INFO  compiling root (15 scala sources)
2024.06.18 00:05:49 INFO  time: compiled root in 0.52s
2024.06.18 00:05:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 18, 2024 12:05:56 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2804
2024.06.18 00:06:09 INFO  compiling root (15 scala sources)
2024.06.18 00:06:09 INFO  time: compiled root in 0.51s
2024.06.18 00:06:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 18, 2024 12:06:31 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2864
2024.06.18 00:06:31 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:08:44 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:10:50 INFO  compiling root (15 scala sources)
2024.06.18 00:10:50 INFO  time: compiled root in 0.56s
2024.06.18 00:14:21 INFO  compiling root (15 scala sources)
2024.06.18 00:14:21 INFO  time: compiled root in 0.64s
2024.06.18 00:36:33 INFO  compiling root (15 scala sources)
2024.06.18 00:36:33 INFO  time: compiled root in 0.64s
2024.06.18 00:36:51 WARN  Using indexes to guess the definition of ScoreDto
2024.06.18 00:36:51 WARN  Using indexes to guess the definition of ScoreDto
2024.06.18 00:36:51 INFO  compiling root (15 scala sources)
2024.06.18 00:36:51 INFO  time: compiled root in 0.54s
6åé 18, 2024 12:47:01 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3173
6åé 18, 2024 12:47:02 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3181
6åé 18, 2024 12:47:03 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3189
6åé 18, 2024 12:47:04 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3197
6åé 18, 2024 12:47:08 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3205
6åé 18, 2024 12:47:09 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3213
2024.06.18 00:47:10 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:47:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 18, 2024 12:47:12 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3224
6åé 18, 2024 12:47:16 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3232
6åé 18, 2024 12:47:26 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3241
6åé 18, 2024 12:47:28 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3250
6åé 18, 2024 12:47:31 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3259
6åé 18, 2024 12:47:34 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3268
6åé 18, 2024 12:47:37 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3277
6åé 18, 2024 12:47:39 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3285
6åé 18, 2024 12:47:43 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3294
6åé 18, 2024 12:47:44 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3302
6åé 18, 2024 12:47:45 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3310
2024.06.18 00:47:45 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.18 00:47:47 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.18 00:50:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:50:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:50:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:50:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:50:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:50:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:50:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:50:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:50:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:50:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:50:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:56:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:57:05 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:57:06 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:58:57 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.18 00:59:01 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
6åé 18, 2024 12:59:21 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3564
6åé 18, 2024 1:05:06 åﬂëO org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
èÓïÒ: Unsupported notification method: $/setTrace
6åé 18, 2024 1:05:08 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3574
2024.06.18 01:05:19 WARN  Using indexes to guess the definition of ExamIdDto
2024.06.18 01:05:20 WARN  Using indexes to guess the definition of ExamIdDto
6åé 18, 2024 1:05:20 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3599
2024.06.18 01:05:35 WARN  Using indexes to guess the definition of toDomain
2024.06.18 01:07:53 INFO  compiling root (31 scala sources and 1 java source)
2024.06.18 01:07:54 INFO  time: compiled root in 1.34s
2024.06.18 01:07:54 INFO  compiling root (31 scala sources and 1 java source)
2024.06.18 01:07:55 INFO  time: compiled root in 1.12s
2024.06.18 01:08:12 INFO  compiling root (31 scala sources and 1 java source)
2024.06.18 01:08:13 INFO  time: compiled root in 1.06s
2024.06.18 01:08:13 INFO  compiling root (31 scala sources and 1 java source)
2024.06.18 01:08:14 INFO  time: compiled root in 0.86s
6åé 18, 2024 1:09:09 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3774
2024.06.18 01:09:27 INFO  compiling root (31 scala sources and 1 java source)
2024.06.18 01:09:29 INFO  time: compiled root in 1.12s
2024.06.18 01:09:29 INFO  compiling root (31 scala sources and 1 java source)
2024.06.18 01:09:30 INFO  time: compiled root in 1.03s
6åé 18, 2024 1:09:30 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3828
2024.06.18 01:09:33 INFO  compiling root (31 scala sources and 1 java source)
2024.06.18 01:09:33 INFO  time: compiled root in 0.73s
2024.06.18 01:16:17 INFO  compiling root (31 scala sources and 1 java source)
2024.06.18 01:16:17 INFO  time: compiled root in 0.82s
2024.06.18 01:20:51 INFO  Shutting down server
2024.06.18 01:20:51 INFO  shutting down Metals
2024.06.18 01:20:51 INFO  Shut down connection with build server.
2024.06.18 01:20:51 INFO  Shut down connection with build server.
2024.06.18 01:20:51 INFO  Shut down connection with build server.
2024.06.18 01:20:51 INFO  Exiting server
2024.06.18 01:21:11 INFO  Started: Metals version 1.3.1 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.1.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@43d3f0a1]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@42a71a92]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@43d3f0a1]
2024.06.18 01:21:11 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
6åé 18, 2024 1:21:13 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1
2024.06.18 01:21:13 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\controller\ExamResultController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.18 01:21:13 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\usecase\ExamResultUsecase.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.18 01:21:13 INFO  Attempting to connect to the build server...
2024.06.18 01:21:13 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.18 01:21:13 INFO  Attempting to connect to the build server...
2024.06.18 01:21:13 INFO  Attempting to connect to the build server...
2024.06.18 01:21:13 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.18 01:21:14 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.18 01:21:14 INFO  time: Connected to build server in 0.58s
2024.06.18 01:21:14 INFO  Connected to Build server: Bloop v1.5.17
2024.06.18 01:21:14 INFO  time: Imported build in 0.64s
2024.06.18 01:22:33 INFO  compiling root (31 scala sources and 1 java source)
2024.06.18 01:22:35 WARN  Invalid text document uri received from build server: file:///C:/Users/sakai/Developments/exam-manager/app/usecases/ExamResultUsecase.scala
2024.06.18 01:22:35 WARN  Invalid text document uri received from build server: file:///C:/Users/sakai/Developments/exam-manager/app/infrastructure/db/tables/ExamResultTable.scala
2024.06.18 01:22:35 INFO  time: compiled root in 1.69s
2024.06.18 01:22:46 INFO  time: indexed workspace in 1m31s
2024.06.18 01:22:46 INFO  compiling root (31 scala sources and 1 java source)
2024.06.18 01:22:46 INFO  time: compiled root in 0.83s
2024.06.18 01:22:47 INFO  compiling root (31 scala sources and 1 java source)
2024.06.18 01:22:47 INFO  time: compiled root in 0.89s
2024.06.18 01:22:48 INFO  compiling root (31 scala sources and 1 java source)
2024.06.18 01:22:48 INFO  time: compiled root in 0.94s
2024.06.18 01:22:49 WARN  Using indexes to guess the definition of ExamResultDto
2024.06.18 01:22:50 WARN  Using indexes to guess the definition of ExamResultDto
2024.06.18 01:22:51 WARN  Using indexes to guess the definition of ExamResultDto
2024.06.18 01:22:51 INFO  compiling root (31 scala sources and 1 java source)
2024.06.18 01:22:51 INFO  time: compiled root in 0.64s
2024.06.18 01:38:20 INFO  Shutting down server
2024.06.18 01:38:20 INFO  shutting down Metals
2024.06.18 01:38:20 INFO  Shut down connection with build server.
2024.06.18 01:38:20 INFO  Shut down connection with build server.
2024.06.18 01:38:20 INFO  Shut down connection with build server.
2024.06.18 01:38:20 INFO  Exiting server
2024.06.18 22:32:06 INFO  Started: Metals version 1.3.1 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.1.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@218d9daa]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@7fd2316c]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@218d9daa]
2024.06.18 22:32:06 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.18 22:32:08 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\usecase\ExamResultUsecase.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.18 22:32:08 INFO  Attempting to connect to the build server...
2024.06.19 01:32:22 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.19 01:32:22 INFO  Attempting to connect to the build server...
2024.06.19 01:32:22 INFO  Attempting to connect to the build server...
2024.06.19 01:32:22 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.19 01:32:22 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.19 01:32:23 INFO  time: Connected to build server in 180m14s
2024.06.19 01:32:23 INFO  Connected to Build server: Bloop v1.5.17
2024.06.19 01:32:23 INFO  time: Imported build in 0.76s
2024.06.19 09:32:07 INFO  time: indexed workspace in 479m46s
2024.06.22 14:08:44 INFO  Started: Metals version 1.3.1 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.1.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@9c3d7df]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@6707ae13]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@9c3d7df]
2024.06.22 14:08:49 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.22 14:08:51 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\usecase\ExamResultUsecase.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.22 14:08:51 INFO  Attempting to connect to the build server...
2024.06.22 14:09:07 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.22 14:09:07 INFO  Attempting to connect to the build server...
2024.06.22 14:09:07 INFO  Attempting to connect to the build server...
2024.06.22 14:09:07 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.22 14:09:08 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.22 14:09:08 INFO  time: Connected to build server in 16s
2024.06.22 14:09:08 INFO  Connected to Build server: Bloop v1.5.17
2024.06.22 14:09:09 INFO  time: Imported build in 0.76s
6åé 22, 2024 2:09:25 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 19
6åé 22, 2024 2:09:28 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 28
6åé 22, 2024 2:09:30 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 37
6åé 22, 2024 2:09:38 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 46
6åé 22, 2024 2:09:55 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 55
6åé 22, 2024 2:09:59 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 63
6åé 22, 2024 2:10:06 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 82
6åé 22, 2024 2:10:07 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 91
6åé 22, 2024 2:10:09 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 100
6åé 22, 2024 2:10:11 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 109
6åé 22, 2024 2:10:33 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 119
2024.06.22 14:12:52 INFO  time: indexed workspace in 3m43s
2024.06.22 14:18:53 INFO  compiling root (31 scala sources and 1 java source)
2024.06.22 14:18:57 WARN  Using indexes to guess the definition of subject
2024.06.22 14:18:57 WARN  Using indexes to guess the definition of subject
6åé 22, 2024 2:18:57 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 168
2024.06.22 14:19:01 INFO  time: compiled root in 8.39s
2024.06.22 14:19:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Score.scala
2024.06.22 14:19:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.22 14:19:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
2024.06.22 14:19:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.22 14:19:02 INFO  compiling root (31 scala sources and 1 java source)
2024.06.22 14:19:05 INFO  time: compiled root in 2.88s
6åé 22, 2024 2:19:18 åﬂå„ scala.meta.internal.pc.CompletionProvider expected$1
åxçê: offset 944, count -1, length 1046
2024.06.22 14:20:45 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
6åé 22, 2024 2:21:08 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 262
2024.06.22 14:21:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
6åé 22, 2024 2:21:13 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 269
6åé 22, 2024 2:21:41 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 442
6åé 22, 2024 2:21:50 åﬂå„ scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
èÓïÒ: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
6åé 22, 2024 2:21:51 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 515
6åé 22, 2024 2:21:51 åﬂå„ scala.meta.internal.pc.CompilerAccess handleError
èdëÂ: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\sakai\Developments\exam-manager\.metals\.reports\metals-full\2024-06-22\r_compiler-error_(root)_14-21-51-517.md
6åé 22, 2024 2:22:30 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 708
6åé 22, 2024 2:23:35 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1017
2024.06.22 14:24:44 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\controller\ExamResultController.scala
scala.meta.tokenizers.TokenizeException: <input>:25: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
                .recover {case ex => InternalServerError(s"Failed to save exam result: $")}
                                                           ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:656)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:364)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:383)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:514)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 22, 2024 2:25:52 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1638
2024.06.22 14:25:57 INFO  compiling root (31 scala sources and 1 java source)
2024.06.22 14:25:59 INFO  time: compiled root in 1.99s
2024.06.22 14:27:40 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:27:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:28:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:28:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:28:20 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:28:22 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:28:22 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:28:26 INFO  compiling root (31 scala sources and 1 java source)
2024.06.22 14:28:27 INFO  time: compiled root in 1.69s
2024.06.22 14:28:27 INFO  compiling root (31 scala sources and 1 java source)
2024.06.22 14:28:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:28:29 INFO  time: compiled root in 1.46s
2024.06.22 14:28:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:10 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:12 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:12 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:13 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:20 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:22 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:32 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.22 14:29:32 INFO  compiling root (31 scala sources and 1 java source)
2024.06.22 14:29:34 INFO  time: compiled root in 1.42s
2024.06.22 14:29:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
6åé 22, 2024 2:30:35 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2074
2024.06.22 14:30:35 INFO  compiling root (31 scala sources and 1 java source)
2024.06.22 14:30:36 INFO  time: compiled root in 1.35s
2024.06.22 14:30:44 WARN  Using indexes to guess the definition of ExamIdRequestConverter
6åé 22, 2024 2:31:01 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2139
6åé 22, 2024 2:31:04 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2149
2024.06.22 19:19:01 INFO  Shutting down server
2024.06.22 19:19:01 INFO  shutting down Metals
2024.06.22 19:19:02 INFO  Shut down connection with build server.
2024.06.22 19:19:02 INFO  Shut down connection with build server.
2024.06.22 19:19:02 INFO  Shut down connection with build server.
2024.06.22 19:19:01 INFO  Exiting server
2024.06.22 19:19:15 INFO  Started: Metals version 1.3.1 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.1.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@284ec701]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@784e480e]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@284ec701]
2024.06.22 19:19:16 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.22 19:19:17 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\examResult\valueObject\ExamIdDto.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.22 19:19:17 INFO  Attempting to connect to the build server...
2024.06.22 19:19:17 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.22 19:19:17 INFO  Attempting to connect to the build server...
2024.06.22 19:19:17 INFO  Attempting to connect to the build server...
2024.06.22 19:19:17 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.22 19:19:18 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.22 19:19:18 INFO  time: Connected to build server in 0.74s
2024.06.22 19:19:18 INFO  Connected to Build server: Bloop v1.5.17
2024.06.22 19:19:19 INFO  time: Imported build in 0.57s
2024.06.22 19:21:09 INFO  time: indexed workspace in 1m49s
2024.06.22 19:25:09 INFO  compiling root (31 scala sources and 1 java source)
2024.06.22 19:25:10 INFO  time: compiled root in 1.12s
2024.06.22 19:25:10 INFO  compiling root (31 scala sources and 1 java source)
2024.06.22 19:25:12 INFO  time: compiled root in 1.14s
2024.06.22 19:25:12 INFO  compiling root (31 scala sources and 1 java source)
2024.06.22 19:25:13 INFO  time: compiled root in 0.92s
2024.06.23 13:58:38 INFO  Started: Metals version 1.3.2 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.1.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@143e06d9]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@70276930]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@143e06d9]
2024.06.23 13:58:42 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
6åé 23, 2024 1:58:43 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2
6åé 23, 2024 1:58:43 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1
2024.06.23 13:58:43 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\examResult\valueObject\ExamIdDto.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.23 13:58:43 INFO  Attempting to connect to the build server...
2024.06.23 13:59:02 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.23 13:59:15 INFO  Attempting to connect to the build server...
2024.06.23 13:59:15 INFO  Attempting to connect to the build server...
2024.06.23 13:59:15 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.23 13:59:15 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.23 13:59:22 INFO  time: Connected to build server in 38s
2024.06.23 13:59:22 INFO  Connected to Build server: Bloop v1.5.18
2024.06.23 13:59:23 INFO  time: Imported build in 0.43s
2024.06.23 14:00:08 INFO  time: indexed workspace in 44s
2024.06.23 14:02:15 INFO  compiling root (31 scala sources and 1 java source)
2024.06.23 14:02:20 INFO  time: compiled root in 5.18s
2024.06.23 14:02:20 INFO  compiling root (31 scala sources and 1 java source)
2024.06.23 14:02:23 INFO  time: compiled root in 2.7s
2024.06.24 08:35:17 INFO  Started: Metals version 1.3.2 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.1.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@143e06d9]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@70276930]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@143e06d9]
2024.06.24 08:35:22 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.24 08:35:24 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\controller\ExamResultController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.24 08:35:24 INFO  Attempting to connect to the build server...
2024.06.24 08:35:40 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.24 08:35:40 INFO  Attempting to connect to the build server...
2024.06.24 08:35:40 INFO  Attempting to connect to the build server...
2024.06.24 08:35:40 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.24 08:35:40 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.24 08:35:40 INFO  time: Connected to build server in 16s
2024.06.24 08:35:40 INFO  Connected to Build server: Bloop v1.5.18
2024.06.24 08:35:40 INFO  time: Imported build in 0.64s
2024.06.24 08:43:35 INFO  time: indexed workspace in 7m53s
2024.06.24 21:24:33 INFO  compiling root (31 scala sources and 1 java source)
2024.06.24 21:24:41 INFO  time: compiled root in 8.03s
2024.06.24 21:25:45 INFO  compiling root (31 scala sources and 1 java source)
2024.06.24 21:25:48 INFO  time: compiled root in 3.16s
6åé 24, 2024 9:26:06 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 83
6åé 24, 2024 9:26:36 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 108
6åé 24, 2024 9:28:14 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 370
6åé 24, 2024 9:29:08 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 604
6åé 24, 2024 9:29:26 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 718
6åé 24, 2024 9:29:49 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 778
6åé 24, 2024 9:32:21 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1445
6åé 24, 2024 9:32:51 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1621
6åé 24, 2024 9:35:35 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2345
6åé 24, 2024 9:36:59 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2632
6åé 24, 2024 9:41:01 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3084
6åé 24, 2024 9:41:02 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3089
6åé 24, 2024 9:41:06 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3120
6åé 24, 2024 9:41:23 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3197
6åé 24, 2024 9:41:37 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3247
6åé 24, 2024 9:43:13 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3294
6åé 24, 2024 9:43:59 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3589
6åé 24, 2024 9:45:38 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3789
2024.06.24 21:49:12 INFO  compiling root (31 scala sources and 1 java source)
2024.06.24 21:49:14 INFO  time: compiled root in 2.15s
2024.06.24 21:49:35 INFO  compiling root (31 scala sources and 1 java source)
2024.06.24 21:49:36 INFO  time: compiled root in 1.81s
2024.06.25 22:02:45 INFO  Started: Metals version 1.3.2 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.1.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@143e06d9]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@70276930]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@143e06d9]
2024.06.25 22:02:49 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.25 22:02:50 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\entity\ExamResultRequestConverter.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.25 22:02:51 INFO  Attempting to connect to the build server...
2024.06.25 22:03:04 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.25 22:03:04 INFO  Attempting to connect to the build server...
2024.06.25 22:03:04 INFO  Attempting to connect to the build server...
2024.06.25 22:03:04 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.25 22:03:05 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.25 22:03:05 INFO  time: Connected to build server in 14s
2024.06.25 22:03:05 INFO  Connected to Build server: Bloop v1.5.18
2024.06.25 22:03:05 INFO  time: Imported build in 0.64s
2024.06.25 22:03:45 INFO  time: indexed workspace in 39s
2024.06.25 22:38:27 INFO  compiling root (31 scala sources and 1 java source)
2024.06.25 22:38:32 INFO  time: compiled root in 4.94s
2024.06.25 22:44:15 INFO  compiling root (31 scala sources and 1 java source)
2024.06.25 22:44:17 INFO  time: compiled root in 2.13s
6åé 25, 2024 10:44:58 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 128
6åé 25, 2024 10:44:58 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 129
2024.06.25 22:45:09 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\entity\ExamResultRequestConverter.scala
scala.meta.tokenizers.TokenizeException: <input>:35: error: unclosed quoted identifier
        .partition(_.isLeft) match `
                                   ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:456)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:327)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 25, 2024 10:45:44 åﬂå„ scala.meta.internal.pc.CompilerAccess handleError
èdëÂ: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\sakai\Developments\exam-manager\.metals\.reports\metals-full\2024-06-25\r_compiler-error_(root)_22-45-44-288.md
6åé 25, 2024 10:46:04 åﬂå„ scala.meta.internal.pc.CompilerAccess handleError
èdëÂ: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\sakai\Developments\exam-manager\.metals\.reports\metals-full\2024-06-25\r_compiler-error_(root)_22-46-04-555.md
6åé 25, 2024 10:49:41 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1433
6åé 25, 2024 10:49:54 åﬂå„ scala.meta.internal.pc.CompilerAccess handleError
èdëÂ: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\sakai\Developments\exam-manager\.metals\.reports\metals-full\2024-06-25\r_compiler-error_(root)_22-49-54-320.md
6åé 25, 2024 10:50:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1544
6åé 25, 2024 10:50:37 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1713
2024.06.25 22:50:37 INFO  compiling root (31 scala sources and 1 java source)
2024.06.25 22:50:37 WARN  Using indexes to guess the definition of Left
2024.06.25 22:50:39 INFO  time: compiled root in 1.8s
2024.06.25 22:50:47 INFO  compiling root (31 scala sources and 1 java source)
2024.06.25 22:50:49 INFO  time: compiled root in 1.29s
2024.06.25 22:51:56 WARN  Using indexes to guess the definition of validateAndCreate
2024.06.25 22:51:56 WARN  Using indexes to guess the definition of validateAndCreate
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/dto/request/examResult/entity/ExamResultRequestConverter.scala in Map[String,<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/dto/request/examResult/entity/ExamResultRequestConverter.scala, 275, 275, 296)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/dto/request/examResult/entity/ExamResultRequestConverter.scala in Map[String,<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/dto/request/examResult/entity/ExamResultRequestConverter.scala, 275, 275, 289)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/dto/request/examResult/entity/ExamResultRequestConverter.scala in Map[String,<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/dto/request/examResult/entity/ExamResultRequestConverter.scala, 275, 275, 292)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/dto/request/examResult/entity/ExamResultRequestConverter.scala in Map[String,<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/dto/request/examResult/entity/ExamResultRequestConverter.scala, 275, 275, 293)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/dto/request/examResult/entity/ExamResultRequestConverter.scala in Map[String,<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/dto/request/examResult/entity/ExamResultRequestConverter.scala, 275, 275, 295)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/dto/request/examResult/entity/ExamResultRequestConverter.scala in Map[String,<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/dto/request/examResult/entity/ExamResultRequestConverter.scala, 275, 275, 294)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/dto/request/examResult/entity/ExamResultRequestConverter.scala in Map[String,String]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/dto/request/examResult/entity/ExamResultRequestConverter.scala, 275, 275, 294)
6åé 25, 2024 10:55:19 åﬂå„ scala.meta.internal.pc.CompilerAccess handleError
èdëÂ: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\sakai\Developments\exam-manager\.metals\.reports\metals-full\2024-06-25\r_compiler-error_(root)_22-55-19-971.md
2024.06.25 22:55:21 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\entity\ExamResultRequestConverter.scala
scala.meta.tokenizers.TokenizeException: <input>:11: error: unclosed quoted identifier
    json.asOpt[Map[String, String]] match `
                                          ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:456)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:327)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.25 22:55:21 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\request\examResult\entity\ExamResultRequestConverter.scala
scala.meta.tokenizers.TokenizeException: <input>:11: error: unclosed quoted identifier
    json.asOpt[Map[String, String]] match `
                                          ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:456)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:327)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 25, 2024 10:57:02 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2571
6åé 25, 2024 10:57:47 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2830
6åé 25, 2024 10:58:17 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3021
6åé 25, 2024 10:58:31 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3117
2024.06.25 23:00:22 INFO  compiling root (31 scala sources and 1 java source)
2024.06.25 23:00:23 INFO  time: compiled root in 1.13s
2024.06.27 00:41:02 INFO  Started: Metals version 1.3.2 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.1.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@3f3ac652]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@b1bfc9d]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@3f3ac652]
2024.06.27 00:41:06 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.27 00:41:07 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\usecase\ExamResultUsecase.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.27 00:41:08 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\usecase\ExamResultUsecase.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.27 00:41:08 INFO  Attempting to connect to the build server...
2024.06.27 00:41:12 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\usecase\ExamResultUsecase.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.27 00:41:12 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\usecase\ExamResultUsecase.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.27 00:41:13 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\controller\ExamResultController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.27 00:41:20 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.27 00:41:20 INFO  Attempting to connect to the build server...
2024.06.27 00:41:20 INFO  Attempting to connect to the build server...
2024.06.27 00:41:20 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.27 00:41:20 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.27 00:41:20 INFO  time: Connected to build server in 12s
2024.06.27 00:41:20 INFO  Connected to Build server: Bloop v1.5.18
2024.06.27 00:41:21 INFO  time: Imported build in 0.47s
2024.06.27 00:41:55 INFO  time: indexed workspace in 34s
2024.06.27 00:41:59 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 00:42:05 INFO  time: compiled root in 5.74s
2024.06.27 00:42:05 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 00:42:08 INFO  time: compiled root in 3.11s
6åé 27, 2024 12:42:12 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 69
6åé 27, 2024 12:42:14 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 76
6åé 27, 2024 12:42:15 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 89
6åé 27, 2024 12:42:16 åﬂëO scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
èÓïÒ: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
6åé 27, 2024 12:42:19 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 108
2024.06.27 00:42:43 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\controller\ExamResultController.scala
scala.meta.tokenizers.TokenizeException: <input>:17: error: unclosed quoted identifier
  def saveExamResult: Action[JsValue] = Action.async(parse.json) `
                                                                 ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:456)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:327)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.27 00:44:55 ERROR scalafmt: C:\Users\sakai\Developments\exam-manager\app\controller\ExamResultController.scala:20: error: [dialect scala213] case expected but } found
    }
    ^
2024.06.27 00:44:55 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 00:44:55 INFO  time: compiled root in 0.34s
6åé 27, 2024 12:45:03 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 777
6åé 27, 2024 12:45:18 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 876
6åé 27, 2024 12:45:21 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 900
6åé 27, 2024 12:46:01 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1170
6åé 27, 2024 12:46:31 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1392
2024.06.27 00:47:09 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\controller\ExamResultController.scala
scala.meta.tokenizers.TokenizeException: <input>:26: error: unclosed string interpolation
                    InternalServerError(s"Failed to save exam result;
                                          ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:605)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 27, 2024 12:49:13 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2253
6åé 27, 2024 12:49:14 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2255
2024.06.27 00:49:21 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\controller\ExamResultController.scala
scala.meta.tokenizers.TokenizeException: <input>:32: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
            Future.successful(badRequest(s"Invalid parameters: $"))
                                           ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:598)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.27 00:49:32 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 00:49:33 INFO  time: compiled root in 1.42s
2024.06.27 00:50:16 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 00:50:17 INFO  time: compiled root in 1.22s
2024.06.27 00:50:47 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 00:50:48 INFO  time: compiled root in 1.09s
6åé 27, 2024 12:50:50 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2590
2024.06.27 00:51:05 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 00:51:05 INFO  time: compiled root in 0.89s
6åé 27, 2024 12:52:42 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2702
2024.06.27 00:52:47 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 00:52:47 INFO  time: compiled root in 0.85s
6åé 27, 2024 12:53:06 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2800
2024.06.27 00:53:08 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 00:53:08 INFO  time: compiled root in 0.83s
6åé 27, 2024 12:53:47 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2868
6åé 27, 2024 12:53:48 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2886
6åé 27, 2024 12:53:48 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2887
6åé 27, 2024 12:53:48 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2890
6åé 27, 2024 12:53:48 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2902
2024.06.27 00:53:52 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 00:53:52 INFO  time: compiled root in 0.74s
6åé 27, 2024 12:54:00 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2943
6åé 27, 2024 12:54:01 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2952
2024.06.27 00:54:01 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Score.scala
6åé 27, 2024 12:54:01 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2961
6åé 27, 2024 12:54:02 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2970
2024.06.27 00:54:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 27, 2024 12:54:04 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2979
2024.06.27 00:54:54 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Score.scala
2024.06.27 00:54:54 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Score.scala
2024.06.27 00:55:42 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.27 00:55:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.27 00:55:44 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.27 00:55:44 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.27 00:59:05 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 27, 2024 12:59:24 åﬂëO scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
èÓïÒ: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
6åé 27, 2024 1:00:39 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3241
2024.06.27 01:00:39 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala
6åé 27, 2024 1:00:50 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3250
2024.06.27 01:01:00 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:01:00 INFO  time: compiled root in 0.66s
2024.06.27 01:01:15 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:01:15 INFO  time: compiled root in 0.64s
2024.06.27 01:01:23 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:01:23 INFO  time: compiled root in 0.6s
2024.06.27 01:01:49 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:01:49 INFO  time: compiled root in 0.58s
2024.06.27 01:02:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:03:09 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:03:09 INFO  time: compiled root in 0.56s
2024.06.27 01:04:03 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:04:10 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:04:13 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:04:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:04:47 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:04:47 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:04:49 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:04:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:04:50 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:04:50 INFO  time: compiled root in 0.56s
2024.06.27 01:04:51 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
6åé 27, 2024 1:05:09 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3650
2024.06.27 01:05:14 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:05:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
6åé 27, 2024 1:05:18 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3670
6åé 27, 2024 1:05:23 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3678
2024.06.27 01:05:23 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:05:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:05:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:05:27 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:05:27 INFO  time: compiled root in 0.61s
2024.06.27 01:05:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:05:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:05:47 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:05:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:05:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:05:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:05:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:05:52 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:05:52 INFO  time: compiled root in 0.56s
2024.06.27 01:05:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:30 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:35 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:06:35 INFO  time: compiled root in 0.58s
2024.06.27 01:06:36 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:49 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:51 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:54 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:54 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:55 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:06:55 INFO  time: compiled root in 0.52s
2024.06.27 01:06:56 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:57 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:06:58 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:06:58 INFO  time: compiled root in 0.55s
2024.06.27 01:06:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:07:30 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:07:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:07:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:07:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:00 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:00 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:03 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:08:03 INFO  time: compiled root in 0.64s
2024.06.27 01:08:04 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:10 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:10 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:10 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:14 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:15 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:20 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:20 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:08:20 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:08:20 INFO  time: compiled root in 0.49s
2024.06.27 01:08:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:10:43 WARN  Using indexes to guess the definition of studentId
6åé 27, 2024 1:10:51 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4087
2024.06.27 01:10:53 WARN  Using indexes to guess the definition of fromDomain
6åé 27, 2024 1:23:29 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4308
6åé 27, 2024 1:24:16 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4579
2024.06.27 01:25:24 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:25:24 INFO  time: compiled root in 0.76s
6åé 27, 2024 1:25:58 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5181
6åé 27, 2024 1:26:02 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5189
2024.06.27 01:26:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
6åé 27, 2024 1:26:05 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5198
2024.06.27 01:26:05 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
6åé 27, 2024 1:26:07 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5208
2024.06.27 01:26:18 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:26:18 INFO  time: compiled root in 0.68s
2024.06.27 01:26:50 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:26:50 INFO  time: compiled root in 0.69s
2024.06.27 01:27:06 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Subject.scala
2024.06.27 01:27:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:09 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:29:09 INFO  time: compiled root in 0.62s
6åé 27, 2024 1:29:13 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5724
2024.06.27 01:29:13 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:13 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:20 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:22 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:23 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:23 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:29:28 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:29:28 INFO  time: compiled root in 0.57s
2024.06.27 01:29:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
6åé 27, 2024 1:30:14 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5856
2024.06.27 01:30:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:30:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
6åé 27, 2024 1:30:28 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5887
6åé 27, 2024 1:30:31 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5895
2024.06.27 01:30:32 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:30:32 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:30:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:30:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:30:33 WARN  Using indexes to guess the definition of ExamResultTable
2024.06.27 01:30:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:30:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:30:33 WARN  Using indexes to guess the definition of ExamResultTable
2024.06.27 01:30:42 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:30:42 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:30:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:30:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:30:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:30:44 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:30:44 INFO  time: compiled root in 0.5s
2024.06.27 01:30:44 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:30:45 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:30:45 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:30:45 INFO  time: compiled root in 0.55s
2024.06.27 01:30:46 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:31:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:31:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:31:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:31:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:31:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:31:33 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:31:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:31:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:31:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:31:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:31:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:31:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Using indexes to guess the definition of examId
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:27 WARN  Using indexes to guess the definition of examResults
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
6åé 27, 2024 1:33:29 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 6024
2024.06.27 01:33:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:29 WARN  Using indexes to guess the definition of run
2024.06.27 01:33:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:33:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
6åé 27, 2024 1:33:29 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 6029
6åé 27, 2024 1:33:37 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 6066
2024.06.27 01:34:06 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:06 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:28 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:30 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:30 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:34 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:35 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:35 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:37 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:38 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:38 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:39 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:41 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:43 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:45 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:46 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:47 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:48 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:49 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:54 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:55 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:56 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:57 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:34:59 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:00 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:01 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:01 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:03 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:05 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:05 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:05 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:08 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:13 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:13 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:14 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:20 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:22 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:23 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:30 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:31 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:32 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:44 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:44 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:45 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:46 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:48 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:49 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:51 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:51 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:54 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:55 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:56 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:35:57 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:00 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:00 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:01 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:03 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:03 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:06 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:06 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:06 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:08 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:11 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:12 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:15 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:16 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:17 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:20 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:21 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:23 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:24 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:26 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:29 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:36:29 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:36:29 INFO  time: compiled root in 0.57s
2024.06.27 01:36:30 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
6åé 27, 2024 1:37:51 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7101
6åé 27, 2024 1:37:53 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7111
Exception in thread "metals-watch-callback-thread" java.nio.file.NoSuchFileException: C:\Users\sakai\Developments\exam-manager\target\scala-2.13\routes\main\controllers\ReverseRoutes.scala
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:236)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3288)
	at scala.meta.internal.io.PlatformFileIO$.slurp(PlatformFileIO.scala:43)
	at scala.meta.internal.io.FileIO$.slurp(FileIO.scala:21)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionAbsolutePath.toInput(ScalametaCommonEnrichments.scala:410)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionAbsolutePathBuffers.toInputFromBuffers(MetalsEnrichments.scala:603)
	at scala.meta.internal.metals.Compilers.originInput$1(Compilers.scala:215)
	at scala.meta.internal.metals.Compilers.$anonfun$didChange$2(Compilers.scala:231)
	at scala.Option.getOrElse(Option.scala:201)
	at scala.meta.internal.metals.Compilers.$anonfun$didChange$1(Compilers.scala:230)
	at scala.Option.map(Option.scala:242)
	at scala.meta.internal.metals.Compilers.didChange(Compilers.scala:218)
	at scala.meta.internal.metals.MetalsLspService.onCreate(MetalsLspService.scala:380)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChangeWatchedFiles(ProjectMetalsLspService.scala:578)
	at scala.meta.internal.metals.ProjectMetalsLspService.$anonfun$fileWatcher$3(ProjectMetalsLspService.scala:126)
	at scala.meta.internal.metals.ProjectMetalsLspService.$anonfun$fileWatcher$3$adapted(ProjectMetalsLspService.scala:125)
	at scala.meta.internal.metals.watcher.ProjectFileWatcher$$anon$1.loop(ProjectFileWatcher.scala:199)
	at scala.meta.internal.metals.watcher.ProjectFileWatcher$$anon$1.run(ProjectFileWatcher.scala:203)
2024.06.27 01:38:37 INFO  compiling root (27 scala sources)
2024.06.27 01:38:37 WARN  Invalid text document uri received from build server: file:///C:/Users/sakai/Developments/exam-manager/target/scala-2.13/routes/main/router/Routes.scala
2024.06.27 01:38:37 INFO  time: compiled root in 0.6s
2024.06.27 01:39:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\Module.scala
2024.06.27 01:39:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\Module.scala
2024.06.27 01:43:02 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:43:04 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:43:06 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:43:06 INFO  time: compiled root in 0.76s
2024.06.27 01:43:06 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:43:07 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\HomeController.scala
2024.06.27 01:43:07 INFO  time: compiled root in 0.64s
2024.06.27 01:43:08 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\HomeController.scala
2024.06.27 01:43:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\HomeController.scala
2024.06.27 01:43:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\HomeController.scala
2024.06.27 01:43:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\HomeController.scala
2024.06.27 01:43:09 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\HomeController.scala
2024.06.27 01:43:27 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\HomeController.scala
2024.06.27 01:44:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\HomeController.scala
6åé 27, 2024 1:44:24 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7216
2024.06.27 01:44:26 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:44:26 INFO  time: compiled root in 0.58s
2024.06.27 01:44:34 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:44:34 INFO  time: compiled root in 0.59s
6åé 27, 2024 1:44:35 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7268
2024.06.27 01:44:39 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:44:39 INFO  time: compiled root in 0.69s
2024.06.27 01:44:42 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\Module.scala
2024.06.27 01:44:44 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\Module.scala
2024.06.27 01:44:44 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\Module.scala
2024.06.27 01:44:45 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\Module.scala
2024.06.27 01:44:46 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:44:46 INFO  time: compiled root in 0.67s
2024.06.27 01:44:46 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\Module.scala
6åé 27, 2024 1:44:47 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7330
2024.06.27 01:44:47 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:44:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:44:50 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:44:51 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
2024.06.27 01:44:51 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:44:51 INFO  time: compiled root in 0.84s
2024.06.27 01:44:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
6åé 27, 2024 1:44:55 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7363
2024.06.27 01:44:55 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:44:56 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:44:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:44:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:44:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:44:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:44:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:44:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:44:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:44:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:44:58 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:44:59 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:44:58 WARN  Using indexes to guess the definition of ExecutionContext
2024.06.27 01:44:59 INFO  time: compiled root in 0.69s
2024.06.27 01:45:00 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:45:38 INFO  compiling root (31 scala sources and 1 java source)
2024.06.27 01:45:38 INFO  time: compiled root in 0.5s
2024.06.27 01:45:52 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:45:53 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:46:15 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\HomeController.scala
2024.06.27 01:46:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:46:19 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.27 01:46:23 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\HomeController.scala
2024.06.27 01:46:25 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
2024.06.29 13:58:00 INFO  Started: Metals version 1.3.2 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.1.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@41d53290]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@135f89cf]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@41d53290]
2024.06.29 13:58:05 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.29 13:58:06 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.29 13:58:07 INFO  Attempting to connect to the build server...
2024.06.29 13:58:13 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\usecase\ExamResultUsecase.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.29 13:58:16 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\usecase\ExamResultUsecase.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.29 13:58:20 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\usecase\repositories\ExamResultRepository.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.29 13:58:22 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.29 13:58:22 INFO  Attempting to connect to the build server...
2024.06.29 13:58:22 INFO  Attempting to connect to the build server...
2024.06.29 13:58:22 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.29 13:58:22 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.29 13:58:22 INFO  time: Connected to build server in 15s
2024.06.29 13:58:22 INFO  Connected to Build server: Bloop v1.5.18
2024.06.29 13:58:23 INFO  time: Imported build in 0.61s
2024.06.29 13:58:34 INFO  Shutting down server
2024.06.29 13:58:34 INFO  shutting down Metals
2024.06.29 13:58:34 INFO  Shut down connection with build server.
2024.06.29 13:58:34 INFO  Shut down connection with build server.
2024.06.29 13:58:34 INFO  Shut down connection with build server.
2024.06.29 13:58:34 INFO  Exiting server
2024.06.29 13:58:50 INFO  Started: Metals version 1.3.2 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.2.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@1bc9b66a]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@19c80b2]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@1bc9b66a]
2024.06.29 13:58:51 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
6åé 29, 2024 1:58:52 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1
6åé 29, 2024 1:58:52 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2
2024.06.29 13:58:51 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\usecase\repositories\ExamResultRepository.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.29 13:58:53 INFO  Attempting to connect to the build server...
2024.06.29 13:58:53 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.29 13:58:53 INFO  Attempting to connect to the build server...
2024.06.29 13:58:53 INFO  Attempting to connect to the build server...
2024.06.29 13:58:53 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.29 13:58:53 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.29 13:58:53 INFO  time: Connected to build server in 0.69s
2024.06.29 13:58:53 INFO  Connected to Build server: Bloop v1.5.18
2024.06.29 13:58:53 INFO  time: Imported build in 0.38s
6åé 29, 2024 1:58:55 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3
6åé 29, 2024 1:58:55 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4
6åé 29, 2024 1:58:55 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 9
6åé 29, 2024 1:58:55 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7
6åé 29, 2024 1:58:59 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 23
6åé 29, 2024 1:59:02 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 33
6åé 29, 2024 1:59:08 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 47
6åé 29, 2024 1:59:13 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 61
6åé 29, 2024 1:59:15 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 70
2024.06.29 13:59:16 WARN  Using indexes to guess the definition of subject
2024.06.29 13:59:16 WARN  Using indexes to guess the definition of subject
2024.06.29 13:59:16 WARN  Using indexes to guess the definition of saveExamResult
2024.06.29 13:59:42 INFO  time: indexed workspace in 47s
2024.06.29 14:02:52 INFO  compiling root (31 scala sources and 1 java source)
2024.06.29 14:02:58 INFO  compiling root (31 scala sources and 1 java source)
2024.06.29 14:03:01 WARN  failed to generate semanticdb for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala:
java.nio.file.NoSuchFileException: C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\repository\ExamResultRepositoryImpl.scala
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:236)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3288)
	at scala.meta.internal.io.PlatformFileIO$.slurp(PlatformFileIO.scala:43)
	at scala.meta.internal.io.FileIO$.slurp(FileIO.scala:21)
	at scala.meta.inputs.Input$File.chars$lzycompute(Input.scala:55)
	at scala.meta.inputs.Input$File.chars(Input.scala:55)
	at scala.meta.internal.tokenizers.CharArrayReader.<init>(CharArrayReader.scala:27)
	at scala.meta.internal.tokenizers.LegacyScanner.<init>(LegacyScanner.scala:22)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:21)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.parsers.ScannerTokens$.apply(ScannerTokens.scala:917)
	at scala.meta.internal.parsers.ScalametaParser.<init>(ScalametaParser.scala:34)
	at scala.meta.parsers.Parse$$anon$1.apply(Parse.scala:36)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:22)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:15)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:179)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:42)
	at scala.meta.internal.semanticdb.scalac.SemanticdbPipeline$SemanticdbTyperComponent$ComputeSemanticdbPhase.saveSemanticdbForCompilationUnit(SemanticdbPipeline.scala:58)
	at scala.meta.internal.semanticdb.scalac.SemanticdbPipeline$SemanticdbTyperComponent$ComputeSemanticdbPhase.apply(SemanticdbPipeline.scala:62)
	at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:481)
	at scala.tools.nsc.Global$GlobalPhase.run(Global.scala:428)
	at scala.meta.internal.semanticdb.scalac.SemanticdbPipeline$SemanticdbTyperComponent$ComputeSemanticdbPhase.run(SemanticdbPipeline.scala:70)
	at scala.tools.nsc.Global$Run.compileUnitsInternal(Global.scala:1559)
	at scala.tools.nsc.Global$Run.compileUnits(Global.scala:1543)
	at scala.tools.nsc.Global$Run.compileSources(Global.scala:1535)
	at scala.tools.nsc.Global$Run.compileFiles(Global.scala:1648)
	at scala.tools.xsbt.CachedCompiler0.run(CompilerBridge.scala:176)
	at scala.tools.xsbt.CachedCompiler0.run(CompilerBridge.scala:139)
	at scala.tools.xsbt.CompilerBridge.run(CompilerBridge.scala:43)
	at sbt.internal.inc.AnalyzingCompiler.compile(AnalyzingCompiler.scala:91)
	at sbt.internal.inc.bloop.internal.BloopHighLevelCompiler.compileSources$1(BloopHighLevelCompiler.scala:133)
	at sbt.internal.inc.bloop.internal.BloopHighLevelCompiler.$anonfun$compile$7(BloopHighLevelCompiler.scala:159)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at sbt.internal.inc.bloop.internal.BloopHighLevelCompiler.$anonfun$compile$1(BloopHighLevelCompiler.scala:71)
	at bloop.tracing.NoopTracer$.trace(BraveTracer.scala:53)
	at sbt.internal.inc.bloop.internal.BloopHighLevelCompiler.timed$1(BloopHighLevelCompiler.scala:70)
	at sbt.internal.inc.bloop.internal.BloopHighLevelCompiler.$anonfun$compile$6(BloopHighLevelCompiler.scala:159)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at monix.eval.internal.TaskRunLoop$.startFull(TaskRunLoop.scala:81)
	at monix.eval.internal.TaskRestartCallback.syncOnSuccess(TaskRestartCallback.scala:101)
	at monix.eval.internal.TaskRestartCallback.onSuccess(TaskRestartCallback.scala:74)
	at monix.eval.internal.TaskExecuteOn$AsyncRegister$$anon$1.run(TaskExecuteOn.scala:71)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1395)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
2024.06.29 14:03:13 WARN  Unexpected javac output: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.sourcegraph.shaded.com.sourcegraph.semanticdb_javac.SemanticdbJavacOptions (file:/C:/Users/sakai/AppData/Local/bloop/cache/semanticdb/com.sourcegraph.semanticdb-javac.0.9.10/semanticdb-javac-0.9.10.jar) to method com.sun.tools.javac.api.BasicJavacTask.getContext()
WARNING: Please consider reporting this to the maintainers of com.sourcegraph.shaded.com.sourcegraph.semanticdb_javac.SemanticdbJavacOptions
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release.
2024.06.29 14:03:13 WARN  Unexpected javac output: WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.sourcegraph.shaded.com.sourcegraph.semanticdb_javac.SemanticdbJavacOptions (file:/C:/Users/sakai/AppData/Local/bloop/cache/semanticdb/com.sourcegraph.semanticdb-javac.0.9.10/semanticdb-javac-0.9.10.jar) to method com.sun.tools.javac.api.BasicJavacTask.getContext()
WARNING: Please consider reporting this to the maintainers of com.sourcegraph.shaded.com.sourcegraph.semanticdb_javac.SemanticdbJavacOptions
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release.
2024.06.29 14:03:15 INFO  time: compiled root in 16s
2024.06.29 14:03:15 INFO  compiling root-test (7 scala sources)
2024.06.29 14:03:19 INFO  time: compiled root-test in 3.63s
6åé 29, 2024 2:03:36 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 121
6åé 29, 2024 2:03:36 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 126
2024.06.29 14:03:36 INFO  compiling root (3 scala sources)
2024.06.29 14:03:37 INFO  time: compiled root in 1.08s
2024.06.29 14:03:37 INFO  compiling root (3 scala sources)
2024.06.29 14:03:39 INFO  time: compiled root in 0.95s
6åé 29, 2024 2:04:15 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 142
6åé 29, 2024 2:04:23 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 150
2024.06.29 14:04:23 INFO  compiling root (3 scala sources)
2024.06.29 14:04:23 INFO  time: compiled root in 0.69s
6åé 29, 2024 2:05:02 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 178
2024.06.29 14:05:02 INFO  compiling root (5 scala sources)
6åé 29, 2024 2:05:02 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 181
6åé 29, 2024 2:05:02 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 183
2024.06.29 14:05:02 INFO  time: compiled root in 0.85s
2024.06.29 14:05:22 INFO  compiling root (5 scala sources)
2024.06.29 14:05:22 INFO  time: compiled root in 0.5s
2024.06.29 14:09:21 INFO  Shutting down server
2024.06.29 14:09:21 INFO  shutting down Metals
2024.06.29 14:09:21 INFO  Shut down connection with build server.
2024.06.29 14:09:21 INFO  Shut down connection with build server.
2024.06.29 14:09:21 INFO  Shut down connection with build server.
2024.06.29 14:09:21 INFO  Exiting server
2024.06.29 14:10:28 INFO  Started: Metals version 1.3.2 in folders 'C:\Users\sakai\Developments\exam-manager' for client Visual Studio Code 1.90.2.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@71e135fe]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@143e06d9]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@71e135fe]
2024.06.29 14:10:28 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.29 14:10:30 INFO  no build target found for C:\Users\sakai\Developments\exam-manager\app\usecases\ExamResultUsecase.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.06.29 14:10:30 INFO  Attempting to connect to the build server...
2024.06.29 14:10:30 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.29 14:10:30 INFO  Attempting to connect to the build server...
2024.06.29 14:10:30 INFO  Attempting to connect to the build server...
2024.06.29 14:10:30 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.29 14:10:31 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\sakai\Developments\exam-manager\project\.metals\bsp.trace.json or C:\Users\sakai\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.06.29 14:10:31 INFO  time: Connected to build server in 0.68s
2024.06.29 14:10:31 INFO  Connected to Build server: Bloop v1.5.18
2024.06.29 14:10:31 INFO  time: Imported build in 0.32s
2024.06.29 14:10:45 INFO  time: indexed workspace in 12s
2024.06.29 14:10:46 INFO  compiling root (5 scala sources)
2024.06.29 14:10:47 WARN  Invalid text document uri received from build server: file:///C:/Users/sakai/Developments/exam-manager/app/usecase/ExamResultUsecase.scala
2024.06.29 14:10:47 INFO  time: compiled root in 1.24s
2024.06.29 14:10:49 INFO  compiling root (5 scala sources)
2024.06.29 14:10:50 INFO  time: compiled root in 1.48s
2024.06.29 14:10:51 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\usecases\ExamResultUsecase.scala
2024.06.29 14:10:51 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\usecases\ExamResultUsecase.scala
2024.06.29 14:10:51 INFO  time: code lens generation in 1.98s
2024.06.29 14:10:51 INFO  time: code lens generation in 1.98s
2024.06.29 14:10:51 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\usecases\ExamResultUsecase.scala
2024.06.29 14:11:15 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\usecases\ExamResultUsecase.scala
2024.06.29 14:11:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\usecases\ExamResultUsecase.scala
2024.06.29 14:11:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\usecases\ExamResultUsecase.scala
2024.06.29 14:11:19 WARN  Using indexes to guess the definition of ExamResultRepository
2024.06.29 14:11:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\usecases\ExamResultUsecase.scala
2024.06.29 14:11:18 WARN  Could not load snapshot text for C:\Users\sakai\Developments\exam-manager\app\usecases\ExamResultUsecase.scala
2024.06.29 14:11:19 WARN  Using indexes to guess the definition of ExamResultRepository
2024.06.29 14:11:19 INFO  compiling root (5 scala sources)
2024.06.29 14:11:22 INFO  time: compiled root in 2.39s
6åé 29, 2024 2:26:02 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 98
6åé 29, 2024 2:26:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 100
6åé 29, 2024 2:26:36 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 128
6åé 29, 2024 2:30:39 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 195
6åé 29, 2024 2:30:52 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 273
6åé 29, 2024 2:31:09 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 344
6åé 29, 2024 2:31:09 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 345
6åé 29, 2024 2:31:09 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 346
2024.06.29 14:37:57 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\usecases\ExamResultUsecase.scala
scala.meta.tokenizers.TokenizeException: <input>:28: error: illegal character '\u3000'
  def findExamResultById(examId: ExamId): Future[Option[Exam]]Å@
                                                              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:439)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:443)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.29 14:37:58 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\usecases\ExamResultUsecase.scala
scala.meta.tokenizers.TokenizeException: <input>:28: error: illegal character '\u3000'
  def findExamResultById(examId: ExamId): Future[Option[Exam]]Å@Å`
                                                              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:439)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:443)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 29, 2024 2:38:26 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 825
2024.06.29 14:38:34 INFO  compiling root (2 scala sources)
2024.06.29 14:38:34 INFO  time: compiled root in 0.24s
2024.06.29 14:38:34 INFO  compiling root (2 scala sources)
2024.06.29 14:38:34 INFO  time: compiled root in 0.2s
6åé 29, 2024 2:38:36 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 884
2024.06.29 14:38:43 INFO  compiling root (2 scala sources)
2024.06.29 14:38:43 INFO  time: compiled root in 0.22s
2024.06.29 14:38:50 INFO  compiling root (2 scala sources)
2024.06.29 14:38:51 INFO  time: compiled root in 1.17s
2024.06.29 14:38:51 INFO  compiling root (1 scala source)
2024.06.29 14:38:51 INFO  time: compiled root in 0.4s
6åé 29, 2024 2:39:00 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 978
2024.06.29 14:39:19 INFO  compiling root (3 scala sources)
2024.06.29 14:39:20 INFO  time: compiled root in 1.34s
6åé 29, 2024 2:39:47 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1055
6åé 29, 2024 2:40:06 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1117
2024.06.29 15:19:02 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java

Uri: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

6åé 29, 2024 3:19:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
åxçê: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/Throwable.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2016, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\n\npackage java.lang;\n\nimport  java.io.*;\nimport  java.util.*;\n\n/**\n * The {@code Throwable} class is the superclass of all errors and\n * exceptions in the Java language. Only objects that are instances of this\n * class (or one of its subclasses) are thrown by the Java Virtual Machine or\n * can be thrown by the Java {@code throw} statement. Similarly, only\n * this class or one of its subclasses can be the argument type in a\n * {@code catch} clause.\n *\n * For the purposes of compile-time checking of exceptions, {@code\n * Throwable} and any subclass of {@code Throwable} that is not also a\n * subclass of either {@link RuntimeException} or {@link Error} are\n * regarded as checked exceptions.\n *\n * \u003cp\u003eInstances of two subclasses, {@link java.lang.Error} and\n * {@link java.lang.Exception}, are conventionally used to indicate\n * that exceptional situations have occurred. Typically, these instances\n * are freshly created in the context of the exceptional situation so\n * as to include relevant information (such as stack trace data).\n *\n * \u003cp\u003eA throwable contains a snapshot of the execution stack of its\n * thread at the time it was created. It can also contain a message\n * string that gives more information about the error. Over time, a\n * throwable can {@linkplain Throwable#addSuppressed suppress} other\n * throwables from being propagated.  Finally, the throwable can also\n * contain a \u003ci\u003ecause\u003c/i\u003e: another throwable that caused this\n * throwable to be constructed.  The recording of this causal information\n * is referred to as the \u003ci\u003echained exception\u003c/i\u003e facility, as the\n * cause can, itself, have a cause, and so on, leading to a \"chain\" of\n * exceptions, each caused by another.\n *\n * \u003cp\u003eOne reason that a throwable may have a cause is that the class that\n * throws it is built atop a lower layered abstraction, and an operation on\n * the upper layer fails due to a failure in the lower layer.  It would be bad\n * design to let the throwable thrown by the lower layer propagate outward, as\n * it is generally unrelated to the abstraction provided by the upper layer.\n * Further, doing so would tie the API of the upper layer to the details of\n * its implementation, assuming the lower layer\u0027s exception was a checked\n * exception.  Throwing a \"wrapped exception\" (i.e., an exception containing a\n * cause) allows the upper layer to communicate the details of the failure to\n * its caller without incurring either of these shortcomings.  It preserves\n * the flexibility to change the implementation of the upper layer without\n * changing its API (in particular, the set of exceptions thrown by its\n * methods).\n *\n * \u003cp\u003eA second reason that a throwable may have a cause is that the method\n * that throws it must conform to a general-purpose interface that does not\n * permit the method to throw the cause directly.  For example, suppose\n * a persistent collection conforms to the {@link java.util.Collection\n * Collection} interface, and that its persistence is implemented atop\n * {@code java.io}.  Suppose the internals of the {@code add} method\n * can throw an {@link java.io.IOException IOException}.  The implementation\n * can communicate the details of the {@code IOException} to its caller\n * while conforming to the {@code Collection} interface by wrapping the\n * {@code IOException} in an appropriate unchecked exception.  (The\n * specification for the persistent collection should indicate that it is\n * capable of throwing such exceptions.)\n *\n * \u003cp\u003eA cause can be associated with a throwable in two ways: via a\n * constructor that takes the cause as an argument, or via the\n * {@link #initCause(Throwable)} method.  New throwable classes that\n * wish to allow causes to be associated with them should provide constructors\n * that take a cause and delegate (perhaps indirectly) to one of the\n * {@code Throwable} constructors that takes a cause.\n *\n * Because the {@code initCause} method is public, it allows a cause to be\n * associated with any throwable, even a \"legacy throwable\" whose\n * implementation predates the addition of the exception chaining mechanism to\n * {@code Throwable}.\n *\n * \u003cp\u003eBy convention, class {@code Throwable} and its subclasses have two\n * constructors, one that takes no arguments and one that takes a\n * {@code String} argument that can be used to produce a detail message.\n * Further, those subclasses that might likely have a cause associated with\n * them should have two more constructors, one that takes a\n * {@code Throwable} (the cause), and one that takes a\n * {@code String} (the detail message) and a {@code Throwable} (the\n * cause).\n *\n * @author  unascribed\n * @author  Josh Bloch (Added exception chaining and programmatic access to\n *          stack trace in 1.4.)\n * @jls 11.2 Compile-Time Checking of Exceptions\n * @since 1.0\n */\npublic class Throwable implements Serializable {\n    /** use serialVersionUID from JDK 1.0.2 for interoperability */\n    private static final long serialVersionUID \u003d -3042686055658047285L;\n\n    /**\n     * The JVM saves some indication of the stack backtrace in this slot.\n     */\n    private transient Object backtrace;\n\n    /**\n     * Specific details about the Throwable.  For example, for\n     * {@code FileNotFoundException}, this contains the name of\n     * the file that could not be found.\n     *\n     * @serial\n     */\n    private String detailMessage;\n\n\n    /**\n     * Holder class to defer initializing sentinel objects only used\n     * for serialization.\n     */\n    private static class SentinelHolder {\n        /**\n         * {@linkplain #setStackTrace(StackTraceElement[]) Setting the\n         * stack trace} to a one-element array containing this sentinel\n         * value indicates future attempts to set the stack trace will be\n         * ignored.  The sentinel is equal to the result of calling:\u003cbr\u003e\n         * {@code new StackTraceElement(\"\", \"\", null, Integer.MIN_VALUE)}\n         */\n        public static final StackTraceElement STACK_TRACE_ELEMENT_SENTINEL \u003d\n            new StackTraceElement(\"\", \"\", null, Integer.MIN_VALUE);\n\n        /**\n         * Sentinel value used in the serial form to indicate an immutable\n         * stack trace.\n         */\n        public static final StackTraceElement[] STACK_TRACE_SENTINEL \u003d\n            new StackTraceElement[] {STACK_TRACE_ELEMENT_SENTINEL};\n    }\n\n    /**\n     * A shared value for an empty stack.\n     */\n    private static final StackTraceElement[] UNASSIGNED_STACK \u003d new StackTraceElement[0];\n\n    /*\n     * To allow Throwable objects to be made immutable and safely\n     * reused by the JVM, such as OutOfMemoryErrors, fields of\n     * Throwable that are writable in response to user actions, cause,\n     * stackTrace, and suppressedExceptions obey the following\n     * protocol:\n     *\n     * 1) The fields are initialized to a non-null sentinel value\n     * which indicates the value has logically not been set.\n     *\n     * 2) Writing a null to the field indicates further writes\n     * are forbidden\n     *\n     * 3) The sentinel value may be replaced with another non-null\n     * value.\n     *\n     * For example, implementations of the HotSpot JVM have\n     * preallocated OutOfMemoryError objects to provide for better\n     * diagnosability of that situation.  These objects are created\n     * without calling the constructor for that class and the fields\n     * in question are initialized to null.  To support this\n     * capability, any new fields added to Throwable that require\n     * being initialized to a non-null value require a coordinated JVM\n     * change.\n     */\n\n    /**\n     * The throwable that caused this throwable to get thrown, or null if this\n     * throwable was not caused by another throwable, or if the causative\n     * throwable is unknown.  If this field is equal to this throwable itself,\n     * it indicates that the cause of this throwable has not yet been\n     * initialized.\n     *\n     * @serial\n     * @since 1.4\n     */\n    private Throwable cause \u003d this;\n\n    /**\n     * The stack trace, as returned by {@link #getStackTrace()}.\n     *\n     * The field is initialized to a zero-length array.  A {@code\n     * null} value of this field indicates subsequent calls to {@link\n     * #setStackTrace(StackTraceElement[])} and {@link\n     * #fillInStackTrace()} will be no-ops.\n     *\n     * @serial\n     * @since 1.4\n     */\n    private StackTraceElement[] stackTrace \u003d UNASSIGNED_STACK;\n\n    /**\n     * The JVM code sets the depth of the backtrace for later retrieval\n     */\n    private transient int depth;\n\n    // Setting this static field introduces an acceptable\n    // initialization dependency on a few java.util classes.\n    private static final List\u003cThrowable\u003e SUPPRESSED_SENTINEL \u003d Collections.emptyList();\n\n    /**\n     * The list of suppressed exceptions, as returned by {@link\n     * #getSuppressed()}.  The list is initialized to a zero-element\n     * unmodifiable sentinel list.  When a serialized Throwable is\n     * read in, if the {@code suppressedExceptions} field points to a\n     * zero-element list, the field is reset to the sentinel value.\n     *\n     * @serial\n     * @since 1.7\n     */\n    private List\u003cThrowable\u003e suppressedExceptions \u003d SUPPRESSED_SENTINEL;\n\n    /** Message for trying to suppress a null exception. */\n    private static final String NULL_CAUSE_MESSAGE \u003d \"Cannot suppress a null exception.\";\n\n    /** Message for trying to suppress oneself. */\n    private static final String SELF_SUPPRESSION_MESSAGE \u003d \"Self-suppression not permitted\";\n\n    /** Caption  for labeling causative exception stack traces */\n    private static final String CAUSE_CAPTION \u003d \"Caused by: \";\n\n    /** Caption for labeling suppressed exception stack traces */\n    private static final String SUPPRESSED_CAPTION \u003d \"Suppressed: \";\n\n    /**\n     * Constructs a new throwable with {@code null} as its detail message.\n     * The cause is not initialized, and may subsequently be initialized by a\n     * call to {@link #initCause}.\n     *\n     * \u003cp\u003eThe {@link #fillInStackTrace()} method is called to initialize\n     * the stack trace data in the newly created throwable.\n     */\n    public Throwable() {\n        fillInStackTrace();\n    }\n\n    /**\n     * Constructs a new throwable with the specified detail message.  The\n     * cause is not initialized, and may subsequently be initialized by\n     * a call to {@link #initCause}.\n     *\n     * \u003cp\u003eThe {@link #fillInStackTrace()} method is called to initialize\n     * the stack trace data in the newly created throwable.\n     *\n     * @param   message   the detail message. The detail message is saved for\n     *          later retrieval by the {@link #getMessage()} method.\n     */\n    public Throwable(String message) {\n        fillInStackTrace();\n        detailMessage \u003d message;\n    }\n\n    /**\n     * Constructs a new throwable with the specified detail message and\n     * cause.  \u003cp\u003eNote that the detail message associated with\n     * {@code cause} is \u003ci\u003enot\u003c/i\u003e automatically incorporated in\n     * this throwable\u0027s detail message.\n     *\n     * \u003cp\u003eThe {@link #fillInStackTrace()} method is called to initialize\n     * the stack trace data in the newly created throwable.\n     *\n     * @param  message the detail message (which is saved for later retrieval\n     *         by the {@link #getMessage()} method).\n     * @param  cause the cause (which is saved for later retrieval by the\n     *         {@link #getCause()} method).  (A {@code null} value is\n     *         permitted, and indicates that the cause is nonexistent or\n     *         unknown.)\n     * @since  1.4\n     */\n    public Throwable(String message, Throwable cause) {\n        fillInStackTrace();\n        detailMessage \u003d message;\n        this.cause \u003d cause;\n    }\n\n    /**\n     * Constructs a new throwable with the specified cause and a detail\n     * message of {@code (cause\u003d\u003dnull ? null : cause.toString())} (which\n     * typically contains the class and detail message of {@code cause}).\n     * This constructor is useful for throwables that are little more than\n     * wrappers for other throwables (for example, {@link\n     * java.security.PrivilegedActionException}).\n     *\n     * \u003cp\u003eThe {@link #fillInStackTrace()} method is called to initialize\n     * the stack trace data in the newly created throwable.\n     *\n     * @param  cause the cause (which is saved for later retrieval by the\n     *         {@link #getCause()} method).  (A {@code null} value is\n     *         permitted, and indicates that the cause is nonexistent or\n     *         unknown.)\n     * @since  1.4\n     */\n    public Throwable(Throwable cause) {\n        fillInStackTrace();\n        detailMessage \u003d (cause\u003d\u003dnull ? null : cause.toString());\n        this.cause \u003d cause;\n    }\n\n    /**\n     * Constructs a new throwable with the specified detail message,\n     * cause, {@linkplain #addSuppressed suppression} enabled or\n     * disabled, and writable stack trace enabled or disabled.  If\n     * suppression is disabled, {@link #getSuppressed} for this object\n     * will return a zero-length array and calls to {@link\n     * #addSuppressed} that would otherwise append an exception to the\n     * suppressed list will have no effect.  If the writable stack\n     * trace is false, this constructor will not call {@link\n     * #fillInStackTrace()}, a {@code null} will be written to the\n     * {@code stackTrace} field, and subsequent calls to {@code\n     * fillInStackTrace} and {@link\n     * #setStackTrace(StackTraceElement[])} will not set the stack\n     * trace.  If the writable stack trace is false, {@link\n     * #getStackTrace} will return a zero length array.\n     *\n     * \u003cp\u003eNote that the other constructors of {@code Throwable} treat\n     * suppression as being enabled and the stack trace as being\n     * writable.  Subclasses of {@code Throwable} should document any\n     * conditions under which suppression is disabled and document\n     * conditions under which the stack trace is not writable.\n     * Disabling of suppression should only occur in exceptional\n     * circumstances where special requirements exist, such as a\n     * virtual machine reusing exception objects under low-memory\n     * situations.  Circumstances where a given exception object is\n     * repeatedly caught and rethrown, such as to implement control\n     * flow between two sub-systems, is another situation where\n     * immutable throwable objects would be appropriate.\n     *\n     * @param  message the detail message.\n     * @param cause the cause.  (A {@code null} value is permitted,\n     * and indicates that the cause is nonexistent or unknown.)\n     * @param enableSuppression whether or not suppression is enabled or disabled\n     * @param writableStackTrace whether or not the stack trace should be\n     *                           writable\n     *\n     * @see OutOfMemoryError\n     * @see NullPointerException\n     * @see ArithmeticException\n     * @since 1.7\n     */\n    protected Throwable(String message, Throwable cause,\n                        boolean enableSuppression,\n                        boolean writableStackTrace) {\n        if (writableStackTrace) {\n            fillInStackTrace();\n        } else {\n            stackTrace \u003d null;\n        }\n        detailMessage \u003d message;\n        this.cause \u003d cause;\n        if (!enableSuppression)\n            suppressedExceptions \u003d null;\n    }\n\n    /**\n     * Returns the detail message string of this throwable.\n     *\n     * @return  the detail message string of this {@code Throwable} instance\n     *          (which may be {@code null}).\n     */\n    public String getMessage() {\n        return detailMessage;\n    }\n\n    /**\n     * Creates a localized description of this throwable.\n     * Subclasses may override this method in order to produce a\n     * locale-specific message.  For subclasses that do not override this\n     * method, the default implementation returns the same result as\n     * {@code getMessage()}.\n     *\n     * @return  The localized description of this throwable.\n     * @since   1.1\n     */\n    public String getLocalizedMessage() {\n        return getMessage();\n    }\n\n    /**\n     * Returns the cause of this throwable or {@code null} if the\n     * cause is nonexistent or unknown.  (The cause is the throwable that\n     * caused this throwable to get thrown.)\n     *\n     * \u003cp\u003eThis implementation returns the cause that was supplied via one of\n     * the constructors requiring a {@code Throwable}, or that was set after\n     * creation with the {@link #initCause(Throwable)} method.  While it is\n     * typically unnecessary to override this method, a subclass can override\n     * it to return a cause set by some other means.  This is appropriate for\n     * a \"legacy chained throwable\" that predates the addition of chained\n     * exceptions to {@code Throwable}.  Note that it is \u003ci\u003enot\u003c/i\u003e\n     * necessary to override any of the {@code PrintStackTrace} methods,\n     * all of which invoke the {@code getCause} method to determine the\n     * cause of a throwable.\n     *\n     * @return  the cause of this throwable or {@code null} if the\n     *          cause is nonexistent or unknown.\n     * @since 1.4\n     */\n    public synchronized Throwable getCause() {\n        return (cause\u003d\u003dthis ? null : cause);\n    }\n\n    /**\n     * Initializes the \u003ci\u003ecause\u003c/i\u003e of this throwable to the specified value.\n     * (The cause is the throwable that caused this throwable to get thrown.)\n     *\n     * \u003cp\u003eThis method can be called at most once.  It is generally called from\n     * within the constructor, or immediately after creating the\n     * throwable.  If this throwable was created\n     * with {@link #Throwable(Throwable)} or\n     * {@link #Throwable(String,Throwable)}, this method cannot be called\n     * even once.\n     *\n     * \u003cp\u003eAn example of using this method on a legacy throwable type\n     * without other support for setting the cause is:\n     *\n     * \u003cpre\u003e\n     * try {\n     *     lowLevelOp();\n     * } catch (LowLevelException le) {\n     *     throw (HighLevelException)\n     *           new HighLevelException().initCause(le); // Legacy constructor\n     * }\n     * \u003c/pre\u003e\n     *\n     * @param  cause the cause (which is saved for later retrieval by the\n     *         {@link #getCause()} method).  (A {@code null} value is\n     *         permitted, and indicates that the cause is nonexistent or\n     *         unknown.)\n     * @return  a reference to this {@code Throwable} instance.\n     * @throws IllegalArgumentException if {@code cause} is this\n     *         throwable.  (A throwable cannot be its own cause.)\n     * @throws IllegalStateException if this throwable was\n     *         created with {@link #Throwable(Throwable)} or\n     *         {@link #Throwable(String,Throwable)}, or this method has already\n     *         been called on this throwable.\n     * @since  1.4\n     */\n    public synchronized Throwable initCause(Throwable cause) {\n        if (this.cause !\u003d this)\n            throw new IllegalStateException(\"Can\u0027t overwrite cause with \" +\n                                            Objects.toString(cause, \"a null\"), this);\n        if (cause \u003d\u003d this)\n            throw new IllegalArgumentException(\"Self-causation not permitted\", this);\n        this.cause \u003d cause;\n        return this;\n    }\n\n    /**\n     * Returns a short description of this throwable.\n     * The result is the concatenation of:\n     * \u003cul\u003e\n     * \u003cli\u003e the {@linkplain Class#getName() name} of the class of this object\n     * \u003cli\u003e \": \" (a colon and a space)\n     * \u003cli\u003e the result of invoking this object\u0027s {@link #getLocalizedMessage}\n     *      method\n     * \u003c/ul\u003e\n     * If {@code getLocalizedMessage} returns {@code null}, then just\n     * the class name is returned.\n     *\n     * @return a string representation of this throwable.\n     */\n    public String toString() {\n        String s \u003d getClass().getName();\n        String message \u003d getLocalizedMessage();\n        return (message !\u003d null) ? (s + \": \" + message) : s;\n    }\n\n    /**\n     * Prints this throwable and its backtrace to the\n     * standard error stream. This method prints a stack trace for this\n     * {@code Throwable} object on the error output stream that is\n     * the value of the field {@code System.err}. The first line of\n     * output contains the result of the {@link #toString()} method for\n     * this object.  Remaining lines represent data previously recorded by\n     * the method {@link #fillInStackTrace()}. The format of this\n     * information depends on the implementation, but the following\n     * example may be regarded as typical:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * java.lang.NullPointerException\n     *         at MyClass.mash(MyClass.java:9)\n     *         at MyClass.crunch(MyClass.java:6)\n     *         at MyClass.main(MyClass.java:3)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * This example was produced by running the program:\n     * \u003cpre\u003e\n     * class MyClass {\n     *     public static void main(String[] args) {\n     *         crunch(null);\n     *     }\n     *     static void crunch(int[] a) {\n     *         mash(a);\n     *     }\n     *     static void mash(int[] b) {\n     *         System.out.println(b[0]);\n     *     }\n     * }\n     * \u003c/pre\u003e\n     * The backtrace for a throwable with an initialized, non-null cause\n     * should generally include the backtrace for the cause.  The format\n     * of this information depends on the implementation, but the following\n     * example may be regarded as typical:\n     * \u003cpre\u003e\n     * HighLevelException: MidLevelException: LowLevelException\n     *         at Junk.a(Junk.java:13)\n     *         at Junk.main(Junk.java:4)\n     * Caused by: MidLevelException: LowLevelException\n     *         at Junk.c(Junk.java:23)\n     *         at Junk.b(Junk.java:17)\n     *         at Junk.a(Junk.java:11)\n     *         ... 1 more\n     * Caused by: LowLevelException\n     *         at Junk.e(Junk.java:30)\n     *         at Junk.d(Junk.java:27)\n     *         at Junk.c(Junk.java:21)\n     *         ... 3 more\n     * \u003c/pre\u003e\n     * Note the presence of lines containing the characters {@code \"...\"}.\n     * These lines indicate that the remainder of the stack trace for this\n     * exception matches the indicated number of frames from the bottom of the\n     * stack trace of the exception that was caused by this exception (the\n     * \"enclosing\" exception).  This shorthand can greatly reduce the length\n     * of the output in the common case where a wrapped exception is thrown\n     * from same method as the \"causative exception\" is caught.  The above\n     * example was produced by running the program:\n     * \u003cpre\u003e\n     * public class Junk {\n     *     public static void main(String args[]) {\n     *         try {\n     *             a();\n     *         } catch(HighLevelException e) {\n     *             e.printStackTrace();\n     *         }\n     *     }\n     *     static void a() throws HighLevelException {\n     *         try {\n     *             b();\n     *         } catch(MidLevelException e) {\n     *             throw new HighLevelException(e);\n     *         }\n     *     }\n     *     static void b() throws MidLevelException {\n     *         c();\n     *     }\n     *     static void c() throws MidLevelException {\n     *         try {\n     *             d();\n     *         } catch(LowLevelException e) {\n     *             throw new MidLevelException(e);\n     *         }\n     *     }\n     *     static void d() throws LowLevelException {\n     *        e();\n     *     }\n     *     static void e() throws LowLevelException {\n     *         throw new LowLevelException();\n     *     }\n     * }\n     *\n     * class HighLevelException extends Exception {\n     *     HighLevelException(Throwable cause) { super(cause); }\n     * }\n     *\n     * class MidLevelException extends Exception {\n     *     MidLevelException(Throwable cause)  { super(cause); }\n     * }\n     *\n     * class LowLevelException extends Exception {\n     * }\n     * \u003c/pre\u003e\n     * As of release 7, the platform supports the notion of\n     * \u003ci\u003esuppressed exceptions\u003c/i\u003e (in conjunction with the {@code\n     * try}-with-resources statement). Any exceptions that were\n     * suppressed in order to deliver an exception are printed out\n     * beneath the stack trace.  The format of this information\n     * depends on the implementation, but the following example may be\n     * regarded as typical:\n     *\n     * \u003cpre\u003e\n     * Exception in thread \"main\" java.lang.Exception: Something happened\n     *  at Foo.bar(Foo.java:10)\n     *  at Foo.main(Foo.java:5)\n     *  Suppressed: Resource$CloseFailException: Resource ID \u003d 0\n     *          at Resource.close(Resource.java:26)\n     *          at Foo.bar(Foo.java:9)\n     *          ... 1 more\n     * \u003c/pre\u003e\n     * Note that the \"... n more\" notation is used on suppressed exceptions\n     * just at it is used on causes. Unlike causes, suppressed exceptions are\n     * indented beyond their \"containing exceptions.\"\n     *\n     * \u003cp\u003eAn exception can have both a cause and one or more suppressed\n     * exceptions:\n     * \u003cpre\u003e\n     * Exception in thread \"main\" java.lang.Exception: Main block\n     *  at Foo3.main(Foo3.java:7)\n     *  Suppressed: Resource$CloseFailException: Resource ID \u003d 2\n     *          at Resource.close(Resource.java:26)\n     *          at Foo3.main(Foo3.java:5)\n     *  Suppressed: Resource$CloseFailException: Resource ID \u003d 1\n     *          at Resource.close(Resource.java:26)\n     *          at Foo3.main(Foo3.java:5)\n     * Caused by: java.lang.Exception: I did it\n     *  at Foo3.main(Foo3.java:8)\n     * \u003c/pre\u003e\n     * Likewise, a suppressed exception can have a cause:\n     * \u003cpre\u003e\n     * Exception in thread \"main\" java.lang.Exception: Main block\n     *  at Foo4.main(Foo4.java:6)\n     *  Suppressed: Resource2$CloseFailException: Resource ID \u003d 1\n     *          at Resource2.close(Resource2.java:20)\n     *          at Foo4.main(Foo4.java:5)\n     *  Caused by: java.lang.Exception: Rats, you caught me\n     *          at Resource2$CloseFailException.\u0026lt;init\u0026gt;(Resource2.java:45)\n     *          ... 2 more\n     * \u003c/pre\u003e\n     */\n    public void printStackTrace() {\n        printStackTrace(System.err);\n    }\n\n    /**\n     * Prints this throwable and its backtrace to the specified print stream.\n     *\n     * @param s {@code PrintStream} to use for output\n     */\n    public void printStackTrace(PrintStream s) {\n        printStackTrace(new WrappedPrintStream(s));\n    }\n\n    private void printStackTrace(PrintStreamOrWriter s) {\n        // Guard against malicious overrides of Throwable.equals by\n        // using a Set with identity equality semantics.\n        Set\u003cThrowable\u003e dejaVu \u003d Collections.newSetFromMap(new IdentityHashMap\u003c\u003e());\n        dejaVu.add(this);\n\n        synchronized (s.lock()) {\n            // Print our stack trace\n            s.println(this);\n            StackTraceElement[] trace \u003d getOurStackTrace();\n            for (StackTraceElement traceElement : trace)\n                s.println(\"\\tat \" + traceElement);\n\n            // Print suppressed exceptions, if any\n            for (Throwable se : getSuppressed())\n                se.printEnclosedStackTrace(s, trace, SUPPRESSED_CAPTION, \"\\t\", dejaVu);\n\n            // Print cause, if any\n            Throwable ourCause \u003d getCause();\n            if (ourCause !\u003d null)\n                ourCause.printEnclosedStackTrace(s, trace, CAUSE_CAPTION, \"\", dejaVu);\n        }\n    }\n\n    /**\n     * Print our stack trace as an enclosed exception for the specified\n     * stack trace.\n     */\n    private void printEnclosedStackTrace(PrintStreamOrWriter s,\n                                         StackTraceElement[] enclosingTrace,\n                                         String caption,\n                                         String prefix,\n                                         Set\u003cThrowable\u003e dejaVu) {\n        assert Thread.holdsLock(s.lock());\n        if (dejaVu.contains(this)) {\n            s.println(\"\\t[CIRCULAR REFERENCE:\" + this + \"]\");\n        } else {\n            dejaVu.add(this);\n            // Compute number of frames in common between this and enclosing trace\n            StackTraceElement[] trace \u003d getOurStackTrace();\n            int m \u003d trace.length - 1;\n            int n \u003d enclosingTrace.length - 1;\n            while (m \u003e\u003d 0 \u0026\u0026 n \u003e\u003d0 \u0026\u0026 trace[m].equals(enclosingTrace[n])) {\n                m--; n--;\n            }\n            int framesInCommon \u003d trace.length - 1 - m;\n\n            // Print our stack trace\n            s.println(prefix + caption + this);\n            for (int i \u003d 0; i \u003c\u003d m; i++)\n                s.println(prefix + \"\\tat \" + trace[i]);\n            if (framesInCommon !\u003d 0)\n                s.println(prefix + \"\\t... \" + framesInCommon + \" more\");\n\n            // Print suppressed exceptions, if any\n            for (Throwable se : getSuppressed())\n                se.printEnclosedStackTrace(s, trace, SUPPRESSED_CAPTION,\n                                           prefix +\"\\t\", dejaVu);\n\n            // Print cause, if any\n            Throwable ourCause \u003d getCause();\n            if (ourCause !\u003d null)\n                ourCause.printEnclosedStackTrace(s, trace, CAUSE_CAPTION, prefix, dejaVu);\n        }\n    }\n\n    /**\n     * Prints this throwable and its backtrace to the specified\n     * print writer.\n     *\n     * @param s {@code PrintWriter} to use for output\n     * @since   1.1\n     */\n    public void printStackTrace(PrintWriter s) {\n        printStackTrace(new WrappedPrintWriter(s));\n    }\n\n    /**\n     * Wrapper class for PrintStream and PrintWriter to enable a single\n     * implementation of printStackTrace.\n     */\n    private abstract static class PrintStreamOrWriter {\n        /** Returns the object to be locked when using this StreamOrWriter */\n        abstract Object lock();\n\n        /** Prints the specified string as a line on this StreamOrWriter */\n        abstract void println(Object o);\n    }\n\n    private static class WrappedPrintStream extends PrintStreamOrWriter {\n        private final PrintStream printStream;\n\n        WrappedPrintStream(PrintStream printStream) {\n            this.printStream \u003d printStream;\n        }\n\n        Object lock() {\n            return printStream;\n        }\n\n        void println(Object o) {\n            printStream.println(o);\n        }\n    }\n\n    private static class WrappedPrintWriter extends PrintStreamOrWriter {\n        private final PrintWriter printWriter;\n\n        WrappedPrintWriter(PrintWriter printWriter) {\n            this.printWriter \u003d printWriter;\n        }\n\n        Object lock() {\n            return printWriter;\n        }\n\n        void println(Object o) {\n            printWriter.println(o);\n        }\n    }\n\n    /**\n     * Fills in the execution stack trace. This method records within this\n     * {@code Throwable} object information about the current state of\n     * the stack frames for the current thread.\n     *\n     * \u003cp\u003eIf the stack trace of this {@code Throwable} {@linkplain\n     * Throwable#Throwable(String, Throwable, boolean, boolean) is not\n     * writable}, calling this method has no effect.\n     *\n     * @return  a reference to this {@code Throwable} instance.\n     * @see     java.lang.Throwable#printStackTrace()\n     */\n    public synchronized Throwable fillInStackTrace() {\n        if (stackTrace !\u003d null ||\n            backtrace !\u003d null /* Out of protocol state */ ) {\n            fillInStackTrace(0);\n            stackTrace \u003d UNASSIGNED_STACK;\n        }\n        return this;\n    }\n\n    private native Throwable fillInStackTrace(int dummy);\n\n    /**\n     * Provides programmatic access to the stack trace information printed by\n     * {@link #printStackTrace()}.  Returns an array of stack trace elements,\n     * each representing one stack frame.  The zeroth element of the array\n     * (assuming the array\u0027s length is non-zero) represents the top of the\n     * stack, which is the last method invocation in the sequence.  Typically,\n     * this is the point at which this throwable was created and thrown.\n     * The last element of the array (assuming the array\u0027s length is non-zero)\n     * represents the bottom of the stack, which is the first method invocation\n     * in the sequence.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this throwable is permitted to return a zero-length array from this\n     * method.  Generally speaking, the array returned by this method will\n     * contain one element for every frame that would be printed by\n     * {@code printStackTrace}.  Writes to the returned array do not\n     * affect future calls to this method.\n     *\n     * @return an array of stack trace elements representing the stack trace\n     *         pertaining to this throwable.\n     * @since  1.4\n     */\n    public StackTraceElement[] getStackTrace() {\n        return getOurStackTrace().clone();\n    }\n\n    private synchronized StackTraceElement[] getOurStackTrace() {\n        // Initialize stack trace field with information from\n        // backtrace if this is the first call to this method\n        if (stackTrace \u003d\u003d UNASSIGNED_STACK ||\n            (stackTrace \u003d\u003d null \u0026\u0026 backtrace !\u003d null) /* Out of protocol state */) {\n            stackTrace \u003d StackTraceElement.of(this, depth);\n        } else if (stackTrace \u003d\u003d null) {\n            return UNASSIGNED_STACK;\n        }\n        return stackTrace;\n    }\n\n    /**\n     * Sets the stack trace elements that will be returned by\n     * {@link #getStackTrace()} and printed by {@link #printStackTrace()}\n     * and related methods.\n     *\n     * This method, which is designed for use by RPC frameworks and other\n     * advanced systems, allows the client to override the default\n     * stack trace that is either generated by {@link #fillInStackTrace()}\n     * when a throwable is constructed or deserialized when a throwable is\n     * read from a serialization stream.\n     *\n     * \u003cp\u003eIf the stack trace of this {@code Throwable} {@linkplain\n     * Throwable#Throwable(String, Throwable, boolean, boolean) is not\n     * writable}, calling this method has no effect other than\n     * validating its argument.\n     *\n     * @param   stackTrace the stack trace elements to be associated with\n     * this {@code Throwable}.  The specified array is copied by this\n     * call; changes in the specified array after the method invocation\n     * returns will have no affect on this {@code Throwable}\u0027s stack\n     * trace.\n     *\n     * @throws NullPointerException if {@code stackTrace} is\n     *         {@code null} or if any of the elements of\n     *         {@code stackTrace} are {@code null}\n     *\n     * @since  1.4\n     */\n    public void setStackTrace(StackTraceElement[] stackTrace) {\n        // Validate argument\n        StackTraceElement[] defensiveCopy \u003d stackTrace.clone();\n        for (int i \u003d 0; i \u003c defensiveCopy.length; i++) {\n            if (defensiveCopy[i] \u003d\u003d null)\n                throw new NullPointerException(\"stackTrace[\" + i + \"]\");\n        }\n\n        synchronized (this) {\n            if (this.stackTrace \u003d\u003d null \u0026\u0026 // Immutable stack\n                backtrace \u003d\u003d null) // Test for out of protocol state\n                return;\n            this.stackTrace \u003d defensiveCopy;\n        }\n    }\n\n    /**\n     * Reads a {@code Throwable} from a stream, enforcing\n     * well-formedness constraints on fields.  Null entries and\n     * self-pointers are not allowed in the list of {@code\n     * suppressedExceptions}.  Null entries are not allowed for stack\n     * trace elements.  A null stack trace in the serial form results\n     * in a zero-length stack element array. A single-element stack\n     * trace whose entry is equal to {@code new StackTraceElement(\"\",\n     * \"\", null, Integer.MIN_VALUE)} results in a {@code null} {@code\n     * stackTrace} field.\n     *\n     * Note that there are no constraints on the value the {@code\n     * cause} field can hold; both {@code null} and {@code this} are\n     * valid values for the field.\n     */\n    private void readObject(ObjectInputStream s)\n        throws IOException, ClassNotFoundException {\n        s.defaultReadObject();     // read in all fields\n        if (suppressedExceptions !\u003d null) {\n            List\u003cThrowable\u003e suppressed \u003d null;\n            if (suppressedExceptions.isEmpty()) {\n                // Use the sentinel for a zero-length list\n                suppressed \u003d SUPPRESSED_SENTINEL;\n            } else { // Copy Throwables to new list\n                suppressed \u003d new ArrayList\u003c\u003e(1);\n                for (Throwable t : suppressedExceptions) {\n                    // Enforce constraints on suppressed exceptions in\n                    // case of corrupt or malicious stream.\n                    if (t \u003d\u003d null)\n                        throw new NullPointerException(NULL_CAUSE_MESSAGE);\n                    if (t \u003d\u003d this)\n                        throw new IllegalArgumentException(SELF_SUPPRESSION_MESSAGE);\n                    suppressed.add(t);\n                }\n            }\n            suppressedExceptions \u003d suppressed;\n        } // else a null suppressedExceptions field remains null\n\n        /*\n         * For zero-length stack traces, use a clone of\n         * UNASSIGNED_STACK rather than UNASSIGNED_STACK itself to\n         * allow identity comparison against UNASSIGNED_STACK in\n         * getOurStackTrace.  The identity of UNASSIGNED_STACK in\n         * stackTrace indicates to the getOurStackTrace method that\n         * the stackTrace needs to be constructed from the information\n         * in backtrace.\n         */\n        if (stackTrace !\u003d null) {\n            if (stackTrace.length \u003d\u003d 0) {\n                stackTrace \u003d UNASSIGNED_STACK.clone();\n            }  else if (stackTrace.length \u003d\u003d 1 \u0026\u0026\n                        // Check for the marker of an immutable stack trace\n                        SentinelHolder.STACK_TRACE_ELEMENT_SENTINEL.equals(stackTrace[0])) {\n                stackTrace \u003d null;\n            } else { // Verify stack trace elements are non-null.\n                for(StackTraceElement ste : stackTrace) {\n                    if (ste \u003d\u003d null)\n                        throw new NullPointerException(\"null StackTraceElement in serial stream. \");\n                }\n            }\n        } else {\n            // A null stackTrace field in the serial form can result\n            // from an exception serialized without that field in\n            // older JDK releases; treat such exceptions as having\n            // empty stack traces.\n            stackTrace \u003d UNASSIGNED_STACK.clone();\n        }\n    }\n\n    /**\n     * Write a {@code Throwable} object to a stream.\n     *\n     * A {@code null} stack trace field is represented in the serial\n     * form as a one-element array whose element is equal to {@code\n     * new StackTraceElement(\"\", \"\", null, Integer.MIN_VALUE)}.\n     */\n    private synchronized void writeObject(ObjectOutputStream s)\n        throws IOException {\n        // Ensure that the stackTrace field is initialized to a\n        // non-null value, if appropriate.  As of JDK 7, a null stack\n        // trace field is a valid value indicating the stack trace\n        // should not be set.\n        getOurStackTrace();\n\n        StackTraceElement[] oldStackTrace \u003d stackTrace;\n        try {\n            if (stackTrace \u003d\u003d null)\n                stackTrace \u003d SentinelHolder.STACK_TRACE_SENTINEL;\n            s.defaultWriteObject();\n        } finally {\n            stackTrace \u003d oldStackTrace;\n        }\n    }\n\n    /**\n     * Appends the specified exception to the exceptions that were\n     * suppressed in order to deliver this exception. This method is\n     * thread-safe and typically called (automatically and implicitly)\n     * by the {@code try}-with-resources statement.\n     *\n     * \u003cp\u003eThe suppression behavior is enabled \u003cem\u003eunless\u003c/em\u003e disabled\n     * {@linkplain #Throwable(String, Throwable, boolean, boolean) via\n     * a constructor}.  When suppression is disabled, this method does\n     * nothing other than to validate its argument.\n     *\n     * \u003cp\u003eNote that when one exception {@linkplain\n     * #initCause(Throwable) causes} another exception, the first\n     * exception is usually caught and then the second exception is\n     * thrown in response.  In other words, there is a causal\n     * connection between the two exceptions.\n     *\n     * In contrast, there are situations where two independent\n     * exceptions can be thrown in sibling code blocks, in particular\n     * in the {@code try} block of a {@code try}-with-resources\n     * statement and the compiler-generated {@code finally} block\n     * which closes the resource.\n     *\n     * In these situations, only one of the thrown exceptions can be\n     * propagated.  In the {@code try}-with-resources statement, when\n     * there are two such exceptions, the exception originating from\n     * the {@code try} block is propagated and the exception from the\n     * {@code finally} block is added to the list of exceptions\n     * suppressed by the exception from the {@code try} block.  As an\n     * exception unwinds the stack, it can accumulate multiple\n     * suppressed exceptions.\n     *\n     * \u003cp\u003eAn exception may have suppressed exceptions while also being\n     * caused by another exception.  Whether or not an exception has a\n     * cause is semantically known at the time of its creation, unlike\n     * whether or not an exception will suppress other exceptions\n     * which is typically only determined after an exception is\n     * thrown.\n     *\n     * \u003cp\u003eNote that programmer written code is also able to take\n     * advantage of calling this method in situations where there are\n     * multiple sibling exceptions and only one can be propagated.\n     *\n     * @param exception the exception to be added to the list of\n     *        suppressed exceptions\n     * @throws IllegalArgumentException if {@code exception} is this\n     *         throwable; a throwable cannot suppress itself.\n     * @throws NullPointerException if {@code exception} is {@code null}\n     * @since 1.7\n     */\n    public final synchronized void addSuppressed(Throwable exception) {\n        if (exception \u003d\u003d this)\n            throw new IllegalArgumentException(SELF_SUPPRESSION_MESSAGE, exception);\n\n        if (exception \u003d\u003d null)\n            throw new NullPointerException(NULL_CAUSE_MESSAGE);\n\n        if (suppressedExceptions \u003d\u003d null) // Suppressed exceptions not recorded\n            return;\n\n        if (suppressedExceptions \u003d\u003d SUPPRESSED_SENTINEL)\n            suppressedExceptions \u003d new ArrayList\u003c\u003e(1);\n\n        suppressedExceptions.add(exception);\n    }\n\n    private static final Throwable[] EMPTY_THROWABLE_ARRAY \u003d new Throwable[0];\n\n    /**\n     * Returns an array containing all of the exceptions that were\n     * suppressed, typically by the {@code try}-with-resources\n     * statement, in order to deliver this exception.\n     *\n     * If no exceptions were suppressed or {@linkplain\n     * #Throwable(String, Throwable, boolean, boolean) suppression is\n     * disabled}, an empty array is returned.  This method is\n     * thread-safe.  Writes to the returned array do not affect future\n     * calls to this method.\n     *\n     * @return an array containing all of the exceptions that were\n     *         suppressed to deliver this exception.\n     * @since 1.7\n     */\n    public final synchronized Throwable[] getSuppressed() {\n        if (suppressedExceptions \u003d\u003d SUPPRESSED_SENTINEL ||\n            suppressedExceptions \u003d\u003d null)\n            return EMPTY_THROWABLE_ARRAY;\n        else\n            return suppressedExceptions.toArray(EMPTY_THROWABLE_ARRAY);\n    }\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

6åé 29, 2024 3:19:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
åxçê: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/Throwable.java"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.06.29 15:19:02 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java

Uri: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

6åé 29, 2024 3:19:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
åxçê: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/Throwable.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2016, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\n\npackage java.lang;\n\nimport  java.io.*;\nimport  java.util.*;\n\n/**\n * The {@code Throwable} class is the superclass of all errors and\n * exceptions in the Java language. Only objects that are instances of this\n * class (or one of its subclasses) are thrown by the Java Virtual Machine or\n * can be thrown by the Java {@code throw} statement. Similarly, only\n * this class or one of its subclasses can be the argument type in a\n * {@code catch} clause.\n *\n * For the purposes of compile-time checking of exceptions, {@code\n * Throwable} and any subclass of {@code Throwable} that is not also a\n * subclass of either {@link RuntimeException} or {@link Error} are\n * regarded as checked exceptions.\n *\n * \u003cp\u003eInstances of two subclasses, {@link java.lang.Error} and\n * {@link java.lang.Exception}, are conventionally used to indicate\n * that exceptional situations have occurred. Typically, these instances\n * are freshly created in the context of the exceptional situation so\n * as to include relevant information (such as stack trace data).\n *\n * \u003cp\u003eA throwable contains a snapshot of the execution stack of its\n * thread at the time it was created. It can also contain a message\n * string that gives more information about the error. Over time, a\n * throwable can {@linkplain Throwable#addSuppressed suppress} other\n * throwables from being propagated.  Finally, the throwable can also\n * contain a \u003ci\u003ecause\u003c/i\u003e: another throwable that caused this\n * throwable to be constructed.  The recording of this causal information\n * is referred to as the \u003ci\u003echained exception\u003c/i\u003e facility, as the\n * cause can, itself, have a cause, and so on, leading to a \"chain\" of\n * exceptions, each caused by another.\n *\n * \u003cp\u003eOne reason that a throwable may have a cause is that the class that\n * throws it is built atop a lower layered abstraction, and an operation on\n * the upper layer fails due to a failure in the lower layer.  It would be bad\n * design to let the throwable thrown by the lower layer propagate outward, as\n * it is generally unrelated to the abstraction provided by the upper layer.\n * Further, doing so would tie the API of the upper layer to the details of\n * its implementation, assuming the lower layer\u0027s exception was a checked\n * exception.  Throwing a \"wrapped exception\" (i.e., an exception containing a\n * cause) allows the upper layer to communicate the details of the failure to\n * its caller without incurring either of these shortcomings.  It preserves\n * the flexibility to change the implementation of the upper layer without\n * changing its API (in particular, the set of exceptions thrown by its\n * methods).\n *\n * \u003cp\u003eA second reason that a throwable may have a cause is that the method\n * that throws it must conform to a general-purpose interface that does not\n * permit the method to throw the cause directly.  For example, suppose\n * a persistent collection conforms to the {@link java.util.Collection\n * Collection} interface, and that its persistence is implemented atop\n * {@code java.io}.  Suppose the internals of the {@code add} method\n * can throw an {@link java.io.IOException IOException}.  The implementation\n * can communicate the details of the {@code IOException} to its caller\n * while conforming to the {@code Collection} interface by wrapping the\n * {@code IOException} in an appropriate unchecked exception.  (The\n * specification for the persistent collection should indicate that it is\n * capable of throwing such exceptions.)\n *\n * \u003cp\u003eA cause can be associated with a throwable in two ways: via a\n * constructor that takes the cause as an argument, or via the\n * {@link #initCause(Throwable)} method.  New throwable classes that\n * wish to allow causes to be associated with them should provide constructors\n * that take a cause and delegate (perhaps indirectly) to one of the\n * {@code Throwable} constructors that takes a cause.\n *\n * Because the {@code initCause} method is public, it allows a cause to be\n * associated with any throwable, even a \"legacy throwable\" whose\n * implementation predates the addition of the exception chaining mechanism to\n * {@code Throwable}.\n *\n * \u003cp\u003eBy convention, class {@code Throwable} and its subclasses have two\n * constructors, one that takes no arguments and one that takes a\n * {@code String} argument that can be used to produce a detail message.\n * Further, those subclasses that might likely have a cause associated with\n * them should have two more constructors, one that takes a\n * {@code Throwable} (the cause), and one that takes a\n * {@code String} (the detail message) and a {@code Throwable} (the\n * cause).\n *\n * @author  unascribed\n * @author  Josh Bloch (Added exception chaining and programmatic access to\n *          stack trace in 1.4.)\n * @jls 11.2 Compile-Time Checking of Exceptions\n * @since 1.0\n */\npublic class Throwable implements Serializable {\n    /** use serialVersionUID from JDK 1.0.2 for interoperability */\n    private static final long serialVersionUID \u003d -3042686055658047285L;\n\n    /**\n     * The JVM saves some indication of the stack backtrace in this slot.\n     */\n    private transient Object backtrace;\n\n    /**\n     * Specific details about the Throwable.  For example, for\n     * {@code FileNotFoundException}, this contains the name of\n     * the file that could not be found.\n     *\n     * @serial\n     */\n    private String detailMessage;\n\n\n    /**\n     * Holder class to defer initializing sentinel objects only used\n     * for serialization.\n     */\n    private static class SentinelHolder {\n        /**\n         * {@linkplain #setStackTrace(StackTraceElement[]) Setting the\n         * stack trace} to a one-element array containing this sentinel\n         * value indicates future attempts to set the stack trace will be\n         * ignored.  The sentinel is equal to the result of calling:\u003cbr\u003e\n         * {@code new StackTraceElement(\"\", \"\", null, Integer.MIN_VALUE)}\n         */\n        public static final StackTraceElement STACK_TRACE_ELEMENT_SENTINEL \u003d\n            new StackTraceElement(\"\", \"\", null, Integer.MIN_VALUE);\n\n        /**\n         * Sentinel value used in the serial form to indicate an immutable\n         * stack trace.\n         */\n        public static final StackTraceElement[] STACK_TRACE_SENTINEL \u003d\n            new StackTraceElement[] {STACK_TRACE_ELEMENT_SENTINEL};\n    }\n\n    /**\n     * A shared value for an empty stack.\n     */\n    private static final StackTraceElement[] UNASSIGNED_STACK \u003d new StackTraceElement[0];\n\n    /*\n     * To allow Throwable objects to be made immutable and safely\n     * reused by the JVM, such as OutOfMemoryErrors, fields of\n     * Throwable that are writable in response to user actions, cause,\n     * stackTrace, and suppressedExceptions obey the following\n     * protocol:\n     *\n     * 1) The fields are initialized to a non-null sentinel value\n     * which indicates the value has logically not been set.\n     *\n     * 2) Writing a null to the field indicates further writes\n     * are forbidden\n     *\n     * 3) The sentinel value may be replaced with another non-null\n     * value.\n     *\n     * For example, implementations of the HotSpot JVM have\n     * preallocated OutOfMemoryError objects to provide for better\n     * diagnosability of that situation.  These objects are created\n     * without calling the constructor for that class and the fields\n     * in question are initialized to null.  To support this\n     * capability, any new fields added to Throwable that require\n     * being initialized to a non-null value require a coordinated JVM\n     * change.\n     */\n\n    /**\n     * The throwable that caused this throwable to get thrown, or null if this\n     * throwable was not caused by another throwable, or if the causative\n     * throwable is unknown.  If this field is equal to this throwable itself,\n     * it indicates that the cause of this throwable has not yet been\n     * initialized.\n     *\n     * @serial\n     * @since 1.4\n     */\n    private Throwable cause \u003d this;\n\n    /**\n     * The stack trace, as returned by {@link #getStackTrace()}.\n     *\n     * The field is initialized to a zero-length array.  A {@code\n     * null} value of this field indicates subsequent calls to {@link\n     * #setStackTrace(StackTraceElement[])} and {@link\n     * #fillInStackTrace()} will be no-ops.\n     *\n     * @serial\n     * @since 1.4\n     */\n    private StackTraceElement[] stackTrace \u003d UNASSIGNED_STACK;\n\n    /**\n     * The JVM code sets the depth of the backtrace for later retrieval\n     */\n    private transient int depth;\n\n    // Setting this static field introduces an acceptable\n    // initialization dependency on a few java.util classes.\n    private static final List\u003cThrowable\u003e SUPPRESSED_SENTINEL \u003d Collections.emptyList();\n\n    /**\n     * The list of suppressed exceptions, as returned by {@link\n     * #getSuppressed()}.  The list is initialized to a zero-element\n     * unmodifiable sentinel list.  When a serialized Throwable is\n     * read in, if the {@code suppressedExceptions} field points to a\n     * zero-element list, the field is reset to the sentinel value.\n     *\n     * @serial\n     * @since 1.7\n     */\n    private List\u003cThrowable\u003e suppressedExceptions \u003d SUPPRESSED_SENTINEL;\n\n    /** Message for trying to suppress a null exception. */\n    private static final String NULL_CAUSE_MESSAGE \u003d \"Cannot suppress a null exception.\";\n\n    /** Message for trying to suppress oneself. */\n    private static final String SELF_SUPPRESSION_MESSAGE \u003d \"Self-suppression not permitted\";\n\n    /** Caption  for labeling causative exception stack traces */\n    private static final String CAUSE_CAPTION \u003d \"Caused by: \";\n\n    /** Caption for labeling suppressed exception stack traces */\n    private static final String SUPPRESSED_CAPTION \u003d \"Suppressed: \";\n\n    /**\n     * Constructs a new throwable with {@code null} as its detail message.\n     * The cause is not initialized, and may subsequently be initialized by a\n     * call to {@link #initCause}.\n     *\n     * \u003cp\u003eThe {@link #fillInStackTrace()} method is called to initialize\n     * the stack trace data in the newly created throwable.\n     */\n    public Throwable() {\n        fillInStackTrace();\n    }\n\n    /**\n     * Constructs a new throwable with the specified detail message.  The\n     * cause is not initialized, and may subsequently be initialized by\n     * a call to {@link #initCause}.\n     *\n     * \u003cp\u003eThe {@link #fillInStackTrace()} method is called to initialize\n     * the stack trace data in the newly created throwable.\n     *\n     * @param   message   the detail message. The detail message is saved for\n     *          later retrieval by the {@link #getMessage()} method.\n     */\n    public Throwable(String message) {\n        fillInStackTrace();\n        detailMessage \u003d message;\n    }\n\n    /**\n     * Constructs a new throwable with the specified detail message and\n     * cause.  \u003cp\u003eNote that the detail message associated with\n     * {@code cause} is \u003ci\u003enot\u003c/i\u003e automatically incorporated in\n     * this throwable\u0027s detail message.\n     *\n     * \u003cp\u003eThe {@link #fillInStackTrace()} method is called to initialize\n     * the stack trace data in the newly created throwable.\n     *\n     * @param  message the detail message (which is saved for later retrieval\n     *         by the {@link #getMessage()} method).\n     * @param  cause the cause (which is saved for later retrieval by the\n     *         {@link #getCause()} method).  (A {@code null} value is\n     *         permitted, and indicates that the cause is nonexistent or\n     *         unknown.)\n     * @since  1.4\n     */\n    public Throwable(String message, Throwable cause) {\n        fillInStackTrace();\n        detailMessage \u003d message;\n        this.cause \u003d cause;\n    }\n\n    /**\n     * Constructs a new throwable with the specified cause and a detail\n     * message of {@code (cause\u003d\u003dnull ? null : cause.toString())} (which\n     * typically contains the class and detail message of {@code cause}).\n     * This constructor is useful for throwables that are little more than\n     * wrappers for other throwables (for example, {@link\n     * java.security.PrivilegedActionException}).\n     *\n     * \u003cp\u003eThe {@link #fillInStackTrace()} method is called to initialize\n     * the stack trace data in the newly created throwable.\n     *\n     * @param  cause the cause (which is saved for later retrieval by the\n     *         {@link #getCause()} method).  (A {@code null} value is\n     *         permitted, and indicates that the cause is nonexistent or\n     *         unknown.)\n     * @since  1.4\n     */\n    public Throwable(Throwable cause) {\n        fillInStackTrace();\n        detailMessage \u003d (cause\u003d\u003dnull ? null : cause.toString());\n        this.cause \u003d cause;\n    }\n\n    /**\n     * Constructs a new throwable with the specified detail message,\n     * cause, {@linkplain #addSuppressed suppression} enabled or\n     * disabled, and writable stack trace enabled or disabled.  If\n     * suppression is disabled, {@link #getSuppressed} for this object\n     * will return a zero-length array and calls to {@link\n     * #addSuppressed} that would otherwise append an exception to the\n     * suppressed list will have no effect.  If the writable stack\n     * trace is false, this constructor will not call {@link\n     * #fillInStackTrace()}, a {@code null} will be written to the\n     * {@code stackTrace} field, and subsequent calls to {@code\n     * fillInStackTrace} and {@link\n     * #setStackTrace(StackTraceElement[])} will not set the stack\n     * trace.  If the writable stack trace is false, {@link\n     * #getStackTrace} will return a zero length array.\n     *\n     * \u003cp\u003eNote that the other constructors of {@code Throwable} treat\n     * suppression as being enabled and the stack trace as being\n     * writable.  Subclasses of {@code Throwable} should document any\n     * conditions under which suppression is disabled and document\n     * conditions under which the stack trace is not writable.\n     * Disabling of suppression should only occur in exceptional\n     * circumstances where special requirements exist, such as a\n     * virtual machine reusing exception objects under low-memory\n     * situations.  Circumstances where a given exception object is\n     * repeatedly caught and rethrown, such as to implement control\n     * flow between two sub-systems, is another situation where\n     * immutable throwable objects would be appropriate.\n     *\n     * @param  message the detail message.\n     * @param cause the cause.  (A {@code null} value is permitted,\n     * and indicates that the cause is nonexistent or unknown.)\n     * @param enableSuppression whether or not suppression is enabled or disabled\n     * @param writableStackTrace whether or not the stack trace should be\n     *                           writable\n     *\n     * @see OutOfMemoryError\n     * @see NullPointerException\n     * @see ArithmeticException\n     * @since 1.7\n     */\n    protected Throwable(String message, Throwable cause,\n                        boolean enableSuppression,\n                        boolean writableStackTrace) {\n        if (writableStackTrace) {\n            fillInStackTrace();\n        } else {\n            stackTrace \u003d null;\n        }\n        detailMessage \u003d message;\n        this.cause \u003d cause;\n        if (!enableSuppression)\n            suppressedExceptions \u003d null;\n    }\n\n    /**\n     * Returns the detail message string of this throwable.\n     *\n     * @return  the detail message string of this {@code Throwable} instance\n     *          (which may be {@code null}).\n     */\n    public String getMessage() {\n        return detailMessage;\n    }\n\n    /**\n     * Creates a localized description of this throwable.\n     * Subclasses may override this method in order to produce a\n     * locale-specific message.  For subclasses that do not override this\n     * method, the default implementation returns the same result as\n     * {@code getMessage()}.\n     *\n     * @return  The localized description of this throwable.\n     * @since   1.1\n     */\n    public String getLocalizedMessage() {\n        return getMessage();\n    }\n\n    /**\n     * Returns the cause of this throwable or {@code null} if the\n     * cause is nonexistent or unknown.  (The cause is the throwable that\n     * caused this throwable to get thrown.)\n     *\n     * \u003cp\u003eThis implementation returns the cause that was supplied via one of\n     * the constructors requiring a {@code Throwable}, or that was set after\n     * creation with the {@link #initCause(Throwable)} method.  While it is\n     * typically unnecessary to override this method, a subclass can override\n     * it to return a cause set by some other means.  This is appropriate for\n     * a \"legacy chained throwable\" that predates the addition of chained\n     * exceptions to {@code Throwable}.  Note that it is \u003ci\u003enot\u003c/i\u003e\n     * necessary to override any of the {@code PrintStackTrace} methods,\n     * all of which invoke the {@code getCause} method to determine the\n     * cause of a throwable.\n     *\n     * @return  the cause of this throwable or {@code null} if the\n     *          cause is nonexistent or unknown.\n     * @since 1.4\n     */\n    public synchronized Throwable getCause() {\n        return (cause\u003d\u003dthis ? null : cause);\n    }\n\n    /**\n     * Initializes the \u003ci\u003ecause\u003c/i\u003e of this throwable to the specified value.\n     * (The cause is the throwable that caused this throwable to get thrown.)\n     *\n     * \u003cp\u003eThis method can be called at most once.  It is generally called from\n     * within the constructor, or immediately after creating the\n     * throwable.  If this throwable was created\n     * with {@link #Throwable(Throwable)} or\n     * {@link #Throwable(String,Throwable)}, this method cannot be called\n     * even once.\n     *\n     * \u003cp\u003eAn example of using this method on a legacy throwable type\n     * without other support for setting the cause is:\n     *\n     * \u003cpre\u003e\n     * try {\n     *     lowLevelOp();\n     * } catch (LowLevelException le) {\n     *     throw (HighLevelException)\n     *           new HighLevelException().initCause(le); // Legacy constructor\n     * }\n     * \u003c/pre\u003e\n     *\n     * @param  cause the cause (which is saved for later retrieval by the\n     *         {@link #getCause()} method).  (A {@code null} value is\n     *         permitted, and indicates that the cause is nonexistent or\n     *         unknown.)\n     * @return  a reference to this {@code Throwable} instance.\n     * @throws IllegalArgumentException if {@code cause} is this\n     *         throwable.  (A throwable cannot be its own cause.)\n     * @throws IllegalStateException if this throwable was\n     *         created with {@link #Throwable(Throwable)} or\n     *         {@link #Throwable(String,Throwable)}, or this method has already\n     *         been called on this throwable.\n     * @since  1.4\n     */\n    public synchronized Throwable initCause(Throwable cause) {\n        if (this.cause !\u003d this)\n            throw new IllegalStateException(\"Can\u0027t overwrite cause with \" +\n                                            Objects.toString(cause, \"a null\"), this);\n        if (cause \u003d\u003d this)\n            throw new IllegalArgumentException(\"Self-causation not permitted\", this);\n        this.cause \u003d cause;\n        return this;\n    }\n\n    /**\n     * Returns a short description of this throwable.\n     * The result is the concatenation of:\n     * \u003cul\u003e\n     * \u003cli\u003e the {@linkplain Class#getName() name} of the class of this object\n     * \u003cli\u003e \": \" (a colon and a space)\n     * \u003cli\u003e the result of invoking this object\u0027s {@link #getLocalizedMessage}\n     *      method\n     * \u003c/ul\u003e\n     * If {@code getLocalizedMessage} returns {@code null}, then just\n     * the class name is returned.\n     *\n     * @return a string representation of this throwable.\n     */\n    public String toString() {\n        String s \u003d getClass().getName();\n        String message \u003d getLocalizedMessage();\n        return (message !\u003d null) ? (s + \": \" + message) : s;\n    }\n\n    /**\n     * Prints this throwable and its backtrace to the\n     * standard error stream. This method prints a stack trace for this\n     * {@code Throwable} object on the error output stream that is\n     * the value of the field {@code System.err}. The first line of\n     * output contains the result of the {@link #toString()} method for\n     * this object.  Remaining lines represent data previously recorded by\n     * the method {@link #fillInStackTrace()}. The format of this\n     * information depends on the implementation, but the following\n     * example may be regarded as typical:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * java.lang.NullPointerException\n     *         at MyClass.mash(MyClass.java:9)\n     *         at MyClass.crunch(MyClass.java:6)\n     *         at MyClass.main(MyClass.java:3)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * This example was produced by running the program:\n     * \u003cpre\u003e\n     * class MyClass {\n     *     public static void main(String[] args) {\n     *         crunch(null);\n     *     }\n     *     static void crunch(int[] a) {\n     *         mash(a);\n     *     }\n     *     static void mash(int[] b) {\n     *         System.out.println(b[0]);\n     *     }\n     * }\n     * \u003c/pre\u003e\n     * The backtrace for a throwable with an initialized, non-null cause\n     * should generally include the backtrace for the cause.  The format\n     * of this information depends on the implementation, but the following\n     * example may be regarded as typical:\n     * \u003cpre\u003e\n     * HighLevelException: MidLevelException: LowLevelException\n     *         at Junk.a(Junk.java:13)\n     *         at Junk.main(Junk.java:4)\n     * Caused by: MidLevelException: LowLevelException\n     *         at Junk.c(Junk.java:23)\n     *         at Junk.b(Junk.java:17)\n     *         at Junk.a(Junk.java:11)\n     *         ... 1 more\n     * Caused by: LowLevelException\n     *         at Junk.e(Junk.java:30)\n     *         at Junk.d(Junk.java:27)\n     *         at Junk.c(Junk.java:21)\n     *         ... 3 more\n     * \u003c/pre\u003e\n     * Note the presence of lines containing the characters {@code \"...\"}.\n     * These lines indicate that the remainder of the stack trace for this\n     * exception matches the indicated number of frames from the bottom of the\n     * stack trace of the exception that was caused by this exception (the\n     * \"enclosing\" exception).  This shorthand can greatly reduce the length\n     * of the output in the common case where a wrapped exception is thrown\n     * from same method as the \"causative exception\" is caught.  The above\n     * example was produced by running the program:\n     * \u003cpre\u003e\n     * public class Junk {\n     *     public static void main(String args[]) {\n     *         try {\n     *             a();\n     *         } catch(HighLevelException e) {\n     *             e.printStackTrace();\n     *         }\n     *     }\n     *     static void a() throws HighLevelException {\n     *         try {\n     *             b();\n     *         } catch(MidLevelException e) {\n     *             throw new HighLevelException(e);\n     *         }\n     *     }\n     *     static void b() throws MidLevelException {\n     *         c();\n     *     }\n     *     static void c() throws MidLevelException {\n     *         try {\n     *             d();\n     *         } catch(LowLevelException e) {\n     *             throw new MidLevelException(e);\n     *         }\n     *     }\n     *     static void d() throws LowLevelException {\n     *        e();\n     *     }\n     *     static void e() throws LowLevelException {\n     *         throw new LowLevelException();\n     *     }\n     * }\n     *\n     * class HighLevelException extends Exception {\n     *     HighLevelException(Throwable cause) { super(cause); }\n     * }\n     *\n     * class MidLevelException extends Exception {\n     *     MidLevelException(Throwable cause)  { super(cause); }\n     * }\n     *\n     * class LowLevelException extends Exception {\n     * }\n     * \u003c/pre\u003e\n     * As of release 7, the platform supports the notion of\n     * \u003ci\u003esuppressed exceptions\u003c/i\u003e (in conjunction with the {@code\n     * try}-with-resources statement). Any exceptions that were\n     * suppressed in order to deliver an exception are printed out\n     * beneath the stack trace.  The format of this information\n     * depends on the implementation, but the following example may be\n     * regarded as typical:\n     *\n     * \u003cpre\u003e\n     * Exception in thread \"main\" java.lang.Exception: Something happened\n     *  at Foo.bar(Foo.java:10)\n     *  at Foo.main(Foo.java:5)\n     *  Suppressed: Resource$CloseFailException: Resource ID \u003d 0\n     *          at Resource.close(Resource.java:26)\n     *          at Foo.bar(Foo.java:9)\n     *          ... 1 more\n     * \u003c/pre\u003e\n     * Note that the \"... n more\" notation is used on suppressed exceptions\n     * just at it is used on causes. Unlike causes, suppressed exceptions are\n     * indented beyond their \"containing exceptions.\"\n     *\n     * \u003cp\u003eAn exception can have both a cause and one or more suppressed\n     * exceptions:\n     * \u003cpre\u003e\n     * Exception in thread \"main\" java.lang.Exception: Main block\n     *  at Foo3.main(Foo3.java:7)\n     *  Suppressed: Resource$CloseFailException: Resource ID \u003d 2\n     *          at Resource.close(Resource.java:26)\n     *          at Foo3.main(Foo3.java:5)\n     *  Suppressed: Resource$CloseFailException: Resource ID \u003d 1\n     *          at Resource.close(Resource.java:26)\n     *          at Foo3.main(Foo3.java:5)\n     * Caused by: java.lang.Exception: I did it\n     *  at Foo3.main(Foo3.java:8)\n     * \u003c/pre\u003e\n     * Likewise, a suppressed exception can have a cause:\n     * \u003cpre\u003e\n     * Exception in thread \"main\" java.lang.Exception: Main block\n     *  at Foo4.main(Foo4.java:6)\n     *  Suppressed: Resource2$CloseFailException: Resource ID \u003d 1\n     *          at Resource2.close(Resource2.java:20)\n     *          at Foo4.main(Foo4.java:5)\n     *  Caused by: java.lang.Exception: Rats, you caught me\n     *          at Resource2$CloseFailException.\u0026lt;init\u0026gt;(Resource2.java:45)\n     *          ... 2 more\n     * \u003c/pre\u003e\n     */\n    public void printStackTrace() {\n        printStackTrace(System.err);\n    }\n\n    /**\n     * Prints this throwable and its backtrace to the specified print stream.\n     *\n     * @param s {@code PrintStream} to use for output\n     */\n    public void printStackTrace(PrintStream s) {\n        printStackTrace(new WrappedPrintStream(s));\n    }\n\n    private void printStackTrace(PrintStreamOrWriter s) {\n        // Guard against malicious overrides of Throwable.equals by\n        // using a Set with identity equality semantics.\n        Set\u003cThrowable\u003e dejaVu \u003d Collections.newSetFromMap(new IdentityHashMap\u003c\u003e());\n        dejaVu.add(this);\n\n        synchronized (s.lock()) {\n            // Print our stack trace\n            s.println(this);\n            StackTraceElement[] trace \u003d getOurStackTrace();\n            for (StackTraceElement traceElement : trace)\n                s.println(\"\\tat \" + traceElement);\n\n            // Print suppressed exceptions, if any\n            for (Throwable se : getSuppressed())\n                se.printEnclosedStackTrace(s, trace, SUPPRESSED_CAPTION, \"\\t\", dejaVu);\n\n            // Print cause, if any\n            Throwable ourCause \u003d getCause();\n            if (ourCause !\u003d null)\n                ourCause.printEnclosedStackTrace(s, trace, CAUSE_CAPTION, \"\", dejaVu);\n        }\n    }\n\n    /**\n     * Print our stack trace as an enclosed exception for the specified\n     * stack trace.\n     */\n    private void printEnclosedStackTrace(PrintStreamOrWriter s,\n                                         StackTraceElement[] enclosingTrace,\n                                         String caption,\n                                         String prefix,\n                                         Set\u003cThrowable\u003e dejaVu) {\n        assert Thread.holdsLock(s.lock());\n        if (dejaVu.contains(this)) {\n            s.println(\"\\t[CIRCULAR REFERENCE:\" + this + \"]\");\n        } else {\n            dejaVu.add(this);\n            // Compute number of frames in common between this and enclosing trace\n            StackTraceElement[] trace \u003d getOurStackTrace();\n            int m \u003d trace.length - 1;\n            int n \u003d enclosingTrace.length - 1;\n            while (m \u003e\u003d 0 \u0026\u0026 n \u003e\u003d0 \u0026\u0026 trace[m].equals(enclosingTrace[n])) {\n                m--; n--;\n            }\n            int framesInCommon \u003d trace.length - 1 - m;\n\n            // Print our stack trace\n            s.println(prefix + caption + this);\n            for (int i \u003d 0; i \u003c\u003d m; i++)\n                s.println(prefix + \"\\tat \" + trace[i]);\n            if (framesInCommon !\u003d 0)\n                s.println(prefix + \"\\t... \" + framesInCommon + \" more\");\n\n            // Print suppressed exceptions, if any\n            for (Throwable se : getSuppressed())\n                se.printEnclosedStackTrace(s, trace, SUPPRESSED_CAPTION,\n                                           prefix +\"\\t\", dejaVu);\n\n            // Print cause, if any\n            Throwable ourCause \u003d getCause();\n            if (ourCause !\u003d null)\n                ourCause.printEnclosedStackTrace(s, trace, CAUSE_CAPTION, prefix, dejaVu);\n        }\n    }\n\n    /**\n     * Prints this throwable and its backtrace to the specified\n     * print writer.\n     *\n     * @param s {@code PrintWriter} to use for output\n     * @since   1.1\n     */\n    public void printStackTrace(PrintWriter s) {\n        printStackTrace(new WrappedPrintWriter(s));\n    }\n\n    /**\n     * Wrapper class for PrintStream and PrintWriter to enable a single\n     * implementation of printStackTrace.\n     */\n    private abstract static class PrintStreamOrWriter {\n        /** Returns the object to be locked when using this StreamOrWriter */\n        abstract Object lock();\n\n        /** Prints the specified string as a line on this StreamOrWriter */\n        abstract void println(Object o);\n    }\n\n    private static class WrappedPrintStream extends PrintStreamOrWriter {\n        private final PrintStream printStream;\n\n        WrappedPrintStream(PrintStream printStream) {\n            this.printStream \u003d printStream;\n        }\n\n        Object lock() {\n            return printStream;\n        }\n\n        void println(Object o) {\n            printStream.println(o);\n        }\n    }\n\n    private static class WrappedPrintWriter extends PrintStreamOrWriter {\n        private final PrintWriter printWriter;\n\n        WrappedPrintWriter(PrintWriter printWriter) {\n            this.printWriter \u003d printWriter;\n        }\n\n        Object lock() {\n            return printWriter;\n        }\n\n        void println(Object o) {\n            printWriter.println(o);\n        }\n    }\n\n    /**\n     * Fills in the execution stack trace. This method records within this\n     * {@code Throwable} object information about the current state of\n     * the stack frames for the current thread.\n     *\n     * \u003cp\u003eIf the stack trace of this {@code Throwable} {@linkplain\n     * Throwable#Throwable(String, Throwable, boolean, boolean) is not\n     * writable}, calling this method has no effect.\n     *\n     * @return  a reference to this {@code Throwable} instance.\n     * @see     java.lang.Throwable#printStackTrace()\n     */\n    public synchronized Throwable fillInStackTrace() {\n        if (stackTrace !\u003d null ||\n            backtrace !\u003d null /* Out of protocol state */ ) {\n            fillInStackTrace(0);\n            stackTrace \u003d UNASSIGNED_STACK;\n        }\n        return this;\n    }\n\n    private native Throwable fillInStackTrace(int dummy);\n\n    /**\n     * Provides programmatic access to the stack trace information printed by\n     * {@link #printStackTrace()}.  Returns an array of stack trace elements,\n     * each representing one stack frame.  The zeroth element of the array\n     * (assuming the array\u0027s length is non-zero) represents the top of the\n     * stack, which is the last method invocation in the sequence.  Typically,\n     * this is the point at which this throwable was created and thrown.\n     * The last element of the array (assuming the array\u0027s length is non-zero)\n     * represents the bottom of the stack, which is the first method invocation\n     * in the sequence.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this throwable is permitted to return a zero-length array from this\n     * method.  Generally speaking, the array returned by this method will\n     * contain one element for every frame that would be printed by\n     * {@code printStackTrace}.  Writes to the returned array do not\n     * affect future calls to this method.\n     *\n     * @return an array of stack trace elements representing the stack trace\n     *         pertaining to this throwable.\n     * @since  1.4\n     */\n    public StackTraceElement[] getStackTrace() {\n        return getOurStackTrace().clone();\n    }\n\n    private synchronized StackTraceElement[] getOurStackTrace() {\n        // Initialize stack trace field with information from\n        // backtrace if this is the first call to this method\n        if (stackTrace \u003d\u003d UNASSIGNED_STACK ||\n            (stackTrace \u003d\u003d null \u0026\u0026 backtrace !\u003d null) /* Out of protocol state */) {\n            stackTrace \u003d StackTraceElement.of(this, depth);\n        } else if (stackTrace \u003d\u003d null) {\n            return UNASSIGNED_STACK;\n        }\n        return stackTrace;\n    }\n\n    /**\n     * Sets the stack trace elements that will be returned by\n     * {@link #getStackTrace()} and printed by {@link #printStackTrace()}\n     * and related methods.\n     *\n     * This method, which is designed for use by RPC frameworks and other\n     * advanced systems, allows the client to override the default\n     * stack trace that is either generated by {@link #fillInStackTrace()}\n     * when a throwable is constructed or deserialized when a throwable is\n     * read from a serialization stream.\n     *\n     * \u003cp\u003eIf the stack trace of this {@code Throwable} {@linkplain\n     * Throwable#Throwable(String, Throwable, boolean, boolean) is not\n     * writable}, calling this method has no effect other than\n     * validating its argument.\n     *\n     * @param   stackTrace the stack trace elements to be associated with\n     * this {@code Throwable}.  The specified array is copied by this\n     * call; changes in the specified array after the method invocation\n     * returns will have no affect on this {@code Throwable}\u0027s stack\n     * trace.\n     *\n     * @throws NullPointerException if {@code stackTrace} is\n     *         {@code null} or if any of the elements of\n     *         {@code stackTrace} are {@code null}\n     *\n     * @since  1.4\n     */\n    public void setStackTrace(StackTraceElement[] stackTrace) {\n        // Validate argument\n        StackTraceElement[] defensiveCopy \u003d stackTrace.clone();\n        for (int i \u003d 0; i \u003c defensiveCopy.length; i++) {\n            if (defensiveCopy[i] \u003d\u003d null)\n                throw new NullPointerException(\"stackTrace[\" + i + \"]\");\n        }\n\n        synchronized (this) {\n            if (this.stackTrace \u003d\u003d null \u0026\u0026 // Immutable stack\n                backtrace \u003d\u003d null) // Test for out of protocol state\n                return;\n            this.stackTrace \u003d defensiveCopy;\n        }\n    }\n\n    /**\n     * Reads a {@code Throwable} from a stream, enforcing\n     * well-formedness constraints on fields.  Null entries and\n     * self-pointers are not allowed in the list of {@code\n     * suppressedExceptions}.  Null entries are not allowed for stack\n     * trace elements.  A null stack trace in the serial form results\n     * in a zero-length stack element array. A single-element stack\n     * trace whose entry is equal to {@code new StackTraceElement(\"\",\n     * \"\", null, Integer.MIN_VALUE)} results in a {@code null} {@code\n     * stackTrace} field.\n     *\n     * Note that there are no constraints on the value the {@code\n     * cause} field can hold; both {@code null} and {@code this} are\n     * valid values for the field.\n     */\n    private void readObject(ObjectInputStream s)\n        throws IOException, ClassNotFoundException {\n        s.defaultReadObject();     // read in all fields\n        if (suppressedExceptions !\u003d null) {\n            List\u003cThrowable\u003e suppressed \u003d null;\n            if (suppressedExceptions.isEmpty()) {\n                // Use the sentinel for a zero-length list\n                suppressed \u003d SUPPRESSED_SENTINEL;\n            } else { // Copy Throwables to new list\n                suppressed \u003d new ArrayList\u003c\u003e(1);\n                for (Throwable t : suppressedExceptions) {\n                    // Enforce constraints on suppressed exceptions in\n                    // case of corrupt or malicious stream.\n                    if (t \u003d\u003d null)\n                        throw new NullPointerException(NULL_CAUSE_MESSAGE);\n                    if (t \u003d\u003d this)\n                        throw new IllegalArgumentException(SELF_SUPPRESSION_MESSAGE);\n                    suppressed.add(t);\n                }\n            }\n            suppressedExceptions \u003d suppressed;\n        } // else a null suppressedExceptions field remains null\n\n        /*\n         * For zero-length stack traces, use a clone of\n         * UNASSIGNED_STACK rather than UNASSIGNED_STACK itself to\n         * allow identity comparison against UNASSIGNED_STACK in\n         * getOurStackTrace.  The identity of UNASSIGNED_STACK in\n         * stackTrace indicates to the getOurStackTrace method that\n         * the stackTrace needs to be constructed from the information\n         * in backtrace.\n         */\n        if (stackTrace !\u003d null) {\n            if (stackTrace.length \u003d\u003d 0) {\n                stackTrace \u003d UNASSIGNED_STACK.clone();\n            }  else if (stackTrace.length \u003d\u003d 1 \u0026\u0026\n                        // Check for the marker of an immutable stack trace\n                        SentinelHolder.STACK_TRACE_ELEMENT_SENTINEL.equals(stackTrace[0])) {\n                stackTrace \u003d null;\n            } else { // Verify stack trace elements are non-null.\n                for(StackTraceElement ste : stackTrace) {\n                    if (ste \u003d\u003d null)\n                        throw new NullPointerException(\"null StackTraceElement in serial stream. \");\n                }\n            }\n        } else {\n            // A null stackTrace field in the serial form can result\n            // from an exception serialized without that field in\n            // older JDK releases; treat such exceptions as having\n            // empty stack traces.\n            stackTrace \u003d UNASSIGNED_STACK.clone();\n        }\n    }\n\n    /**\n     * Write a {@code Throwable} object to a stream.\n     *\n     * A {@code null} stack trace field is represented in the serial\n     * form as a one-element array whose element is equal to {@code\n     * new StackTraceElement(\"\", \"\", null, Integer.MIN_VALUE)}.\n     */\n    private synchronized void writeObject(ObjectOutputStream s)\n        throws IOException {\n        // Ensure that the stackTrace field is initialized to a\n        // non-null value, if appropriate.  As of JDK 7, a null stack\n        // trace field is a valid value indicating the stack trace\n        // should not be set.\n        getOurStackTrace();\n\n        StackTraceElement[] oldStackTrace \u003d stackTrace;\n        try {\n            if (stackTrace \u003d\u003d null)\n                stackTrace \u003d SentinelHolder.STACK_TRACE_SENTINEL;\n            s.defaultWriteObject();\n        } finally {\n            stackTrace \u003d oldStackTrace;\n        }\n    }\n\n    /**\n     * Appends the specified exception to the exceptions that were\n     * suppressed in order to deliver this exception. This method is\n     * thread-safe and typically called (automatically and implicitly)\n     * by the {@code try}-with-resources statement.\n     *\n     * \u003cp\u003eThe suppression behavior is enabled \u003cem\u003eunless\u003c/em\u003e disabled\n     * {@linkplain #Throwable(String, Throwable, boolean, boolean) via\n     * a constructor}.  When suppression is disabled, this method does\n     * nothing other than to validate its argument.\n     *\n     * \u003cp\u003eNote that when one exception {@linkplain\n     * #initCause(Throwable) causes} another exception, the first\n     * exception is usually caught and then the second exception is\n     * thrown in response.  In other words, there is a causal\n     * connection between the two exceptions.\n     *\n     * In contrast, there are situations where two independent\n     * exceptions can be thrown in sibling code blocks, in particular\n     * in the {@code try} block of a {@code try}-with-resources\n     * statement and the compiler-generated {@code finally} block\n     * which closes the resource.\n     *\n     * In these situations, only one of the thrown exceptions can be\n     * propagated.  In the {@code try}-with-resources statement, when\n     * there are two such exceptions, the exception originating from\n     * the {@code try} block is propagated and the exception from the\n     * {@code finally} block is added to the list of exceptions\n     * suppressed by the exception from the {@code try} block.  As an\n     * exception unwinds the stack, it can accumulate multiple\n     * suppressed exceptions.\n     *\n     * \u003cp\u003eAn exception may have suppressed exceptions while also being\n     * caused by another exception.  Whether or not an exception has a\n     * cause is semantically known at the time of its creation, unlike\n     * whether or not an exception will suppress other exceptions\n     * which is typically only determined after an exception is\n     * thrown.\n     *\n     * \u003cp\u003eNote that programmer written code is also able to take\n     * advantage of calling this method in situations where there are\n     * multiple sibling exceptions and only one can be propagated.\n     *\n     * @param exception the exception to be added to the list of\n     *        suppressed exceptions\n     * @throws IllegalArgumentException if {@code exception} is this\n     *         throwable; a throwable cannot suppress itself.\n     * @throws NullPointerException if {@code exception} is {@code null}\n     * @since 1.7\n     */\n    public final synchronized void addSuppressed(Throwable exception) {\n        if (exception \u003d\u003d this)\n            throw new IllegalArgumentException(SELF_SUPPRESSION_MESSAGE, exception);\n\n        if (exception \u003d\u003d null)\n            throw new NullPointerException(NULL_CAUSE_MESSAGE);\n\n        if (suppressedExceptions \u003d\u003d null) // Suppressed exceptions not recorded\n            return;\n\n        if (suppressedExceptions \u003d\u003d SUPPRESSED_SENTINEL)\n            suppressedExceptions \u003d new ArrayList\u003c\u003e(1);\n\n        suppressedExceptions.add(exception);\n    }\n\n    private static final Throwable[] EMPTY_THROWABLE_ARRAY \u003d new Throwable[0];\n\n    /**\n     * Returns an array containing all of the exceptions that were\n     * suppressed, typically by the {@code try}-with-resources\n     * statement, in order to deliver this exception.\n     *\n     * If no exceptions were suppressed or {@linkplain\n     * #Throwable(String, Throwable, boolean, boolean) suppression is\n     * disabled}, an empty array is returned.  This method is\n     * thread-safe.  Writes to the returned array do not affect future\n     * calls to this method.\n     *\n     * @return an array containing all of the exceptions that were\n     *         suppressed to deliver this exception.\n     * @since 1.7\n     */\n    public final synchronized Throwable[] getSuppressed() {\n        if (suppressedExceptions \u003d\u003d SUPPRESSED_SENTINEL ||\n            suppressedExceptions \u003d\u003d null)\n            return EMPTY_THROWABLE_ARRAY;\n        else\n            return suppressedExceptions.toArray(EMPTY_THROWABLE_ARRAY);\n    }\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

6åé 29, 2024 3:19:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
åxçê: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/Throwable.java"
  ]
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:695)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2024.06.29 15:19:02 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java

Uri: jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/Throwable.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.documentHighlights(WorkspaceLspService.scala:452)
	scala.meta.metals.lsp.DelegatingScalaService.documentHighlights(DelegatingScalaService.scala:87)
	jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

6åé 29, 2024 3:19:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
èdëÂ: Internal error: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.MetalsLspService.documentHighlights(MetalsLspService.scala:1040)
	at scala.meta.internal.metals.WorkspaceLspService.documentHighlights(WorkspaceLspService.scala:452)
	at scala.meta.metals.lsp.DelegatingScalaService.documentHighlights(DelegatingScalaService.scala:87)
	at jdk.internal.reflect.GeneratedMethodAccessor19.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.06.29 15:19:02 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java

Uri: jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/Throwable.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.semanticTokensFull(WorkspaceLspService.scala:542)
	scala.meta.metals.lsp.DelegatingScalaService.semanticTokensFull(DelegatingScalaService.scala:208)
	jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

2024.06.29 15:19:02 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java

Uri: jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/Throwable.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.inlayHints(WorkspaceLspService.scala:440)
	scala.meta.metals.lsp.DelegatingScalaService.inlayHints(DelegatingScalaService.scala:213)
	jdk.internal.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

2024.06.29 15:19:02 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java

Uri: jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/Throwable.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:532)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

6åé 29, 2024 3:19:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
èdëÂ: Internal error: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1235)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1234)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:532)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	at jdk.internal.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

2024.06.29 15:19:02 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java

Uri: jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/Throwable.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.codeLens(WorkspaceLspService.scala:527)
	scala.meta.metals.lsp.DelegatingScalaService.codeLens(DelegatingScalaService.scala:150)
	jdk.internal.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

6åé 29, 2024 3:19:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
èdëÂ: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$3(MetalsLspService.scala:1225)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$codeLens$2(MetalsLspService.scala:1224)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:470)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2024.06.29 15:19:02 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java

Uri: jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/Throwable.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.documentSymbol(WorkspaceLspService.scala:457)
	scala.meta.metals.lsp.DelegatingScalaService.documentSymbol(DelegatingScalaService.scala:91)
	jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

6åé 29, 2024 3:19:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
èdëÂ: Internal error: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$documentSymbol$1(MetalsLspService.scala:1055)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$apply$2(CancelTokens.scala:26)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 13 more

2024.06.29 15:19:02 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java

Uri: jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/Throwable.java


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:532)
	scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	jdk.internal.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

6åé 29, 2024 3:19:03 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
èdëÂ: Internal error: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$foldingRange$1(MetalsLspService.scala:1235)
	at scala.meta.internal.metals.CancelTokens$.future(CancelTokens.scala:38)
	at scala.meta.internal.metals.MetalsLspService.foldingRange(MetalsLspService.scala:1234)
	at scala.meta.internal.metals.WorkspaceLspService.foldingRange(WorkspaceLspService.scala:532)
	at scala.meta.metals.lsp.DelegatingScalaService.foldingRange(DelegatingScalaService.scala:155)
	at jdk.internal.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 26 more

6åé 29, 2024 3:19:05 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
åxçê: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Program%20Files/Amazon%20Corretto/jdk11.0.3_7/lib/src.zip%21/java.base/java/lang/Throwable.java"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 22: jar:file:///C:/Program Files/Amazon Corretto/jdk11.0.3_7/lib/src.zip!/java.base/java/lang/Throwable.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

6åé 29, 2024 3:21:43 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1776
6åé 29, 2024 3:21:44 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 1782
6åé 29, 2024 3:23:43 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2232
6åé 29, 2024 3:24:13 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2525
2024.06.29 15:24:19 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
scala.meta.tokenizers.TokenizeException: <input>:50: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
            NotFound(s"Exam result with id $")
                       ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:598)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 29, 2024 3:24:41 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2667
6åé 29, 2024 3:25:07 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2881
6åé 29, 2024 3:25:11 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 2909
2024.06.29 15:25:20 INFO  compiling root (1 scala source)
2024.06.29 15:25:20 INFO  time: compiled root in 0.31s
2024.06.29 15:25:32 WARN  Using indexes to guess the definition of ExamIdDto
6åé 29, 2024 3:25:32 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3004
6åé 29, 2024 3:26:05 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3017
6åé 29, 2024 3:26:10 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3026
6åé 29, 2024 3:26:11 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3035
6åé 29, 2024 3:26:15 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3044
6åé 29, 2024 3:26:23 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3053
6åé 29, 2024 3:26:25 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3062
6åé 29, 2024 3:26:28 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3067
6åé 29, 2024 3:26:32 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3077
6åé 29, 2024 3:26:35 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3089
6åé 29, 2024 3:26:38 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3114
2024.06.29 15:27:10 INFO  compiling root (1 scala source)
2024.06.29 15:27:10 INFO  time: compiled root in 0.27s
6åé 29, 2024 3:28:26 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3631
6åé 29, 2024 3:28:27 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3646
6åé 29, 2024 3:28:54 åﬂå„ scala.meta.internal.pc.CompilerAccess handleError
èdëÂ: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\sakai\Developments\exam-manager\.metals\.reports\metals-full\2024-06-29\r_compiler-error_(root)_15-28-54-127.md
6åé 29, 2024 3:29:24 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3896
6åé 29, 2024 3:29:40 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 3989
6åé 29, 2024 3:30:09 åﬂå„ scala.meta.internal.pc.CompilerAccess handleError
èdëÂ: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\sakai\Developments\exam-manager\.metals\.reports\metals-full\2024-06-29\r_compiler-error_(root)_15-30-09-144.md
6åé 29, 2024 3:30:38 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4362
6åé 29, 2024 3:31:10 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4655
6åé 29, 2024 3:31:16 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4698
2024.06.29 15:31:21 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
scala.meta.tokenizers.TokenizeException: <input>:54: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
                        NotFound(s"Exam result with id $`")
                                   ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:598)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.29 15:31:22 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
scala.meta.tokenizers.TokenizeException: <input>:54: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
                        NotFound(s"Exam result with id $")
                                   ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:598)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 29, 2024 3:31:57 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 4894
2024.06.29 15:32:15 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
scala.meta.tokenizers.TokenizeException: <input>:57: error: unclosed string interpolation
                    InternalServerError(s"Failed to fetch exam result: )}
                                          ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:605)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.29 15:32:17 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
scala.meta.tokenizers.TokenizeException: <input>:57: error: unclosed string literal
                    InternalServerError(s"Failed to fetch exam result: "")}
                                                                        ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:509)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:361)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.29 15:32:19 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
scala.meta.tokenizers.TokenizeException: <input>:57: error: unclosed string literal
                    InternalServerError(s"Failed to fetch exam result: "")}
                                                                        ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:509)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:361)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.29 15:32:21 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
scala.meta.tokenizers.TokenizeException: <input>:57: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
                    InternalServerError(s"Failed to fetch exam result: $")}
                                          ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:598)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.29 15:32:28 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
scala.meta.tokenizers.TokenizeException: <input>:57: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
                    InternalServerError(s"Failed to fetch exam result: $")}
                                          ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:598)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.29 15:32:29 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\controllers\ExamResultController.scala
scala.meta.tokenizers.TokenizeException: <input>:57: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
                    InternalServerError(s"Failed to fetch exam result: $`")}
                                          ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:598)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.29 15:32:44 INFO  compiling root (1 scala source)
2024.06.29 15:32:44 INFO  time: compiled root in 0.3s
2024.06.29 15:32:57 INFO  compiling root (1 scala source)
2024.06.29 15:32:57 INFO  time: compiled root in 0.26s
2024.06.29 15:33:24 INFO  compiling root (1 scala source)
2024.06.29 15:33:24 INFO  time: compiled root in 0.26s
6åé 29, 2024 4:46:46 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5460
6åé 29, 2024 4:48:34 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5500
6åé 29, 2024 4:48:36 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5508
6åé 29, 2024 4:48:37 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5517
6åé 29, 2024 4:48:38 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5526
2024.06.29 23:21:38 INFO  compiling root (2 scala sources)
2024.06.29 23:21:38 INFO  time: compiled root in 0.57s
6åé 29, 2024 11:22:07 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5850
6åé 29, 2024 11:22:11 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 5885
2024.06.29 23:22:23 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Evaluation.scala
scala.meta.tokenizers.TokenizeException: <input>:7: error: unclosed quoted identifier
case object Excellent extends Evaluation `
                                         ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:456)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:327)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 29, 2024 11:22:37 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 6118
6åé 29, 2024 11:22:48 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 6213
2024.06.29 23:22:54 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Evaluation.scala
scala.meta.tokenizers.TokenizeException: <input>:11: error: unclosed quoted identifier
case object GoodJob extends Evaluation `{}
                                       ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:456)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:327)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.29 23:22:56 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Evaluation.scala
scala.meta.tokenizers.TokenizeException: <input>:11: error: unclosed quoted identifier
case object GoodJob extends Evaluation `{}
                                       ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:456)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:327)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 29, 2024 11:22:56 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 6300
2024.06.29 23:22:57 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Evaluation.scala
scala.meta.tokenizers.TokenizeException: <input>:11: error: unclosed quoted identifier
case object GoodJob extends Evaluation `
                                       ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:456)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:327)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 29, 2024 11:23:02 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 6375
6åé 29, 2024 11:24:43 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7246
2024.06.29 23:25:03 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Evaluation.scala
scala.meta.tokenizers.TokenizeException: <input>:27: error: unclosed quoted identifier
object Evaluation `
                  ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:456)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:327)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.29 23:25:04 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Evaluation.scala
scala.meta.tokenizers.TokenizeException: <input>:27: error: unclosed quoted identifier
object Evaluation `
                  ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:456)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:327)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 29, 2024 11:25:15 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7523
6åé 29, 2024 11:25:23 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 7601
6åé 29, 2024 11:27:18 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 8088
6åé 29, 2024 11:28:27 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 8566
2024.06.29 23:28:46 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Evaluation.scala
scala.meta.tokenizers.TokenizeException: <input>:34: error: Not one of: `$$', `$'ident, `$'this, `$'BlockExpr, `$'_
        case _ => Left(s"Invalid evaluation: $")
                         ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:598)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.29 23:28:48 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\domain\examResult\valueObject\Evaluation.scala
scala.meta.tokenizers.TokenizeException: <input>:34: error: invalid unquote: `$'ident, `$'BlockExpr, `$'this or `$'_ expected
        case _ => Left(s"Invalid evaluation: $val")
                                              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.$anonfun$getStringPart$1(LegacyScanner.scala:544)
	at scala.meta.internal.tokenizers.LegacyScanner.$anonfun$getStringPart$1$adapted(LegacyScanner.scala:541)
	at scala.meta.internal.tokenizers.LegacyTokenData.$anonfun$setIdentifier$1(LegacyTokenData.scala:110)
	at scala.runtime.java8.JFunction1$mcVI$sp.apply(JFunction1$mcVI$sp.scala:18)
	at scala.Option.foreach(Option.scala:437)
	at scala.meta.internal.tokenizers.LegacyTokenData.setIdentifier(LegacyTokenData.scala:101)
	at scala.meta.internal.tokenizers.LegacyTokenData.setIdentifier$(LegacyTokenData.scala:96)
	at scala.meta.internal.tokenizers.LegacyScanner$$anon$2.setIdentifier(LegacyScanner.scala:20)
	at scala.meta.internal.tokenizers.LegacyScanner.identifier$1(LegacyScanner.scala:541)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:593)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.29 23:29:14 INFO  compiling root (2 scala sources)
2024.06.29 23:29:14 INFO  time: compiled root in 0.37s
6åé 29, 2024 11:29:19 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 8966
2024.06.29 23:30:10 INFO  compiling root (3 scala sources)
2024.06.29 23:30:10 INFO  time: compiled root in 0.35s
2024.06.29 23:30:32 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\examResult\valueObject\EvaluationDto.scala
scala.meta.tokenizers.TokenizeException: <input>:5: error: unclosed quoted identifier
object EvaluationDto `
                     ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:456)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:327)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.29 23:30:32 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\dto\infrastructure\examResult\valueObject\EvaluationDto.scala
scala.meta.tokenizers.TokenizeException: <input>:5: error: unclosed quoted identifier
object EvaluationDto {`}
                      ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:456)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:327)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 29, 2024 11:30:55 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 9353
6åé 29, 2024 11:31:21 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 9573
2024.06.29 23:31:49 INFO  compiling root (3 scala sources)
2024.06.29 23:31:49 INFO  time: compiled root in 0.35s
6åé 29, 2024 11:32:49 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 9836
2024.06.29 23:33:02 ERROR scalafmt: C:\Users\sakai\Developments\exam-manager\app\domain\examResult\entity\ExamResult.scala:10: error: [dialect scala213] identifier expected but : found
    evaluation: Evaluation = NotEvaluated
              ^
2024.06.29 23:33:02 INFO  compiling root (5 scala sources)
2024.06.29 23:33:02 INFO  time: compiled root in 0.18s
2024.06.29 23:33:09 INFO  compiling root (5 scala sources)
2024.06.29 23:33:09 INFO  time: compiled root in 0.33s
2024.06.29 23:34:51 INFO  compiling root (6 scala sources)
2024.06.29 23:34:51 INFO  time: compiled root in 0.38s
6åé 29, 2024 11:35:06 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 10328
2024.06.29 23:35:58 INFO  compiling root (6 scala sources)
2024.06.29 23:35:58 INFO  time: compiled root in 0.39s
6åé 29, 2024 11:35:59 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 10706
6åé 29, 2024 11:36:01 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 10709
2024.06.29 23:38:27 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\infrastructure\db\table\ExamResultTable.scala
scala.meta.tokenizers.TokenizeException: <input>:19: error: unclosed string literal
  def evaluation: Rep[String] = column[String]("eva\")
                                               ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:509)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:361)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.29 23:38:49 INFO  compiling root (7 scala sources)
2024.06.29 23:38:49 INFO  time: compiled root in 0.52s
6åé 29, 2024 11:41:18 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 11339
6åé 29, 2024 11:41:31 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 11348
2024.06.29 23:42:04 INFO  compiling root (9 scala sources)
2024.06.29 23:42:04 INFO  time: compiled root in 0.63s
2024.06.29 23:42:17 INFO  compiling root (9 scala sources)
2024.06.29 23:42:17 INFO  time: compiled root in 0.58s
6åé 29, 2024 11:42:39 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 11506
2024.06.29 23:43:18 INFO  compiling root (9 scala sources)
2024.06.29 23:43:18 INFO  time: compiled root in 0.49s
2024.06.29 23:54:45 INFO  compiling root (10 scala sources)
2024.06.29 23:54:45 INFO  time: compiled root in 0.6s
2024.06.29 23:55:57 INFO  compiling root (9 scala sources)
2024.06.29 23:55:58 INFO  time: compiled root in 1.12s
6åé 29, 2024 11:56:00 åﬂå„ org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 12064
2024.06.29 23:56:11 INFO  compiling root (9 scala sources)
2024.06.29 23:56:11 INFO  time: compiled root in 0.52s
2024.06.30 00:24:39 INFO  compiling root (10 scala sources)
2024.06.30 00:24:39 INFO  time: compiled root in 0.55s
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/trait/Evaluator.scala in Seq[<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/trait/Evaluator.scala, 81, 81, 94)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/trait/Evaluator.scala in Seq[<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/trait/Evaluator.scala, 81, 81, 87)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/trait/Evaluator.scala in Seq[<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/trait/Evaluator.scala, 81, 81, 88)
2024.06.30 00:25:24 INFO  compiling root (10 scala sources)
2024.06.30 00:25:24 INFO  time: compiled root in 0.52s
2024.06.30 00:30:43 INFO  compiling root (11 scala sources)
2024.06.30 00:30:43 INFO  time: compiled root in 0.61s
6åé 30, 2024 12:30:56 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 12530
6åé 30, 2024 12:31:46 åﬂëO scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
èÓïÒ: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
6åé 30, 2024 12:31:46 åﬂëO scala.meta.internal.pc.CompilerAccess handleError
èdëÂ: A severe compiler error occurred, full details of the error can be found in the error report C:\Users\sakai\Developments\exam-manager\.metals\.reports\metals-full\2024-06-30\r_compiler-error_(root)_00-31-46-540.md
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala in Seq[<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala, 149, 149, 162)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala in Seq[<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala, 149, 149, 155)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala in Seq[<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala, 149, 149, 157)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala in Seq[<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala, 149, 149, 158)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala in Seq[<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala, 149, 149, 159)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala in Seq[<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala, 149, 149, 158)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala in Seq[<error>]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala, 149, 149, 159)
something's wrong: no file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala in Seq[domain.examResult.entity.ExamResult]RangePosition(file:///C:/Users/sakai/Developments/exam-manager/app/domain/evaluator/impl/QuartileEvaluator.scala, 193, 193, 208)
6åé 30, 2024 12:33:12 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 13342
6åé 30, 2024 12:33:37 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 13538
2024.06.30 00:33:55 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\domain\evaluator\impl\QuartileEvaluator.scala
scala.meta.tokenizers.TokenizeException: <input>:11: error: unclosed quoted identifier
        val q3Index = sortedResults.length `
                                           ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:456)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:327)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.06.30 00:35:48 ERROR Failed to tokenize input for semantic tokens for C:\Users\sakai\Developments\exam-manager\app\domain\evaluator\impl\QuartileEvaluator.scala
scala.meta.tokenizers.TokenizeException: <input>:18: error: unclosed quoted identifier
            val evaluation = result.score.value match `    
                                                      ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getBackquotedIdent(LegacyScanner.scala:456)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:327)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:30)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

6åé 30, 2024 12:45:10 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 15080
6åé 30, 2024 12:45:19 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 15168
6åé 30, 2024 12:46:15 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 15569
6åé 30, 2024 1:11:48 åﬂëO org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
åxçê: Unmatched cancel notification for request id 15645
